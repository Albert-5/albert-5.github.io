<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>albert</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://albert-5.github.io/"/>
  <updated>2019-04-29T08:04:49.557Z</updated>
  <id>https://albert-5.github.io/</id>
  
  <author>
    <name>albert</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>toefl &amp; ielts</title>
    <link href="https://albert-5.github.io/2019/04/28/toefl-ielts/"/>
    <id>https://albert-5.github.io/2019/04/28/toefl-ielts/</id>
    <published>2019-04-28T03:50:51.000Z</published>
    <updated>2019-04-29T08:04:49.557Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="TOEFL"><a href="#TOEFL" class="headerlink" title="TOEFL"></a>TOEFL</h2><p><strong>托福是美国教育考试中心开发出来的给非英语国家学生的英语水平测试</strong></p><h3 id="1、认可国"><a href="#1、认可国" class="headerlink" title="1、认可国"></a>1、认可国</h3><blockquote><p><strong>北美国家（特别是美国）包括日本对托福成绩的接受度较高；</strong></p><p><strong>英联邦国家（英国、荷兰、加拿大、澳大利亚、新西兰、瑞士等）更接受甚至只接受托福成绩；</strong></p></blockquote><h3 id="2、考试形式"><a href="#2、考试形式" class="headerlink" title="2、考试形式"></a>2、考试形式</h3><p><strong>雅思和托福的考试内容也不相同，虽然都是对“听说读写”四种英语能力的测试，但是雅思更加注重生活应用，词汇量没有托福要求的那么多；而托福更加注重学术方面，对专业性的要求更高一点</strong></p><blockquote><p><strong>托福是纯机考，也就是说不管是听力、阅读还是写作，甚至口语都是对着一台电脑，以“人机”的方式进行考核的</strong>。</p></blockquote><h3 id="3、分数分配"><a href="#3、分数分配" class="headerlink" title="3、分数分配"></a>3、分数分配</h3><p><strong>托福是四项单项各30分，总计120分，最后几项分数加起来为总成绩；考试时间大概在4个小时左右，可能会有加试的情况；</strong></p><p><strong>其中，托福成绩在100分以上是不错的分数</strong></p><blockquote><p><strong>有限期为两年</strong></p></blockquote><h3 id="4、考试费用"><a href="#4、考试费用" class="headerlink" title="4、考试费用"></a>4、考试费用</h3><table><thead><tr><th>项目</th><th>金额</th></tr></thead><tbody><tr><td><strong>托福网考考试费</strong></td><td><strong>1985</strong></td></tr><tr><td><strong>逾期报名附加费</strong></td><td><strong>310</strong></td></tr><tr><td><strong>转考费</strong></td><td><strong>620</strong></td></tr><tr><td><strong>恢复已取消的成绩</strong></td><td><strong>154</strong></td></tr><tr><td><strong>成绩赠送费（每份）</strong></td><td><strong>146</strong></td></tr><tr><td><strong>口语或写作单项复议</strong></td><td><strong>615</strong></td></tr><tr><td><strong>口语和写作双项复议</strong></td><td><strong>1229</strong></td></tr><tr><td><strong>托福复习套餐Prem(不包含考试费)</strong></td><td><strong>1086</strong></td></tr><tr><td><strong>托福复习套餐prep</strong></td><td><strong>395</strong></td></tr><tr><td><strong>折扣报名费</strong></td><td><strong>1716</strong></td></tr><tr><td><strong>考费差额 1</strong></td><td><strong>44</strong></td></tr><tr><td><strong>考费差额 2</strong></td><td><strong>224</strong></td></tr><tr><td><strong>考费差额 3</strong></td><td><strong>1104.5</strong></td></tr><tr><td></td></tr></tbody></table><h2 id="IELTS"><a href="#IELTS" class="headerlink" title="IELTS"></a>IELTS</h2><h3 id="1、认可国-1"><a href="#1、认可国-1" class="headerlink" title="1、认可国"></a>1、认可国</h3><p><strong>雅思是英国大使馆文化教育处来出题的</strong></p><blockquote><p><strong>相对的英国目前大部分高校只认可雅思成绩</strong></p></blockquote><h3 id="2、考试形式-1"><a href="#2、考试形式-1" class="headerlink" title="2、考试形式"></a>2、考试形式</h3><blockquote><p><strong>雅思</strong>则是笔试 +面试的形式，口语环节是面对面直接和考官交流的，分数的弹性相对更大一点。对于喜欢交流的人而言考雅思更能会更加有利。</p></blockquote><h3 id="3、分数分配-1"><a href="#3、分数分配-1" class="headerlink" title="3、分数分配"></a>3、分数分配</h3><p><strong>雅思的四项单项都是九分满分制，最后以四项平均分定为最终分数，一般情况下，雅思在7分以上是不错的成绩</strong></p><blockquote><p>有效期为<strong>两年</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="English" scheme="https://albert-5.github.io/categories/English/"/>
    
    
      <category term="toefl" scheme="https://albert-5.github.io/tags/toefl/"/>
    
      <category term="ielts" scheme="https://albert-5.github.io/tags/ielts/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://albert-5.github.io/2019/04/22/hello-world/"/>
    <id>https://albert-5.github.io/2019/04/22/hello-world/</id>
    <published>2019-04-22T15:42:22.451Z</published>
    <updated>2019-04-29T08:18:51.226Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><div><strong>🚩推荐阅读</strong>（由<a href="https://github.com/huiwang/hexo-recommended-posts">hexo文章推荐插件</a>驱动）<ul><li><a href="https://zymin.cn/arcticle/hexo-vps.html">Hexo与阿里云虚拟主机搭建博客</a></li><li><a href="https://zymin.cn/arcticle/hexo+ejs+material.html">hexo+ejs+material x 添加统计代码</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://albert-5.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://albert-5.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>sort_algorithm</title>
    <link href="https://albert-5.github.io/2019/03/28/sort-algorithm/"/>
    <id>https://albert-5.github.io/2019/03/28/sort-algorithm/</id>
    <published>2019-03-28T09:47:54.000Z</published>
    <updated>2019-04-29T09:49:32.228Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a><strong>一、概念</strong></h1><p><strong>排序算法是一种能将一串数据按照特定顺序进行排列的一种算法</strong></p><p><strong><font color="#660000">稳定性:</font></strong> <font face="宋体">稳定排序算法会让原本有相等数值的记录维持相对顺序，也就说当有两个相等的数据A，B时，且原本A在B的前面，则在排序后A仍然是在B的前面，这就是稳定性的概念；</font></p><h1 id="二、冒泡排序"><a href="#二、冒泡排序" class="headerlink" title="二、冒泡排序"></a><strong>二、冒泡排序</strong></h1><h2 id="1、啥子叫冒泡排序"><a href="#1、啥子叫冒泡排序" class="headerlink" title="1、啥子叫冒泡排序"></a>1、啥子叫冒泡排序</h2><blockquote><p>它是一种较为简单的排序算法，具体过程就是遍历所要排序的数列，每一次比较两个数，如果他们顺序错误则交换顺序，直至所有的数据交换完毕，也就是完成了数列的排序；由于在交换过程中，最小的元素会处于顶端的位置，所以叫做<font color="#32CD32"><strong>冒泡排序</strong></font> 。</p></blockquote><h2 id="2、过程分析"><a href="#2、过程分析" class="headerlink" title="2、过程分析"></a>2、过程分析</h2><blockquote><font color="#008B00" face="黑体">在实现冒泡排序的过程中，每次循环之后，数列中最大的元素移动到了最末端，然后在进行下一次的循环遍历，选出次大的元素，继续循环，直至排完序，则最小的处在顶端的位置</font></blockquote><h2 id="3、实现"><a href="#3、实现" class="headerlink" title="3、实现"></a>3、实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(alist)<span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>，len(alist)<span class="number">-1</span>-j): <span class="comment"># 操作下标而不是直接作用于元素上</span></span><br><span class="line">            <span class="keyword">if</span> alist[i] &gt; alist[i+<span class="number">1</span>]:</span><br><span class="line">                alist[i],alist[i+<span class="number">1</span>] = alist[i+<span class="number">1</span>],alist[i]</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 优化情况</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(alist)<span class="number">-1</span>):</span><br><span class="line">        count = <span class="number">0</span>  <span class="comment"># 记录交换的次数</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(alist)<span class="number">-1</span>-j):</span><br><span class="line">            <span class="keyword">if</span> alist[i] &gt; alist[i+<span class="number">1</span>]:</span><br><span class="line">                alist[i],alist[i+<span class="number">1</span>] = alist[i+<span class="number">1</span>],alist[i]</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> count <span class="keyword">is</span> <span class="number">0</span>:  <span class="comment"># 如果count为0，则说明没有进行交换</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    li = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">12</span>,<span class="number">9</span>]</span><br><span class="line">    bubble_sort(li)</span><br><span class="line">    print(li)</span><br></pre></td></tr></table></figure><blockquote><p><strong><font color="#CD2626">说明：</font></strong> </p><ul><li>最优时间复杂度为<font color="#dd00dd">O(n)</font> &lt;<strong><font size="2">遍历一遍发现全都排好了</font></strong>&gt;</li><li>最坏时间复杂度为<font color="#dd00dd">O(n^2)</font></li><li>稳定</li></ul></blockquote><h1 id="三、选择排序"><a href="#三、选择排序" class="headerlink" title="三、选择排序"></a><strong>三、选择排序</strong></h1><h2 id="1、思想"><a href="#1、思想" class="headerlink" title="1、思想"></a>1、思想</h2><p><strong>一组数据相当于分成了两个部分，后一部分是待排数列，初始默认第一个元素是最小值，然后从这些待排的数列中进行遍历找到最小值并记录下标位置，然后与记录的初始最小值比较，如果找到的小于初始值则进行交换，然后继续遍历；也就是说,<font color="#CD2626">整个过程就是在找最小值。</font></strong></p><h2 id="2、实现"><a href="#2、实现" class="headerlink" title="2、实现"></a>2、实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    <span class="string">'''选择排序'''</span></span><br><span class="line">    n = len(alist)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(n<span class="number">-1</span>):</span><br><span class="line">        min_index = j</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(j+<span class="number">1</span>,n<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> alist[min_index] &gt; alist[i]:</span><br><span class="line">                min_index = i</span><br><span class="line">        alist[j], alist[min_index] = alist[min_index], alist[j]</span><br></pre></td></tr></table></figure><p><strong><font color="#267C19">时间复杂度：O(n^2)</font></strong></p><p><strong><font color="#267C19">稳定性：简单的考虑这种情况，在一个乱序的列表中[11,23,12,23,6],排序时第一个23较大，则在排序时会由于交换而移动到最后面，则在排列第二个23时，因为它不比第一个23大，所以不变化，由此可见，二者交换了顺序，稳定性就是不稳定</font></strong></p><h1 id="四、插入排序"><a href="#四、插入排序" class="headerlink" title="四、插入排序"></a><strong>四、插入排序</strong></h1><h2 id="1、思想-1"><a href="#1、思想-1" class="headerlink" title="1、思想"></a>1、思想</h2><p><strong>通过构建有序序列，对于未排列的数据，在已经排好序的数列中从后向前进行扫描，找到相应的位置并插入，插入排序在实现上，在从后向前扫描的过程中，需要反复把已经排序元素逐步向后移动</strong></p><h2 id="2、实现-1"><a href="#2、实现-1" class="headerlink" title="2、实现"></a>2、实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    <span class="string">'''插入排序'''</span></span><br><span class="line">    n = len(alist)</span><br><span class="line">    <span class="comment"># j表示循环次数，也即是有多少个元素执行此过程</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">        i = j</span><br><span class="line">        <span class="comment"># i是表示从从待排序列中取出第一个，然后进行扫描比较</span></span><br><span class="line">        <span class="keyword">while</span> i &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> alist[i] &lt; alist[i<span class="number">-1</span>]:</span><br><span class="line">                alist[i], alist[i<span class="number">-1</span>] = alist[i<span class="number">-1</span>], alist[i]</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="3、时间复杂度"><a href="#3、时间复杂度" class="headerlink" title="3、时间复杂度"></a>3、时间复杂度</h2><p><strong><font color="#227BA0">最优时间复杂度: O(n) &lt;数列已按照升序排列，这个时间复杂度仅仅是遍历的时间&gt;</font></strong></p><p><strong><font color="#227BA0">最坏时间复杂度: O(n^2) </font></strong></p><p><strong><font color="#227BA0">稳定性:稳定</font></strong></p><h1 id="五、希尔排序"><a href="#五、希尔排序" class="headerlink" title="五、希尔排序"></a><strong>五、希尔排序</strong></h1><h2 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h2><p><strong>它是插入排序的一种，也称为缩小增量排序，是直接插入排序算法的一种更为高效的改进版；但是它是不稳定的。<font color="#6C2397">具体思想</font>就是把数据按照下标的一定增量进行分组，然后对每一个组进行插入排序，随着增量的一步步减少，每一组包含的数据越多，当增量为1时，整个排序完成！</strong></p><h2 id="2、实现-2"><a href="#2、实现-2" class="headerlink" title="2、实现"></a>2、实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shell_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    n = len(alist)</span><br><span class="line">    gap = n // <span class="number">2</span>  <span class="comment"># 确定步长</span></span><br><span class="line">    <span class="keyword">while</span> gap &gt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(gap,n):</span><br><span class="line">            i = j</span><br><span class="line">            <span class="keyword">while</span> i &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">if</span> alist[i] &lt; alist[i-gap]:</span><br><span class="line">                    alist[i],alist[i-gap] = alist[i-gap],alist[i]</span><br><span class="line">                    i -= gap</span><br><span class="line">                 <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        gap //= <span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong><font color="#6C2397">最优时间复杂度: 无法确定</font></strong></p><p><strong><font color="#6C2397">最坏时间复杂度: O(n) </font></strong></p><p><strong><font color="#6C2397">稳定性: 不稳定</font></strong></p><h1 id="六、快速排序"><a href="#六、快速排序" class="headerlink" title="六、快速排序"></a><strong>六、快速排序</strong></h1><h2 id="1、思想-2"><a href="#1、思想-2" class="headerlink" title="1、思想"></a>1、思想</h2><hr><ul><li><strong>先从给定数列中取出一个基准数据值，记为x</strong></li><li><strong>排序过程中，小于x的数据全放在左边，大于x的数据全放在其右边</strong></li><li><strong>然后再次重复上述步骤即可</strong></li></ul><h2 id="2、实现-3"><a href="#2、实现-3" class="headerlink" title="2、实现"></a>2、实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span><span class="params">(alist,first,last)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> first &gt;= last:</span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">    mid_value = alist[<span class="number">0</span>]</span><br><span class="line">    low = first</span><br><span class="line">    high = last</span><br><span class="line">    <span class="keyword">while</span>  low &lt; high:</span><br><span class="line">        <span class="comment"># high左移</span></span><br><span class="line">        <span class="keyword">while</span> low &lt; high <span class="keyword">and</span> alist[high] &gt;= mid_value:</span><br><span class="line">            high -= <span class="number">1</span></span><br><span class="line">        alist[low] = alist[high]</span><br><span class="line">        <span class="comment"># low右移，在判断里面进行移动low的值以防它移动过度</span></span><br><span class="line">        <span class="keyword">while</span> low &lt; high <span class="keyword">and</span> alist[low] &lt; mid_value:</span><br><span class="line">            low += <span class="number">1</span></span><br><span class="line">        alist[high] = alist[low]</span><br><span class="line">    alist[low] = mid_value</span><br><span class="line">    <span class="comment"># 此时low的位置就是初始的那个值</span></span><br><span class="line">    <span class="comment"># 递归使用函数本身，快排左边</span></span><br><span class="line">    quick_sort(alist,first,low<span class="number">-1</span>)</span><br><span class="line">    <span class="comment"># 递归快排右边</span></span><br><span class="line">    quick_sort(aliist,low+<span class="number">1</span>,last)</span><br></pre></td></tr></table></figure><ul><li><strong><font color="9E33FF">最优时间复杂度： O(n*logn)</font></strong></li><li><strong><font color="9E33FF">最坏时间复杂度： O(n^2) </font>  # 这种情况下就是每次再分的时候都只能分为总是第一项和剩余项</strong></li><li><strong><font color="9E33FF">稳定性：不稳定</font></strong></li></ul><h1 id="七、归并算法"><a href="#七、归并算法" class="headerlink" title="七、归并算法"></a><strong>七、归并算法</strong></h1><h2 id="1、思想-3"><a href="#1、思想-3" class="headerlink" title="1、思想"></a>1、思想</h2><hr><p><strong>&nbsp;&nbsp;分而治之，就是将一组待排序列向下均分、均分、均分······直至每一个小分组中只有一个元素，然后向上走进行合并操作，以致达到排序的目的</strong></p><h2 id="2、实现-4"><a href="#2、实现-4" class="headerlink" title="2、实现"></a>2、实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    <span class="string">'''归并排序'''</span></span><br><span class="line">    <span class="comment"># 分而治之，先进行分的操作</span></span><br><span class="line">    n = len(alist)</span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> alist</span><br><span class="line">    mid = n/<span class="number">2</span></span><br><span class="line">    <span class="comment"># 分的结果为两个新的列表left 和 right;以下是递归操作</span></span><br><span class="line">    left = merge_sort(alist[:mid])</span><br><span class="line">    right = merge_sort(alist[mid+<span class="number">1</span>:])</span><br><span class="line">    left_pointer, right_pointer = <span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">while</span> left[left_pointer] &lt; len(left) <span class="keyword">and</span> right[right_pointer] &lt; len(right):</span><br><span class="line">        <span class="keyword">if</span> left[left_pointer] &lt;= right[right_pointer]:</span><br><span class="line">            result.append(left[left_pointe])</span><br><span class="line">            left_pointer += <span class="number">1</span></span><br><span class="line">         <span class="keyword">else</span>:</span><br><span class="line">            result.append(right[right_pointer])</span><br><span class="line">            right_pointer += <span class="number">1</span></span><br><span class="line">    result += left[left_pointer:]</span><br><span class="line">    result += right[right_pointer:]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="comment">#-----------------------------------------------------------</span></span><br></pre></td></tr></table></figure><p><strong><font color="8E33FE"> 最优时间复杂度：O(n*logn) </font></strong></p><p><strong><font color="9E33FF">最坏时间复杂度：O(n*logn) </font>  # 这种情况下就是每次再分的时候都只能分为总是第一项和剩余项</strong></p><p><strong><font color="9E33FF">稳定性：稳定</font></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="算法" scheme="https://albert-5.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="排序算法" scheme="https://albert-5.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
      <category term="插入排序" scheme="https://albert-5.github.io/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
      <category term="归并排序" scheme="https://albert-5.github.io/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    
      <category term="快速排序" scheme="https://albert-5.github.io/tags/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>AnyConnect</title>
    <link href="https://albert-5.github.io/2019/02/28/AnyConnect/"/>
    <id>https://albert-5.github.io/2019/02/28/AnyConnect/</id>
    <published>2019-02-28T09:43:44.000Z</published>
    <updated>2019-04-29T09:45:40.881Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="最近发现使用Cisco-AnyConnect在Win8-1上系统上连接VPN时，会出现anyconnect-was-not-able-to-establish-a-connection-to-the-specified-secure-gateway问题导致无法成功连接VPN，错误提示如下所示"><a href="#最近发现使用Cisco-AnyConnect在Win8-1上系统上连接VPN时，会出现anyconnect-was-not-able-to-establish-a-connection-to-the-specified-secure-gateway问题导致无法成功连接VPN，错误提示如下所示" class="headerlink" title="最近发现使用Cisco AnyConnect在Win8.1上系统上连接VPN时，会出现anyconnect was not able to establish a connection to the specified secure gateway问题导致无法成功连接VPN，错误提示如下所示"></a><strong>最近发现使用Cisco AnyConnect在Win8.1上系统上连接VPN时，会出现anyconnect was not able to establish a connection to the specified secure gateway问题导致无法成功连接VPN，错误提示如下所示</strong></h4><blockquote><p><strong>problem:</strong></p><p><strong>AnyConnect was not able to establish a connection to the specified secure gateway. Please try connecting again.</strong></p></blockquote><hr><p>其实解决方法也是很简单的，只需要：</p><blockquote><p><strong>此电脑</strong>鼠标右击 -&gt;<strong>管理</strong> -&gt;<strong>服务于应用程序</strong> -&gt; <strong>服务</strong></p><p><strong>-&gt; 禁用 Internet Connection Sharing即可</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="疑难杂症" scheme="https://albert-5.github.io/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
      <category term="Windows 10" scheme="https://albert-5.github.io/tags/Windows-10/"/>
    
      <category term="VPN" scheme="https://albert-5.github.io/tags/VPN/"/>
    
      <category term="anyconnect" scheme="https://albert-5.github.io/tags/anyconnect/"/>
    
  </entry>
  
  <entry>
    <title>CSS</title>
    <link href="https://albert-5.github.io/2019/01/14/CSS/"/>
    <id>https://albert-5.github.io/2019/01/14/CSS/</id>
    <published>2019-01-14T09:34:51.000Z</published>
    <updated>2019-04-29T09:39:54.859Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、CSS概述"><a href="#一、CSS概述" class="headerlink" title="一、CSS概述"></a>一、CSS概述</h2><p><strong>内容的样式</strong></p><p>英文全称: <strong>Cascating Style Sheets</strong><a href="层叠样式表">^注释1</a></p><h2 id="二、CSS语法"><a href="#二、CSS语法" class="headerlink" title="二、CSS语法"></a>二、CSS语法</h2><p><strong>基本语法格式</strong></p><blockquote><p>p{<br>font-size:#;——&gt;字体大小<br>color:blue; ——–&gt;字体颜色</p><p>font-weight:bold;——&gt;加粗<br>}</p><p><strong>注意：</strong></p><p>1、最后一条声明可以没有分号，但是为了以后修改方便，一般也加上分号。</p><p>2、为了使用样式更加容易阅读，可以将每条代码写在一个新行里。</p></blockquote><h3 id="1、css添加方法"><a href="#1、css添加方法" class="headerlink" title="1、css添加方法"></a>1、css添加方法</h3><h4 id="a：-行内添加"><a href="#a：-行内添加" class="headerlink" title="a： 行内添加"></a>a： 行内添加</h4><blockquote><p>&lt;!DOCTYPE HTML&gt;</p><p><html><br>   <head><meta name="generator" content="Hexo 3.8.0"><br>       </head><body><br>           <p style="color:#"><br>           学习笔记CSS篇<br>           </p><br>       </body><br>   <br></html><br>&lt;/!doctype&gt;</p></blockquote><h4 id="b-内嵌样式"><a href="#b-内嵌样式" class="headerlink" title="b: 内嵌样式"></a>b: 内嵌样式</h4><blockquote><p>&lt;!DOCTYPE HTML&gt;</p><p><html><br>   <head><meta name="generator" content="Hexo 3.8.0"><br>       <style type="text/css"><br>           p{<br>               color:black;/<em>设置字体颜色</em>/<br>           }<br>       </style><br>       </head><body><br>           <p><br>           学习笔记CSS篇,内嵌样式的添加<br>           </p><br>       </body><br>   <br></html><br>&lt;/!doctype&gt;</p></blockquote><p><strong><style type="text/css"></strong></p><p>p{</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color:#;</span><br></pre></td></tr></table></figure><p>}</p><p><strong></style></strong></p><h4 id="c-单独文件"><a href="#c-单独文件" class="headerlink" title="c: 单独文件"></a>c: 单独文件</h4><p><strong>外部样式表文件 style.css</strong></p><p><strong>p{color：#;}</strong></p><p><strong>网页文件 12.html</strong></p><blockquote><head><meta name="generator" content="Hexo 3.8.0"><br>    <link rel="stylesheet" href="css/style.css"><br></head><p><strong>使用 href 链接到 css文件</strong></p></blockquote><p><strong>单独样式的优点</strong></p><p>页面结构HTML代码与样式CSS代码的完全分离，便于维护</p><p>如果需要改变网站的风格，只需要修改公共CSS文件即可</p><p>可以在同一个HTML文件中引用多个外部样式表</p><h3 id="2、-添加方式的优先级"><a href="#2、-添加方式的优先级" class="headerlink" title="2、 添加方式的优先级"></a>2、 添加方式的优先级</h3><p><strong>_ 多重样式可以层叠，可以覆盖</strong></p><p><strong>_ 样式的<em>优先级</em>按照“就近原则”</strong></p><p><strong>_ 行内样式 &gt; 内嵌样式 &gt; 链接样式 &gt; 浏览器默认样式</strong></p><h2 id="三、CSS选择器"><a href="#三、CSS选择器" class="headerlink" title="三、CSS选择器"></a>三、CSS选择器</h2><h4 id="1、标签选择器"><a href="#1、标签选择器" class="headerlink" title="1、标签选择器"></a>1、标签选择器</h4><p>采用内嵌式时，以<strong>body、h1、p等</strong>直接作为标签名</p><blockquote><style type="text/css">body{background-color:##;     text-align:#;     font-size:#;}h1{   font:"黑体"；font-size:#;    }p{   color:#; font-size:"#";  }hr{width:220px;}</style><body><br><br><h1><br>标题<br></h1><br><br><hr><br><br><p>正文的段落</p>版权所有<br><br></body></blockquote><h4 id="2、类别选择器"><a href="#2、类别选择器" class="headerlink" title="2、类别选择器"></a>2、类别选择器</h4><blockquote><p><code>printf()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">&gt; p&#123; font-size:12px;&#125;</span><br><span class="line">&gt; .one&#123; font-size:13px;&#125;</span><br><span class="line">&gt; .two&#123; font-size:14px;&#125;</span><br><span class="line">&gt; &lt;/style&gt;</span><br><span class="line">&gt; &lt;body&gt;</span><br><span class="line">&gt; &lt;p class=&quot;one&quot;&gt;类型1&lt;/p&gt;</span><br><span class="line">&gt; &lt;p class=&quot;two&quot;&gt;类型2&lt;/p&gt;</span><br><span class="line">&gt; &lt;p class=&quot;three&quot;&gt;类型3&lt;/p&gt;</span><br><span class="line">&gt; &lt;p class=&quot;four&quot;&gt;类型4&lt;/p&gt;</span><br><span class="line">&gt; &lt;p class=&quot;five&quot;&gt;类型5&lt;/p&gt;</span><br><span class="line">&gt; &lt;p&gt;普通的段落文字&lt;/p&gt;</span><br><span class="line">&gt; &lt;/body&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="3、ID选择器"><a href="#3、ID选择器" class="headerlink" title="3、ID选择器"></a>3、ID选择器</h4><p><code>printf()</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    #one&#123;font-size:12px;&#125;</span></span><br><span class="line"><span class="undefined">    #two&#123;font-size:24px;&#125; </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"one"</span>&gt;</span>文字1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"two"</span>&gt;</span>文字2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4、嵌套声明"><a href="#4、嵌套声明" class="headerlink" title="4、嵌套声明"></a>4、嵌套声明</h4><p><code>printf()</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    p span&#123;</span></span><br><span class="line"><span class="undefined">        color:#;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>学习<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5、文本样式格式"><a href="#5、文本样式格式" class="headerlink" title="5、文本样式格式"></a>5、文本样式格式</h4><table><thead><tr><th>属性</th><th>描 述</th><th style="text-align:left">取值</th></tr></thead><tbody><tr><td><strong>color</strong></td><td><strong>文本颜色</strong></td><td style="text-align:left">red #f00</td></tr><tr><td><strong>letter-spacing</strong></td><td><strong>字符间距</strong></td><td style="text-align:left">2px、3px</td></tr><tr><td><strong>line-height</strong></td><td><strong>行高</strong></td><td style="text-align:left">14px  1.5em  120%</td></tr><tr><td><strong>text-align</strong></td><td><strong>对齐</strong></td><td style="text-align:left"><strong>center  left  right  justify</strong></td></tr><tr><td><strong>text-decoration</strong></td><td><strong>装饰线</strong></td><td style="text-align:left"><strong>none  overline  underline  line-though</strong></td></tr><tr><td><strong>text-indent</strong></td><td><strong>首行缩进</strong></td><td style="text-align:left"><strong>2em</strong></td></tr></tbody></table><h4 id="6、背景设置"><a href="#6、背景设置" class="headerlink" title="6、背景设置"></a>6、背景设置</h4><h5 id="1、背景属性"><a href="#1、背景属性" class="headerlink" title="1、背景属性"></a>1、背景属性</h5><p>空元素需要先定义元素的高度和宽度</p><p><strong>background-color</strong></p><p><strong>background-image–背景图片</strong>    url(“logo.jpg”)</p><p><strong>background-repecat–背景图片的填充方式</strong>   repeat    repeat-x(横向填充)   repeat-y(纵向填充)    no-repeat(填充一次)</p><p><strong>bacground</strong></p><h5 id="2、CSS超链接"><a href="#2、CSS超链接" class="headerlink" title="2、CSS超链接"></a>2、CSS超链接</h5><p>超链接的四种状态</p><blockquote><p><strong>a:link </strong> 普通的、未被访问的链接</p><p><strong>a:visited</strong>  用户已经访问的链接</p><p><strong>a:hover</strong>  鼠标指针位于链接的上方悬停</p><p><strong>a:active</strong>   链接被点击的时刻</p></blockquote><p>:伪类选择器</p><p><strong>顺序</strong></p><p><strong>a:hover</strong>  必须位于a:link 和a:visited之后</p><p><strong>a:active</strong>  必须位于a:hover之后</p><h5 id="3、列表样式"><a href="#3、列表样式" class="headerlink" title="3、列表样式"></a>3、列表样式</h5><blockquote><p>life-style     <strong>所有用于列表的属性设置于一个声明之中</strong></p><p>list-style-image  <strong>为列表项标志设置图像</strong></p><p>list-style-position  <strong>标志的位置</strong></p><p>list-style-type   <strong>标志的类型</strong></p></blockquote><p>无序列表<strong>ul</strong>和有序列表<strong>ol</strong></p><h5 id="4、表格的样式"><a href="#4、表格的样式" class="headerlink" title="4、表格的样式"></a>4、表格的样式</h5><p><strong>表格大小 属性  width(宽),height(高)</strong></p><p><code>printf()</code></p><p>table{</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">width:500px;</span><br><span class="line"></span><br><span class="line">height:200px;</span><br></pre></td></tr></table></figure><p>}</p><p><strong>表格边框属性boder</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">table,td,th&#123;</span><br><span class="line">boder:1px solidn#eee</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>td标签—单元格的样式</strong></p><p><strong>th标签—表头的样式</strong></p><p>另一个属性 boder-collapse —<strong>内外边框重叠问题</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">table&#123;</span><br><span class="line">boder-collapse:collapse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5、CSS表格–奇偶选择器-nth-child-odd-even"><a href="#5、CSS表格–奇偶选择器-nth-child-odd-even" class="headerlink" title="5、CSS表格–奇偶选择器  :nth-child(odd|even)"></a>5、CSS表格–奇偶选择器  :nth-child(odd|even)</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tr:nth-child(odd)</span><br><span class="line">background-color:#EAF2D3;</span><br></pre></td></tr></table></figure><hr><h2 id="四、CSS布局和定位问题"><a href="#四、CSS布局和定位问题" class="headerlink" title="四、CSS布局和定位问题"></a>四、CSS布局和定位问题</h2><h4 id="1、盒子模型"><a href="#1、盒子模型" class="headerlink" title="1、盒子模型"></a>1、盒子模型</h4><p>概念</p><p>页面上的区域、图片、导航、列表、段落都可以是盒子</p><p><strong>除了content之外其他的都是属性的名字</strong></p><blockquote><html><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">&gt;    #box&#123;</span></span><br><span class="line"><span class="undefined">&gt;        width:100px;</span></span><br><span class="line"><span class="undefined">&gt;        height:100px;</span></span><br><span class="line"><span class="undefined">&gt;        border:1px solid;</span></span><br><span class="line"><span class="undefined">&gt;        padding:20px;</span></span><br><span class="line"><span class="undefined">&gt;        margin:10px;</span></span><br><span class="line"><span class="undefined">&gt;    &#125;</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">&gt; 你猜啊</span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></html></blockquote><blockquote><p></p></blockquote><h4 id="2、盒子属性"><a href="#2、盒子属性" class="headerlink" title="2、盒子属性"></a>2、盒子属性</h4><blockquote><p><strong>border-width: px  thin  medium  thick</strong></p><p><strong>border-style:dashaed<a href="虚线">^注释2</a>  dotted<a href="由点组成的线">^注释3</a>  solid<a href="普通实线">^注释4</a>   double<a href="双实线">^注释5</a></strong></p><p><strong>border-color: 颜色</strong></p><p><strong>border:width  style  color</strong></p></blockquote><h2 id="五、CSS定位机制"><a href="#五、CSS定位机制" class="headerlink" title="五、CSS定位机制"></a>五、CSS定位机制</h2><p><strong>概述：就是盒子的位置</strong></p><blockquote><p><strong>三种定位机制</strong></p><p><strong>1、文档流 flow定位</strong>：默认的方式</p><p><strong>2、浮动 float定位</strong>：设置float属性</p><p><strong>3、层定位 layer</strong>：设置position属性</p></blockquote><h4 id="1、文档流定位"><a href="#1、文档流定位" class="headerlink" title="1、文档流定位"></a>1、文档流定位</h4><h5 id="1、元素分类"><a href="#1、元素分类" class="headerlink" title="1、元素分类"></a>1、元素分类</h5><blockquote><p><strong>block类型</strong>：<strong>每个此类型的元素都要独占一行</strong></p><p>常见的<strong>block</strong>元素有：<div> <p> </p><h1>···<h6> <ol> <ul> <table> <form></form></table></ul></ol></h6></h1></div></p><p><strong>inline类型 : 每个元素不单独占一行，且width  height不可设置</strong></p><p>常见的<strong>inline</strong>元素有：<span>  <a>      </a></span></p><p><strong>–显示为inline元素  display:inline–</strong></p><p><strong>inline-block类型 :  不单独占据一行，但是可以改变设置</strong></p><p>常见的<strong>inline-block</strong> 元素有：<img></p></blockquote><h5 id="2、元素转换类型"><a href="#2、元素转换类型" class="headerlink" title="2、元素转换类型"></a>2、元素转换类型</h5><p><strong>display类型</strong></p><h4 id="2、浮动定位"><a href="#2、浮动定位" class="headerlink" title="2、浮动定位"></a>2、浮动定位</h4><p><strong>float属性</strong></p><blockquote><div><br>width:200px;<br>height:200px;<br>boder:1px solid red;<br>float:left;<br></div></blockquote><h4 id="3、层定位"><a href="#3、层定位" class="headerlink" title="3、层定位"></a>3、层定位</h4><p><strong>概述</strong></p><p>像图象软件中的图层一样可以对每个layer进行能够精准定位操作</p><blockquote><p><strong>position 属性</strong>：<strong>（相对于谁定位）</strong></p><p><strong>fixed  固定定位</strong> ：相对于浏览器窗口进行定位</p><p><strong>relative   相对定位</strong> ：相对于直接父元素进行定位</p><p><strong>absotive  绝对定位</strong> ：相对于static定位意外的第一个父元素</p></blockquote><h2 id="六、CSS3续篇"><a href="#六、CSS3续篇" class="headerlink" title="六、CSS3续篇"></a>六、CSS3续篇</h2><h4 id="1、圆角边框和阴影"><a href="#1、圆角边框和阴影" class="headerlink" title="1、圆角边框和阴影"></a>1、圆角边框和阴影</h4><h4 id="2、文字与文本"><a href="#2、文字与文本" class="headerlink" title="2、文字与文本"></a>2、文字与文本</h4><blockquote><p><strong>text-shadow属性</strong> ：文本阴影</p><p><strong>–水平偏移   垂直偏移    阴影大小   颜色–</strong></p><p><strong>text-wrap属性</strong> ：允许单词、url强制进行换行</p><p><strong>–normal 属性–</strong></p><p><strong>–break-word 属性–</strong></p><p><strong>@font-face属性</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="前端" scheme="https://albert-5.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://albert-5.github.io/tags/css/"/>
    
      <category term="前端" scheme="https://albert-5.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
