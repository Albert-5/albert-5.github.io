<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Albert</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://albert-5.cn/"/>
  <updated>2019-11-18T14:58:22.911Z</updated>
  <id>https://albert-5.cn/</id>
  
  <author>
    <name>albert</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django续续传-用户账号</title>
    <link href="https://albert-5.cn/2019/11/18/Django%E7%BB%AD%E7%BB%AD%E4%BC%A0-%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7/"/>
    <id>https://albert-5.cn/2019/11/18/Django续续传-用户账号/</id>
    <published>2019-11-18T14:55:26.000Z</published>
    <updated>2019-11-18T14:58:22.911Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="注销页面"><a href="#注销页面" class="headerlink" title="注销页面"></a>注销页面</h2><blockquote><p>为注销链接添加一个url模式，编写一个视图函数，并在base.html中添加一个注销链接</p></blockquote><p><strong>注销url.py</strong></p><p>修改的是<code>users/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""为应用程序users定义url模式"""</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.views <span class="keyword">import</span> LoginView</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># login</span></span><br><span class="line">    url(<span class="string">r'^login/$'</span>,LoginView.as_view(template_name=<span class="string">'users/login.html'</span>),name=<span class="string">'login'</span>),</span><br><span class="line">    url(<span class="string">r'^logout/$'</span>,views.logout_view,name=<span class="string">'logout'</span>),  <span class="comment"># 新增</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>视图函数logout_view</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> logout</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout_view</span><span class="params">(request)</span>:</span></span><br><span class="line">    logout(request)</span><br><span class="line">    <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'learning_logs:index'</span>))</span><br></pre></td></tr></table></figure><h3 id="链接到注销视图"><a href="#链接到注销视图" class="headerlink" title="链接到注销视图"></a>链接到注销视图</h3><p>在<code>base.html</code>中添加这个链接，放在标签<code>{百分号 if user.is_authenticated 百分号}</code>中，使得仅当用户登录后才能看到：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:index' %&#125;"</span>&gt;</span>Learning Log<span class="tag">&lt;/<span class="name">a</span>&gt;</span> -  <span class="comment">&lt;!--创建一个包含项目名的段落，也是一个到主页的链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:topics' %&#125;"</span>&gt;</span>Topics<span class="tag">&lt;/<span class="name">a</span>&gt;</span> -</span><br><span class="line"></span><br><span class="line">    &#123;% if user.is_authenticated %&#125;</span><br><span class="line">        Hello,&#123;&#123; user.username &#125;&#125;.</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:logout' %&#125;"</span>&gt;</span>Log out<span class="tag">&lt;/<span class="name">a</span>&gt;</span>         # new</span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:login' %&#125;"</span>&gt;</span>log in<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h2 id="注册页面"><a href="#注册页面" class="headerlink" title="注册页面"></a>注册页面</h2><p>使用<code>Django</code>提供的表单<code>UserCreationForm</code>，但编写自己的模板和视图</p><h3 id="注册页面的url模式"><a href="#注册页面的url模式" class="headerlink" title="注册页面的url模式"></a>注册页面的url模式</h3><blockquote><p>包含在了users/urls.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""为应用程序users定义url模式"""</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.views <span class="keyword">import</span> LoginView</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># login</span></span><br><span class="line">    url(<span class="string">r'^login/$'</span>,LoginView.as_view(template_name=<span class="string">'users/login.html'</span>),name=<span class="string">'login'</span>),</span><br><span class="line">    url(<span class="string">r'^logout/$'</span>,views.logout_view,name=<span class="string">'logout'</span>),</span><br><span class="line">    url(<span class="string">r'^register/$'</span>,views.register,name=<span class="string">'register'</span>),   <span class="comment"># new</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="视图函数register"><a href="#视图函数register" class="headerlink" title="视图函数register()"></a>视图函数<code>register()</code></h3><p>在注册页面首次被请求时，视图函数<code>register()</code>需要显示一个空的注册表单，并在用户提交填写好的注册表单时对其进行处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> login,logout,authenticate  <span class="comment"># new</span></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.forms <span class="keyword">import</span> UserCreationForm   <span class="comment"># new</span></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout_view</span><span class="params">(request)</span>:</span></span><br><span class="line">    logout(request)</span><br><span class="line">    <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'learning_logs:index'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义注册视图函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(request)</span>:</span>                               <span class="comment"># new</span></span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">'POST'</span>:</span><br><span class="line">        <span class="comment"># 显示为空的注册单</span></span><br><span class="line">        form = UserCreationForm()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = UserCreationForm(data=request.POST)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> form.is_valid():</span><br><span class="line">            new_user =form.save()</span><br><span class="line">            <span class="comment"># 让用户自动登录，在重定向到主页</span></span><br><span class="line">            authenticated_user = authenticate(username=new_user.username,password=request.POST[<span class="string">'password1'</span>])</span><br><span class="line">            login(request,authenticated_user)</span><br><span class="line">            <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'learning_logs:index'</span>))</span><br><span class="line">        </span><br><span class="line">    context = &#123;<span class="string">'form'</span>:form&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'users/register.html'</span>,context)</span><br></pre></td></tr></table></figure><h3 id="注册模板"><a href="#注册模板" class="headerlink" title="注册模板"></a>注册模板</h3><p>注册页面的模板和登录页面的模板类似，<code>register.html</code>保存在登录页面所在目录中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125;</span><br><span class="line">&#123;% extends 'learning_logs/base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'users:register' %&#125;"</span>&gt;</span></span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        &#123;&#123; form.as_p &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">name</span>=<span class="string">"submit"</span>&gt;</span>register<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"next"</span> <span class="attr">value</span>=<span class="string">"&#123;% url 'learning_logs:index' %&#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p><code>注：使用了方法as_p，使得表单中正确显示所有字段，包括错误消息</code></p><h3 id="链接到注册页面"><a href="#链接到注册页面" class="headerlink" title="链接到注册页面"></a>链接到注册页面</h3><p><strong>base.html</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;a href="&#123;% url 'learning_logs:index' %&#125;"&gt;Learning Log&lt;/a&gt; -  &lt;!--创建一个包含项目名的段落，也是一个到主页的链接--&gt;</span><br><span class="line">    &lt;a href="&#123;% url 'learning_logs:topics' %&#125;"&gt;Topics&lt;/a&gt; -</span><br><span class="line"></span><br><span class="line">    &#123;% <span class="keyword">if</span> user.is_authenticated %&#125;</span><br><span class="line">        Hello,&#123;&#123; user.username &#125;&#125;.</span><br><span class="line">        &lt;a href="&#123;% url 'users:logout' %&#125;"&gt;Log out&lt;/a&gt;</span><br><span class="line">    &#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">        &lt;a href="&#123;% url 'users:login' %&#125;"&gt;log in&lt;/a&gt;</span><br><span class="line">        &lt;a href="&#123;% url 'users:register'%&#125;"&gt;register&lt;/a&gt;      # new</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&#123;% block content %&#125;&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p><code>注：已经登录的用户看到的是注销链接和问候语，没有登录的则显示登录和注册</code></p><h2 id="让用户拥有自己的数据"><a href="#让用户拥有自己的数据" class="headerlink" title="让用户拥有自己的数据"></a>让用户拥有自己的数据</h2><p>用户能够输入其专用的数据，因此创建一个系统，确定各项数据所属的用户，在限制对页面的访问，让用户只能使用自己的数据</p><h3 id="使用-login-required限制访问"><a href="#使用-login-required限制访问" class="headerlink" title="使用@login_required限制访问"></a>使用<code>@login_required</code>限制访问</h3><p>对于某些页面，只能允许已经登录的用户访问。<code>装饰器（decorator）</code>是放在函数前面定义前面的指令</p><p><strong>限制对topics页面的访问</strong></p><p>每个主题都归特定的用户所有，因此只允许已登录的用户请求topics页面，在<code>learning_logs/views.py</code>中修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> TopicForm,EntryForm</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> login_required    <span class="comment"># new</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""学习笔记的主页"""</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/index.html'</span>)</span><br><span class="line"><span class="meta">@login_required()                                          # new</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topics</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示所有主题"""</span></span><br><span class="line">    topics = Topic.objects.order_by(<span class="string">'date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topics'</span>:topics&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topics.html'</span>,context)</span><br></pre></td></tr></table></figure><p><code>注：login_required()的代码检查用户是否已登录，仅当用户登录后时，django才运行topics()的代码，如果没有登录就重定向到登录页面，为了实现重定向，修改settings.py，在其末尾添加一行设置</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.2/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 我的设置</span></span><br><span class="line">LOGIN_URL = <span class="string">'/users/login/'</span>              <span class="comment"># new</span></span><br></pre></td></tr></table></figure><h3 id="全面限制对项目的访问"><a href="#全面限制对项目的访问" class="headerlink" title="全面限制对项目的访问"></a>全面限制对项目的访问</h3><p>将不限制对主页、注册页面和注销页面的访问，并限制对其他所有页面的访问。</p><p>所以在<code>learning_logs/views.py</code>中，对除了<code>index()</code>外的每个视图都应用了装饰器<code>@login_required</code></p><p>==操作方式和上述方式一样，只需要添加一行代码即可==</p><h3 id="将数据关联到用户"><a href="#将数据关联到用户" class="headerlink" title="将数据关联到用户"></a>将数据关联到用户</h3><p><strong>对<code>models.py</code>进行修改</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User         <span class="comment"># new</span></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Topic</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    text = models.CharField(blank=<span class="literal">True</span>,max_length=<span class="number">200</span>)</span><br><span class="line">    date_added = models.DateTimeField(auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    owner = models.ForeignKey(User,on_delete=models.CASCADE)    <span class="comment"># new</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.text</span><br></pre></td></tr></table></figure><p><strong>确定有哪些用户</strong></p><p>迁移数据库时，django将对数据库进行修改，使其能够存储主题和用户之间的关联，为了执行迁移，必须知道该将各个即有主题关联到哪个用户。将既有主题都关联到一个用户，如超级用户</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(venv) D:\资料\learning_log&gt;python manage.py makemigrations learning_logs</span><br><span class="line">System check identified some issues:</span><br><span class="line"></span><br><span class="line">WARNINGS:</span><br><span class="line">?: (2_0.W001) Your URL pattern '^users/' has a route that contains '(?P&lt;', begins with a '^', or ends with a '$'. This was likely an oversight when migrating to django.urls.path().</span><br><span class="line"></span><br><span class="line">You are trying to add a non-nullable field <span class="string">'owner'</span> to topic without a default; we can<span class="string">'t do that (the database needs something to populate existing rows).</span></span><br><span class="line"><span class="string">Please select a fix:</span></span><br><span class="line"><span class="string"> 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)</span></span><br><span class="line"><span class="string"> 2) Quit, and let me add a default in models.py</span></span><br><span class="line"><span class="string">Select an option: 1</span></span><br><span class="line"><span class="string">Please enter the default value now, as valid Python</span></span><br><span class="line"><span class="string">The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now</span></span><br><span class="line"><span class="string">Type '</span>exit<span class="string">' to exit this prompt</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; 1</span></span><br><span class="line"><span class="string">Migrations for '</span>learning_logs<span class="string">':</span></span><br><span class="line"><span class="string">  learning_logs\migrations\0003_auto_20191118_1713.py</span></span><br><span class="line"><span class="string">    - Add field owner to topic</span></span><br><span class="line"><span class="string">    - Alter field text on topic</span></span><br></pre></td></tr></table></figure><p><code>注：首先执行了makemigrations，指出给既有模型Topic添加一个必不可少的字段，没有默认值；</code></p><p><strong>只允许用户访问自己的主题</strong></p><p>在<code>views.py</code>中，对函数<code>topics()</code>进行修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""学习笔记的主页"""</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/index.html'</span>)</span><br><span class="line"><span class="meta">@login_required()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topics</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示所有主题"""</span></span><br><span class="line">    topics = Topic.objects.filter(owner=request.user).order_by(<span class="string">'date_added'</span>)    <span class="comment"># new</span></span><br><span class="line">    topics = Topic.objects.order_by(<span class="string">'date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topics'</span>:topics&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topics.html'</span>,context)</span><br></pre></td></tr></table></figure><p><code>注：用户登录后，request对象将有一个user属性，这个属性存储了有关用户的信息，Topic.objects.filter(owner=request.user)让Django只能从数据库中获取owner属性为当前用户的Topic对象</code></p><p><strong>保护主题</strong></p><p>也就是现在情况下，每个用户登录时都能看到原先加入的条目信息，而不是专属自己的</p><p>更改<code>views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect,Http404  <span class="comment"># new Http404</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> TopicForm,EntryForm</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> login_required</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="meta">@login_required()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topic</span><span class="params">(request,topic_id)</span>:</span></span><br><span class="line">    topic = Topic.objects.get(id=topic_id)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 确认请求的主题属于当前用户</span></span><br><span class="line">    <span class="keyword">if</span> topic.owner != request.user:          <span class="comment"># new</span></span><br><span class="line">        <span class="keyword">raise</span> Http404</span><br></pre></td></tr></table></figure><h3 id="保护页面edit-entry"><a href="#保护页面edit-entry" class="headerlink" title="保护页面edit_entry"></a>保护页面edit_entry</h3><p>页面<code>edit_entry</code>的url为<a href="https://localhost:8001/edit_entry/entry_id，其中`entry_id`是一个数字，设置保护页面，禁止用户通过输入类似于其前面的url来访问用户的条目" target="_blank" rel="noopener">https://localhost:8001/edit_entry/entry_id，其中`entry_id`是一个数字，设置保护页面，禁止用户通过输入类似于其前面的url来访问用户的条目</a></p><p><code>views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">login_required()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit_entry</span><span class="params">(request,entry_id)</span>:</span></span><br><span class="line">    entry = Entry.objects.get(id=entry_id)</span><br><span class="line">    topic = entry.topic</span><br><span class="line">    <span class="keyword">if</span> topic.owner != request.user:          <span class="comment"># new</span></span><br><span class="line">        <span class="keyword">raise</span> Http404</span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">'POST'</span>:</span><br><span class="line">        form = EntryForm(instance=entry)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = EntryForm(instance=entry,data=request.POST)</span><br><span class="line">        <span class="keyword">if</span> form.is_valid():</span><br><span class="line">            form.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'learning_logs:topic'</span>,args=[topic.id]))</span><br><span class="line">    context = &#123;<span class="string">'entry'</span>:entry,<span class="string">'topic'</span>:topic,<span class="string">'form'</span>:form&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/edit_entry.html'</span>,context)</span><br></pre></td></tr></table></figure><h3 id="将新主题关联到用户"><a href="#将新主题关联到用户" class="headerlink" title="将新主题关联到用户"></a>将新主题关联到用户</h3><p>修复代码</p><p><strong>views.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@login_required()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_topic</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">'POST'</span>:</span><br><span class="line">        form = TopicForm()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = TopicForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> form.is_valid():                   <span class="comment"># 修改部分</span></span><br><span class="line">            new_topic = form.save(commit=<span class="literal">False</span>)</span><br><span class="line">            new_topic.owner = request.user</span><br><span class="line">            new_topic.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'learning_logs:topics'</span>))</span><br><span class="line">    context = &#123;<span class="string">'form'</span>:form&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/new_topic.html'</span>,context)</span><br></pre></td></tr></table></figure><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/17/django开发实践版本问题导致错误/">django开发实践版本问题导致错误</a></li><li><a href="https://albert-5.cn/2019/11/16/Django后传-1/">Django后传</a></li><li><a href="https://albert-5.cn/2019/11/17/Django续传/">Django续传</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="django" scheme="https://albert-5.cn/categories/django/"/>
    
    
      <category term="django" scheme="https://albert-5.cn/tags/django/"/>
    
      <category term="网站实例用户篇" scheme="https://albert-5.cn/tags/%E7%BD%91%E7%AB%99%E5%AE%9E%E4%BE%8B%E7%94%A8%E6%88%B7%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>django开发实践版本问题导致错误</title>
    <link href="https://albert-5.cn/2019/11/17/django%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E9%94%99%E8%AF%AF/"/>
    <id>https://albert-5.cn/2019/11/17/django开发实践版本问题导致错误/</id>
    <published>2019-11-17T15:45:46.000Z</published>
    <updated>2019-11-17T15:47:43.238Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Django开发实践版本问题导致错误"><a href="#Django开发实践版本问题导致错误" class="headerlink" title="Django开发实践版本问题导致错误"></a><code>Django</code>开发实践版本问题导致错误</h2><p>在使用Django提供的默认登录视图来实现登录界面功能时出现报错：</p><p>代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> login</span><br><span class="line">url(<span class="string">r'^login/$'</span>,login,&#123;<span class="string">'template_name'</span>=<span class="string">'users/login.html'</span>&#125;,name=<span class="string">'login'</span>)</span><br></pre></td></tr></table></figure><p>报错信息为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: login() got an unexpected keyword argument <span class="string">'template_name’</span></span><br></pre></td></tr></table></figure><p>这是因为Django版本是<code>1.0</code>的，而我的Django是<code>2.0</code>，所以出现了这个错误</p><p>正确的方式是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># login</span></span><br><span class="line">    url(<span class="string">r'^login/$'</span>,LoginView.as_view(template_name=<span class="string">'users/login.html'</span>),name=<span class="string">'login'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/16/Django后传-1/">Django后传</a></li><li><a href="https://albert-5.cn/2019/11/17/Django续传/">Django续传</a></li><li><a href="https://albert-5.cn/2019/11/18/Django续续传-用户账号/">Django续续传-用户账号</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="疑难杂症" scheme="https://albert-5.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
      <category term="django" scheme="https://albert-5.cn/tags/django/"/>
    
      <category term="错误" scheme="https://albert-5.cn/tags/%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>Django续传</title>
    <link href="https://albert-5.cn/2019/11/17/Django%E7%BB%AD%E4%BC%A0/"/>
    <id>https://albert-5.cn/2019/11/17/Django续传/</id>
    <published>2019-11-17T15:45:37.000Z</published>
    <updated>2019-11-18T01:17:24.471Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>用户账户</strong></p><h2 id="用户表单"><a href="#用户表单" class="headerlink" title="用户表单"></a>用户表单</h2><h3 id="添加主题"><a href="#添加主题" class="headerlink" title="添加主题"></a>添加主题</h3><p>创建基于表单的页面的方法几乎与前面创建网页一样：定义一个<code>url</code>，编写一个视图函数并编写一个模板。</p><h4 id="用于添加主题的表单"><a href="#用于添加主题的表单" class="headerlink" title="用于添加主题的表单"></a>用于添加主题的表单</h4><p>用户输入信息，我们需要验证，确认提供的信息是正确的类型，然后再对有效的信息进行处理，并将其存储到数据库的地方。</p><p>在<code>Django</code>中创建表单最简单的方式是使用<code>ModelForm</code>，会自动创建表单。创建一个<code>forms.py</code>，将其存储到<code>models.py</code>所在目录中</p><p><strong>forms.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Topic</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TopicForm</span><span class="params">(forms.ModelForm)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Topic</span><br><span class="line">        fields = [<span class="string">'Text'</span>]</span><br><span class="line">        labels  = &#123;<span class="string">'Text'</span>:<span class="string">''</span>&#125;</span><br></pre></td></tr></table></figure><p><code>注：首先导入了模块forms以及要使用的模型Topic，后定义了一个TopicForm的类，继承了forms.ModelForm</code></p><h3 id="URL-模式"><a href="#URL-模式" class="headerlink" title="URL 模式"></a>URL 模式</h3><p>新建一个网页new_topic，能够通过<a href="https://localhost:8000/mew_topic来访问到，将其添加到`learning_logs/urls.py`中" target="_blank" rel="noopener">https://localhost:8000/mew_topic来访问到，将其添加到`learning_logs/urls.py`中</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>),</span><br><span class="line">    url(<span class="string">r'^topics/$'</span>,views.topics,name=<span class="string">'topics'</span>) , <span class="comment">#显示所有主题</span></span><br><span class="line">    url(<span class="string">r'^topics/(?P&lt;topic_id&gt;\d+)/$'</span>,views.topic,name=<span class="string">'topic'</span>),</span><br><span class="line">    url(<span class="string">r'^new_topic/$'</span>,views.new_topic,name = <span class="string">'new_topic'</span>),  <span class="comment"># 新增</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：url将请求交给视图函数的new_topic（）</code></p><h3 id="编写new-topic视图函数"><a href="#编写new-topic视图函数" class="headerlink" title="编写new_topic视图函数"></a>编写<code>new_topic</code>视图函数</h3><p>新的视图函数需要处理两种情况：刚进入new_topic网页（这时应显示空表单）；对提交的表单数据进行处理，将用户重定向到网页topics:</p><p><strong>views.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Topic</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse  <span class="comment"># new</span></span><br><span class="line"><span class="keyword">from</span> django.core.urlresolvers <span class="keyword">import</span> reverse  <span class="comment">#  new</span></span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> TopicForm    <span class="comment"># new</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""学习笔记的主页"""</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/index.html'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topics</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示所有主题"""</span></span><br><span class="line">    topics = Topic.objects.order_by(<span class="string">'date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topics'</span>:topics&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topics.html'</span>,context)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topic</span><span class="params">(request,topic_id)</span>:</span></span><br><span class="line">    topic = Topic.objects.get(id=topic_id)</span><br><span class="line">    entries = topic.entry_set.order_by(<span class="string">'-date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topic'</span>:topic,<span class="string">'entries'</span>:entries&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topic.html'</span>,context)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_topic</span><span class="params">(request)</span>:</span>              <span class="comment"># 新增函数</span></span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">'POST'</span>:</span><br><span class="line">        form = TopicForm()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = TopicForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> form.is_valid():</span><br><span class="line">            form.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'learning_logs:topics'</span>))</span><br><span class="line">    context = &#123;<span class="string">'form'</span>:form&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/new_topic.html'</span>,context)</span><br></pre></td></tr></table></figure><blockquote><p><strong>GET和POST请求</strong></p><p>对于只是从服务器中读取数据的页面，使用<code>GET</code>请求；</p><p>在需要提交表单信息时，使用<code>POST</code>请求。</p></blockquote><p><code>注1：如果请求是GET，则创建了一个TopicForm实例，将其存储在form中，在通过上下文字典将这个表单发送给模板，由于TopicForm实例没有实参，django将创建一个可供用户填写的空表单。</code></p><p><code>注2：如果请求时POST，则执行else代码，对提交的表单数据进行处理，用户输入的数据创建一个TopicForm实例；这样的form包含用户提交的信息</code></p><p><code>注3：要将提交的信息保存到数据库，必须先通过检查确定他们是不是有效的，函数is_valid（）核实用户填写了所有必不可少的字段，且输入的数据与要求的字段类型一致；如果所有字段都有效，就调用save()将表单中的数据写入数据库，保存数据后离开页面，用reverse（）获取页面topics中的url，并且将其传递给HttpResponseRedirect()，后者将用户的浏览器重定向到页面topics</code></p><h3 id="new-topic模板"><a href="#new-topic模板" class="headerlink" title="new_topic模板"></a><code>new_topic</code>模板</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;    <span class="comment">&lt;!--由于博客渲染问题，特加raw标注--&gt;</span></span><br><span class="line">&#123;% extends "learning_logs/base.html" %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Add a new topic:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'learning_logs:new_topic' %&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        &#123;&#123; form.as_p &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">name</span>=<span class="string">"submit"</span>&gt;</span>Add Topic<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p><code>注1：继承了base.html；定义了一个表单form，实参告诉服务器将提交的表单数据发送到哪里</code></p><p><code>注2:django使用模板标签{百分号 csrf_token 百分号}来防止攻击者利用表单来获得对服务器未经授权的访问（称为跨站请求伪造）；修饰符as_p让Django以段落格式渲染所以表单元素</code></p><h3 id="链接页面"><a href="#链接页面" class="headerlink" title="链接页面"></a>链接页面</h3><p>在页面<code>topics</code>中添加一个到页面<code>new_topic</code>的链接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;    &lt;!--由于博客渲染问题，特加raw标注--&gt;</span><br><span class="line">&#123;% extends <span class="string">"learning_logs/base.html"</span> %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &lt;p&gt;Topics&lt;/p&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">    &#123;% <span class="keyword">for</span> topic <span class="keyword">in</span> topics %&#125;</span><br><span class="line">        &lt;li&gt;&lt;a href="&#123;% url 'learning_logs:topic' topic.id %&#125;"&gt;&#123;&#123; topic &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">    &lt;li&gt;No topics have been added yet.&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;a href="&#123;% url 'learning_logs:new_topic' %&#125;"&gt;Add a new topic:&lt;/a&gt;  # 新增</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h2 id="添加新条目"><a href="#添加新条目" class="headerlink" title="添加新条目"></a>添加新条目</h2><h3 id="添加新条目的表单"><a href="#添加新条目的表单" class="headerlink" title="添加新条目的表单"></a>添加新条目的表单</h3><p>创建一个与模型<code>Entry</code>相关联的表单</p><p><strong>forms.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Topic</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Entry                                     <span class="comment"># new</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TopicForm</span><span class="params">(forms.ModelForm)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Topic</span><br><span class="line">        fields = [<span class="string">'text'</span>]</span><br><span class="line">        labels  = &#123;<span class="string">'text'</span>:<span class="string">''</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义新条目表单</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EntryForm</span><span class="params">(forms.ModelForm)</span>:</span>                                 <span class="comment"># new</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Entry</span><br><span class="line">        fields = [<span class="string">'text'</span>]</span><br><span class="line">        labels = &#123;<span class="string">'text'</span>:<span class="string">''</span>&#125;</span><br><span class="line">        widgets = &#123;<span class="string">'text'</span>:forms.Textarea(attr=&#123;<span class="string">'cols'</span>:<span class="number">80</span>&#125;)&#125;</span><br></pre></td></tr></table></figure><p><code>注：Meta类指出了表单基于的模型以及要在表单中包含的字段；widgets小部件是一个HTML表单元素，如单行文本框，多行文本区域或下拉列表，通过设置属性widgets可覆盖django选择的默认小部件；</code></p><h3 id="url模式new-entry"><a href="#url模式new-entry" class="headerlink" title="url模式new_entry"></a><code>url</code>模式<code>new_entry</code></h3><p>在用于添加新条目的页面的<code>url</code>模式中，需要包含实参<code>topic_id</code>，因为条目必须与特定的主题相关联</p><p>。在该模式下，添加到<code>learning_logs/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>),</span><br><span class="line">    url(<span class="string">r'^topics/$'</span>,views.topics,name=<span class="string">'topics'</span>) , <span class="comment">#显示所有主题</span></span><br><span class="line">    url(<span class="string">r'^topics/(?P&lt;topic_id&gt;\d+)/$'</span>,views.topic,name=<span class="string">'topic'</span>),</span><br><span class="line">    url(<span class="string">r'^new_topic/$'</span>,views.new_topic,name = <span class="string">'new_topic'</span>),</span><br><span class="line">    url(<span class="string">r'^new_entry/(?P&lt;topic_id&gt;\d+)/$'</span>,views.new_entry,name=<span class="string">'new_entry'</span>),  <span class="comment"># new</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：这个模式与形式为https://localhost:8001/new_entry/id/的url匹配，其中id是一个与主题ID匹配的数字。(?P&lt;topic_id&gt;\d+)代码捕获一个数字值，并将其存储在变量topic_id中，请求的url与这个模式匹配时，django将请求与主题发送给函数new_entry</code></p><h3 id="编写视图函数new-entry"><a href="#编写视图函数new-entry" class="headerlink" title="编写视图函数new_entry()"></a>编写视图函数new_entry()</h3><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Topic</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> TopicForm,EntryForm     <span class="comment"># 新增EntryForm</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="comment"># 编写视图new_entry</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_entry</span><span class="params">(request,topic_id)</span>:</span>           <span class="comment"># 新增视图new_entry函数</span></span><br><span class="line">    topic = Topic.objects.get(topic_id)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">'POST'</span>:</span><br><span class="line">        <span class="comment"># 未提交数据，创建一个空表</span></span><br><span class="line">        form = EntryForm()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = EntryForm(data=request.POST)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> form.is_valid():</span><br><span class="line">            new_entry = form.save(commit=<span class="literal">False</span>)</span><br><span class="line">            new_entry.topic = topic</span><br><span class="line">            new_entry.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'learning_logs:topic'</span>,args=[topic_id]))</span><br><span class="line">    context = &#123;<span class="string">'topic'</span>:topic,<span class="string">'form'</span>:form&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/new_entry.html'</span>,context)</span><br></pre></td></tr></table></figure><h3 id="模板new-entry-html"><a href="#模板new-entry-html" class="headerlink" title="模板new_entry.html"></a>模板new_entry.html</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;    &lt;!--由于博客渲染问题，特加raw标注--&gt;</span><br><span class="line">&#123;% extends <span class="string">'learning_logs/base.html'</span> %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &lt;p&gt;&lt;a href="&#123;% url 'learning_logs:topic' topic.id %&#125;"&gt;&#123;&#123; topic &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;p&gt;Add a mew entry&lt;/p&gt;</span><br><span class="line">    &lt;form action=<span class="string">"&#123;% url 'learning_logs:new_entry' topic_id %&#125;"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            &#123;% csrf_token %&#125;</span><br><span class="line">            &#123;&#123; form.as_p &#125;&#125;</span><br><span class="line">        &lt;button name="submit"&gt;add entry&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p><code>注：在页面顶端显示主题，用户可以知道是在哪个主题中添加条目，该主题名是一个链接，可用于返回该主题的主页面</code></p><h3 id="链接到页面new-entry"><a href="#链接到页面new-entry" class="headerlink" title="链接到页面new_entry"></a>链接到页面<code>new_entry</code></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125;</span><br><span class="line">&#123;% extends <span class="string">'learning_logs/base.html'</span> %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &lt;p&gt;Topic:&#123;&#123; topic &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;Entries:&lt;/p&gt;</span><br><span class="line">    &lt;a href="&#123;% url 'learning_logs:new_entry' topic_id %&#125;"&gt;Add new entry&lt;/a&gt;  &lt;!--新增--&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &#123;% <span class="keyword">for</span> entry <span class="keyword">in</span> entries %&#125;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;p&gt;&#123;&#123; entry.date_added|date:'M d,Y H:i' &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;&#123;&#123; entry.date.text|linebreaks &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">        &lt;li&gt;There are no entries for this topic yet&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h2 id="编辑条目"><a href="#编辑条目" class="headerlink" title="编辑条目"></a>编辑条目</h2><h3 id="url模式"><a href="#url模式" class="headerlink" title="url模式"></a>url模式</h3><p>这个页面的url需要传递要编辑的条目的ID，修改后的<code>learning_logs/urls.py</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>),</span><br><span class="line">    url(<span class="string">r'^topics/$'</span>,views.topics,name=<span class="string">'topics'</span>) , <span class="comment">#显示所有主题</span></span><br><span class="line">    url(<span class="string">r'^topics/(?P&lt;topic_id&gt;\d+)/$'</span>,views.topic,name=<span class="string">'topic'</span>),</span><br><span class="line">    url(<span class="string">r'^new_topic/$'</span>,views.new_topic,name = <span class="string">'new_topic'</span>),</span><br><span class="line">    url(<span class="string">r"^new_entry/(?P&lt;topic_id&gt;\d+)/$"</span>,views.new_entry,name=<span class="string">'new_entry'</span>),</span><br><span class="line">    <span class="comment"># 用于编辑条目的页面</span></span><br><span class="line">    url(<span class="string">r'^edit_entry/(?P&lt;entry_id&gt;\d+)/$'</span>,views.edit_entry,name=<span class="string">'edit_entry'</span>),   <span class="comment"># 新增</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在url<a href="https://localhost/8001/edit_entry/1/中传递的ID存储在形参`entry`中，这个url模式将预期匹配的请求发送给视图函数`edit_entry()`" target="_blank" rel="noopener">https://localhost/8001/edit_entry/1/中传递的ID存储在形参`entry`中，这个url模式将预期匹配的请求发送给视图函数`edit_entry()`</a></p><h3 id="视图函数edit-entry"><a href="#视图函数edit-entry" class="headerlink" title="视图函数edit_entry()"></a>视图函数edit_entry()</h3><p>页面<code>edit_entry</code>收到<code>GET</code>请求时，<code>edit_entry（）</code>将返回一个表单，使得能够编辑条目，该页面收到POST请求时，他将修改后的文本保存到数据库中：</p><p><strong>views.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Topic, Entry  <span class="comment"># 新增Entry</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> TopicForm,EntryForm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit_entry</span><span class="params">(request,entry_id)</span>:</span>                <span class="comment"># 新增</span></span><br><span class="line">    entry = Entry.objects.get(id=entry_id)</span><br><span class="line">    topic = entry.topic</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">'POST'</span>:</span><br><span class="line">        form = EntryForm(instance=entry)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = EntryForm(instance=entry,data=request.POST)</span><br><span class="line">        <span class="keyword">if</span> form.is_valid():</span><br><span class="line">            form.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'learning_logs:topic'</span>,args=[topic.id]))</span><br><span class="line">    context = &#123;<span class="string">'entry'</span>:entry,<span class="string">'topic'</span>:topic,<span class="string">'form'</span>:form&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/edit_entry.html'</span>,context)</span><br></pre></td></tr></table></figure><h3 id="模板edit-entry-html"><a href="#模板edit-entry-html" class="headerlink" title="模板edit_entry.html"></a>模板<code>edit_entry.html</code></h3><p>新建<code>edit_entry.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125;</span><br><span class="line">&#123;% extends 'learning_logs/base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:topic' topic.id %&#125;"</span>&gt;</span>&#123;&#123; topic &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Edit entry:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'learning_logs:edit_entry' entry.id %&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    &#123;&#123; form.as_p &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">name</span>=<span class="string">"submit"</span>&gt;</span>save change<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p><code>注：实参action将表单发回给函数edit_entry()进行处理，在标签{百分号 url 百分号}中，将条目ID作为一个实参，让视图能够修改正确的条目对象；</code></p><h3 id="链接到页面edit-entry"><a href="#链接到页面edit-entry" class="headerlink" title="链接到页面edit_entry"></a>链接到页面edit_entry</h3><p>现在在显示特定主题的页面中，需要给每个条目添加到页面edit_entry的链接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125;</span><br><span class="line">&#123;% extends <span class="string">'learning_logs/base.html'</span> %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &lt;p&gt;Topic:&#123;&#123; topic &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;Entries:&lt;/p&gt;</span><br><span class="line">    &lt;a href="&#123;% url 'learning_logs:new_entry' topic.id %&#125;"&gt;Add new entry&lt;/a&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &#123;% <span class="keyword">for</span> entry <span class="keyword">in</span> entries %&#125;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;p&gt;&#123;&#123; entry.date_added|date:'M d,Y H:i' &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;&#123;&#123; entry.text|linebreaks &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                &lt;a href="&#123;% url 'learning_logs:edit_entry' entry.id %&#125;" methods="post"&gt;edit entry&lt;/a&gt;</span><br><span class="line">            &lt;/p&gt;                                 &lt;!--新增--&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">        &lt;li&gt;There are no entries for this topic yet&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h2 id="创建用户账号"><a href="#创建用户账号" class="headerlink" title="创建用户账号"></a>创建用户账号</h2><p>也就是建立一个身份验证系统，用户能够注册账号，进而登录和注册；首先创建一个新的应用程序APP，其中包含处理用户账户相关的所有功能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp users</span><br></pre></td></tr></table></figure><p><strong>将应用程序添加到<code>settings.py</code>中</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'learning_logs'</span>, <span class="comment"># 新增的app应用</span></span><br><span class="line">    <span class="string">'users'</span>,  <span class="comment"># 用户注册app            # 新增</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>包含应用程序<code>users</code>的<code>url</code></strong></p><p>也就是修改项目根目录中<code>urls</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">r'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">r'^users/'</span>,include(<span class="string">'users.urls'</span>,name=<span class="string">'users'</span>)),          <span class="comment"># new</span></span><br><span class="line">    path(<span class="string">r''</span>,include((<span class="string">'learning_logs.urls'</span>,<span class="string">'learning_logs'</span>),namespace=<span class="string">'learning_logs'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：添加了一行代码，以包含应用程序users中的urls.py，这行代码与任何以单词users打头的URL（https://localhost:8001/users/login/）都匹配，还创建了命名空间’users‘，以便将应用程序learning_logs中的url与应用程序users中的url区分开</code></p><h3 id="登录页面"><a href="#登录页面" class="headerlink" title="登录页面"></a>登录页面</h3><p>在目录<code>learning_log/users/</code>中，新建名为<code>urls.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""为应用程序users定义url模式"""</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.views <span class="keyword">import</span> LoginView</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># login</span></span><br><span class="line">    url(<span class="string">r'^login/$'</span>,LoginView.as_view(template_name=<span class="string">'users/login.html'</span>),name=<span class="string">'login'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：登录页面的url模式与url https://localhost:8001/users/login 匹配，</code>单词login让它将请求发送给django魔人视图auth_login</p><h3 id="模板login-html"><a href="#模板login-html" class="headerlink" title="模板login.html"></a>模板login.html</h3><p><code>login.html</code>存储在learning_log/users/templates/users/中,templates为新建文件夹，在此文件夹下再创建users文件夹</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125;</span><br><span class="line">&#123;% extends 'learning_logs/base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &#123;% if form.errors %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Your username and password didn't match.Please try again.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'users:login' %&#125;"</span>&gt;</span></span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        &#123;&#123; form.as_p &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">name</span>=<span class="string">"submit"</span>&gt;</span>log in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"next"</span> <span class="attr">value</span>=<span class="string">"&#123;% url 'learning_logs:index' %&#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p><code>注：一个应用程序的模板可以继承另一个应用程序的模板；如果表单中的errors属性被设置，我们就显示一条错误信息，指出输入的密码或账号不匹配；让登陆页面处理表单，将实参action设置为登录页面的url，登录视图将发送一个表单到模板；隐藏的表单元素，next,其中的实参value告诉django在用户成功登录后将重定向到什么地方--这里是主页</code></p><h3 id="链接到登录页面"><a href="#链接到登录页面" class="headerlink" title="链接到登录页面"></a>链接到登录页面</h3><p>在<code>base.html</code>中添加到登录页面的链接，让所有页面都包含它。用户已登录时，不显示这个链接，因此使用一个<code>if</code>判断</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:index' %&#125;"</span>&gt;</span>Learning Log<span class="tag">&lt;/<span class="name">a</span>&gt;</span> -  <span class="comment">&lt;!--创建一个包含项目名的段落，也是一个到主页的链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:topics' %&#125;"</span>&gt;</span>Topics<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    &#123;% if user.is_authenticated %&#125;                 # new</span><br><span class="line">        Hello,&#123;&#123; user.username &#125;&#125;</span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:login' %&#125;"</span>&gt;</span>log in<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;                                              </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock content %&#125;</span><br></pre></td></tr></table></figure><p><code>注：在身份验证系统中，每个模板都可使用变量user，这个变量有一个is_authenticated属性，如果已经登录属性为True，否则的话为False</code></p><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/17/django开发实践版本问题导致错误/">django开发实践版本问题导致错误</a></li><li><a href="https://albert-5.cn/2019/11/16/Django后传-1/">Django后传</a></li><li><a href="https://albert-5.cn/2019/11/18/Django续续传-用户账号/">Django续续传-用户账号</a></li><li><a href="https://blogs.kainy.cn/2018/06/小程序工程化开发之：重构稿转为wxml/">小程序工程化开发之：重构稿转为wxml</a></li><li><a href="https://blogs.kainy.cn/2018/02/通过小程序卡片打开APP获取参数的方法/">通过小程序卡片打开APP获取参数的方法</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Django" scheme="https://albert-5.cn/categories/Django/"/>
    
    
      <category term="django" scheme="https://albert-5.cn/tags/django/"/>
    
      <category term="开发" scheme="https://albert-5.cn/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>图书信息查询课程设计</title>
    <link href="https://albert-5.cn/2019/11/16/%E5%9B%BE%E4%B9%A6%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    <id>https://albert-5.cn/2019/11/16/图书信息查询课程设计/</id>
    <published>2019-11-16T15:53:48.000Z</published>
    <updated>2019-11-16T15:54:32.911Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-family:楷体;color:green;font-size:20px;text-align:center">课程设计–图书信息查询</p><h2 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h2><ul><li>选择适当的逻辑结构、存储结构以及相应运算操作</li><li>采取模块化设计，程序功能设计、数据结构以及逻辑设计合理</li><li>菜单界面显示（图形界面更好）</li><li>算法说明清晰，运行良好，实验数据无误</li><li>编程风格良好，注释、缩进、空行等</li><li><code>课程设计报告</code>要规范</li></ul><h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><blockquote><p>利用单链表，完成图书基本信息的创建</p></blockquote><p><strong>功能说明</strong></p><ul><li>从<code>键盘输入</code>或者从<code>文件</code>中读取相关数据，创建<code>图书信息表</code>==ISBN，书名、作者、出版社、出版年月、价格==</li><li>按照<code>书名</code>查询某本书的所有信息</li><li>按照<code>书名删除某本图书的所有信息</code></li><li>添加<code>新的图书信息</code></li><li>输出显示所有图书的信息</li><li>菜单功能，模块化设计</li></ul><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/05/06/sublime配置有关问题/">sublime配置有关问题</a></li><li><a href="https://albert-5.cn/2019/05/23/模拟退火算法/">模拟退火算法</a></li><li><a href="https://albert-5.cn/2019/11/16/Django迁移模型时报错/">Django迁移模型时报错</a></li><li><a href="https://xugaoxiang.com/2019/10/22/Python实用模块(十四)netifaces/">Python实用模块(十四)netifaces</a></li><li><a href="https://xugaoxiang.com/2019/09/09/Python基础教程之函数/">Python基础教程之函数</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="学习" scheme="https://albert-5.cn/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="https://albert-5.cn/tags/python/"/>
    
      <category term="课程设计" scheme="https://albert-5.cn/tags/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Django后传</title>
    <link href="https://albert-5.cn/2019/11/16/Django%E5%90%8E%E4%BC%A0-1/"/>
    <id>https://albert-5.cn/2019/11/16/Django后传-1/</id>
    <published>2019-11-16T14:45:57.000Z</published>
    <updated>2019-11-16T14:46:58.446Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>说明：文章中写的{百分号 百分号}具体指代<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/16/iSMrOaJNwvqKBoV.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>由于渲染模板的问题，导致指令混淆，特在此说明！</p></blockquote><h2 id="Django-管理网站"><a href="#Django-管理网站" class="headerlink" title="Django 管理网站"></a>Django 管理网站</h2><h3 id="创建超级用户"><a href="#创建超级用户" class="headerlink" title="创建超级用户"></a>创建超级用户</h3><p><code>Django</code>允许创建具备所有权限的用户–超级用户，权限决定了用户可以执行的操作。</p><p>为创建超级用户，需要执行下面操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure><p><code>注:在创建时，系统会提示输入用户名和秘密</code></p><h3 id="向管理网站注册模型"><a href="#向管理网站注册模型" class="headerlink" title="向管理网站注册模型"></a>向管理网站注册模型</h3><p><code>Django</code>会自动在管理网站加入一些模型，入<code>User</code>和<code>Group</code>，但自己创建的模型必须手工进行注册</p><p>在创建应用程序<code>flightbook</code>时，<code>Django</code>在<code>models.py</code>所在目录中创建了一个名为<code>admin.py</code>的文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> flightbook.models <span class="keyword">import</span> model_name</span><br><span class="line">admin.site.register(model_name)</span><br></pre></td></tr></table></figure><p>完成上述操作后，就会在<code>Django</code>管理网站上管理<code>model_name</code>我们的模型；可以通过<a href="https://localhost:8000/admin" target="_blank" rel="noopener">https://localhost:8000/admin</a> 进入管理页面</p><p><code>注:如果这个时候在console中执行 python manage.py runserver，则我们无法看到后台管理页面上的新model_name</code></p><p>我们要做的就是<code>迁移数据库</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations app_name</span><br></pre></td></tr></table></figure><p><code>注：切记，在每次更新模型时都需要做数据库的迁移操作，以便关联数据库</code></p><h2 id="创建网页：以学习笔记首页为例"><a href="#创建网页：以学习笔记首页为例" class="headerlink" title="创建网页：以学习笔记首页为例"></a>创建网页：以学习笔记首页为例</h2><p>使用<code>Django</code>创建网页的过程通常分为三个阶段：定义<code>URL</code>、编写视图和编写模板。首先必须定义<code>URL</code>模式，它描述了<code>URL</code>是如何设计的，让<code>Django</code>知道如何将浏览器请求与<code>URL</code>匹配，以确定返回那个页面。每个<code>URL</code>映射到特定的视图–视图函数获取并处理网页所需的数据，视图函数通常调用一个模板，后者生成浏览器能够理解的网页。</p><h3 id="映射URL"><a href="#映射URL" class="headerlink" title="映射URL"></a>映射<code>URL</code></h3><p>用户通过在浏览器中输入<code>url</code>以及单击链接来请求网页，因此我们需要确定项目需要哪些<code>URL</code>。主页的<code>url</code>很重要，他用来访问项目的基础<code>url</code>，当前基础<code>url</code>返回默认的<code>Django</code>网站。</p><p>在项目主文件夹<code>learning_log</code>中的文件<code>urls.py</code>如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">''</span>,include(<span class="string">'learning_logs.urls'</span>,namespace=<span class="string">'learning_logs'</span>) <span class="comment"># 新增行</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：其中的实参namespace，让learning_logs中的url同项目中的其他url区分开</code></p><p>默认的<code>urls.py</code>包含在文件夹<code>learning_log</code>中，现需要在<code>learning_logs</code>中创建另一个<code>urls.py</code>文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：url（）的第二个实参，指定了要调用的视图函数；第三个实参将这个url模式的名称指定为index</code></p><h3 id="编写视图"><a href="#编写视图" class="headerlink" title="编写视图"></a>编写视图</h3><p>视图函数接受请求信息，准备好生成网页所需的数据，再将这些数据发送给浏览器–通常是使用了定义了网页时什么样的模板实现的</p><p><code>learning_logs</code>中的文件<code>views.py</code>是执行<code>python manage.py startapp</code>时生成的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render   <span class="comment"># render()函数根据视图提供的数据渲染进行渲染</span></span><br><span class="line"><span class="comment"># 在这里创建视图</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">  <span class="string">"""学习笔记的主页"""</span></span><br><span class="line">  <span class="keyword">return</span> render(request,<span class="string">'learning_logs/index.html'</span>)</span><br></pre></td></tr></table></figure><p><code>注：Django将在文件views.py中查找index（）函数，再将请求对象传递给这个视图函数</code></p><h3 id="编写模板"><a href="#编写模板" class="headerlink" title="编写模板"></a>编写模板</h3><p>模板定义了网页的结构。模板指定了网页是什么样的，而当网页被请求时，<code>Django</code>将填入相关的数据，模板能够访问视图提供的任何数据</p><p>随便写一个<code>index.html</code>就行</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/16/eKRD2Bx65IcXA37.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="创建其他网页"><a href="#创建其他网页" class="headerlink" title="创建其他网页"></a>创建其他网页</h2><p>制定创建网页的流程后，可以开始扩充学习笔记项目了，创建两个显示数据的网页，其中一个列出所有的主题，另一个显示特定主题的所有条目。对于每个网页，都将指定<code>url</code>模式，编写一个视图函数，并编写一个模板。因此我们先创建一个父模板，项目中的其他模板都继承它</p><h3 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h3><p><strong>父模板</strong></p><p>创建<code>base.html</code>模板，并存储在<code>index.html</code>所在目录中，这个页面包含所有页面都有的元素；其他模板都继承<code>base.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:index' %&#125;"</span>&gt;</span>Learning Log<span class="tag">&lt;/<span class="name">a</span>&gt;</span>   <span class="comment">&lt;!--创建一个包含项目名的段落，也是一个到主页的链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><p>为创建链接，我们使用了一个<code>模板标签</code>，用大括号和百分号<code>{百分号 百分号}</code>表示。模板标签是一小段代码，生成要在网页中显示的信息，其中<code>{百分号 url &#39;learning_logs:index&#39; 百分号}</code>生成一个<code>url</code>,该<code>url</code>与<code>learning_logs/urls.py</code>中定义的名为<code>index</code>的<code>url</code>相匹配；让模板标签来生成<code>url</code>，可让链接保持最新容易的多。要修改项目中的<code>url</code>，只需要修改<code>urls.py</code>中的URL模式即可，这样网页被请求时，<code>Django</code>将自动插入修改后的<code>url</code>；对于==块标签==，块名是<code>content</code>，是一个占位符，其中包含的信息由子模板指定。</p><p><strong>子模版</strong></p><p>先更改<code>index.html</code>，使得其继承<code>base.html</code></p><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line">&#123;% extends "learning_logs/base.html" %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Learning Log helps you keep track of your learning,for any topic you are learning about.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><p><code>注1：子模板的第一行必须包含标签{百分号 entends 百分号}，让Django知道继承了哪个父模板，文件base.html位于文件夹learning_logs中，因此父模板路径必须包含learning_logs，这行代码导出了模板base.html中的所有内容，让index.html能够指定要在content块预留的空间中添加的内容</code></p><p><code>注2：插入了一个{百分号 block 百分号}标签，以定义content块，不是从父模板继承的内容都包含在content中，在这里是一个描述项目学习笔记的一个段落</code></p><p><strong>特点</strong></p><p>在子模板中，只需包含当前网页特有的内容，这不仅简化了模板，还使得网站修改起来容易的多，要修改很多网页都包含的元素，只需要在父模板中修改该元素</p><h2 id="显示所有主题的页面"><a href="#显示所有主题的页面" class="headerlink" title="显示所有主题的页面"></a>显示所有主题的页面</h2><p>显示全部主题的网页以及显示特定主题中条目的网页</p><h3 id="url模式"><a href="#url模式" class="headerlink" title="url模式"></a>url模式</h3><p>首先来定义一个显示所有主题的页面的额<code>url</code></p><p>修改<code>learning_log/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>)</span><br><span class="line">    url(<span class="string">'^topics/$'</span>,views.topics,name=<span class="string">'topics'</span>)  <span class="comment">#显示所有主题</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：该url（显示所有主题的）与该模式匹配的请求都交给views.py中的函数topics()进行处理</code></p><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>函数<code>topics()</code>需要从数据库中获取一些数据，并将其发送给模板，需要在<code>views.py</code>中添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Topic</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""学习笔记的主页"""</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/index.html'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topics</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示所有主题"""</span></span><br><span class="line">    topics = Topic.objects.order_by(<span class="string">'date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topics'</span>:topics&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topics.html'</span>,context)</span><br></pre></td></tr></table></figure><p><code>注1：首先导入了与所需数据相关联的模型，函数topics()包含一个形参：Django从服务器那里收到的request对象。我们查询数据库--请求Topic对象，并按属性date_added对其进行排序</code></p><p><code>注2：{&#39;topics&#39;:topics}定义了一个将要发送给模板的上下文。上下文是一个字典，其中的键是用来访问的数据的名称，而值是要发送给模板的数据；创建使用数据的网页时，除了对象request和模板的路径外，还要将变量content传递给render（）</code></p><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>显示所有主题的页面的模板接受字典<code>context</code>，以便能够使用<code>topics()</code>提供的数据，先创建一个<code>topics.html</code>，存储在<code>index.html</code>所在的目录中</p><p>topics.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line">&#123;% entends "learning_logs/base.html" %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Topics<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for topic in topics %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123; topic &#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span>    <span class="comment">&lt;!--俩大括号--&gt;</span></span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>No topics have been added yet.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;% endraw %&#125;   <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><p><code>注1：首先使用标签{百分号 entends &quot;learning_logs/base.html&quot; 百分号}来继承base.html，再来定义content块，网页的主题是一个项目列表，列出了用户输入的主题。</code></p><p><code>注2：使用了一个for循环的一个模板标签，遍历字典context中的列表topics。</code></p><p><code>注3：使用了一个模板标签{百分号 empty 百分号}，它告诉Django在列表topics为空时怎么办：这是一条打印信息，告诉用户还没有添加任何主题</code></p><p>现在修改父模板，使其包含显示所有主题的页面的链接</p><p>base.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:index' %&#125;"</span>&gt;</span>Learning Log<span class="tag">&lt;/<span class="name">a</span>&gt;</span>-   <span class="comment">&lt;!--创建一个包含项目名的段落，也是一个到主页的链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:topics' %&#125;"</span>&gt;</span>Topics<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  # 新增</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/16/e5ym86sQiqrYCGP.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="显示特定主题的页面"><a href="#显示特定主题的页面" class="headerlink" title="显示特定主题的页面"></a>显示特定主题的页面</h2><p>创建特定主题的页面–显示giant主义的名称以及该主题的所有条目。将定义一个新的<code>url</code>模式，编写一个视图并创建一个模板。</p><h3 id="url模式-1"><a href="#url模式-1" class="headerlink" title="url模式"></a>url模式</h3><p>显示特定主题的<code>url</code>模式与前面的所有<code>url</code>模式稍微有些不同，因为它将使用主题的<code>id</code>属性来之处请求的是哪个主题，比如用户要查看主题<code>chess（其id为1）</code>的详细页面，<code>url</code>将为<a href="https://localhost:8000/topics/1" target="_blank" rel="noopener">https://localhost:8000/topics/1</a></p><p><code>url</code>的匹配模式，包含在<code>learning_logs/urls.py</code>中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>),</span><br><span class="line">    url(<span class="string">r'^topics/$'</span>,views.topics,name=<span class="string">'topics'</span>) , <span class="comment">#显示所有主题</span></span><br><span class="line">    url(<span class="string">r'^topics/(?P&lt;topic_id&gt;\d+)/$'</span>,views.topic,name=<span class="string">'topic'</span>),  <span class="comment"># 新增</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：r&#39;^topics/(?P&lt;topic_id&gt;\d+)/$ 这是一段正则表达式，r’‘是为了让Django将这个字符串视为原始字符串，并指出正则表达式包含在引号内；这个表达式的第二部分/(?P&lt;topic_id&gt;\d+)/包含在与两个斜杠内的整数匹配，并将这个整数存在一个名为topic_id的实参中；发现匹配时，Django将调用视图函数topic()，并将存储在topic_id中的值最为实参传递给它&#39;</code></p><h3 id="视图-1"><a href="#视图-1" class="headerlink" title="视图"></a>视图</h3><p>函数<code>topic()</code>需要从数据库中获取指定的主题以及与之相关联的所有条目</p><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --snip--</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topics</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示所有主题"""</span></span><br><span class="line">    topics = Topic.objects.order_by(<span class="string">'date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topics'</span>:topics&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topics.html'</span>,context)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topic</span><span class="params">(request,topic_id)</span>:</span>          <span class="comment">#新增函数</span></span><br><span class="line">    topic = Topic.objects.get(id=topic_id)</span><br><span class="line">    entries = topic.entry_set.order_by(<span class="string">'-date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topic'</span>:topic,<span class="string">'entries'</span>:entries&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topic.html'</span>，context)</span><br></pre></td></tr></table></figure><p><code>注：这是第一个除实参外还包汉形参的视图函数，这个函数接受正则表达式（？P&lt;topic_id&gt;\d+）捕获的值，并将其存储到topic_id中；使用get()获取指定的主题;&#39;-date_added&#39;是按照时间降序排列，先显示最近的条目；主题和条目存储在字典中，然后返回给模板topic.html</code></p><h3 id="模板-1"><a href="#模板-1" class="headerlink" title="模板"></a>模板</h3><p>这个模板需要显示主题的名称和条目的内容</p><p>新建<code>topic.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line">&#123;% extends 'learning_logs/base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Topic:&#123; topic &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  <span class="comment">&lt;!--俩大括号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Entries:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;% for entry in entries %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123; entry.date_added|date:'M d,Y H:i' &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!--俩大括号--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123; entry.date.text|linebreaks &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!--俩大括号--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>There are no entries for this topic yet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：继承了base.html页面；同时显示当前的主题存储在中，那为什么可以使用topic？因为它包含在字典context中，之后遍历即可；每个项目列表项会列出两项信息：时间戳和完整地文本。为列出时间戳，显示了属性date_added的值；在Django中，|表示模板过滤器--对模板变量的值进行修改的函数。过滤器date:&#39;M d,Y H:i&#39;以这样的格式显示时间戳：January 1,2019 11:11，而后是显示text的值，而不仅仅显示entry的前50个字符；过滤器linebreaks将包含换行符的长条目转换为浏览器能够理解的格式，以免显示为一个不间断的文本块。</code></p><h3 id="将显示所有主题的页面中的每个主题都设置链接"><a href="#将显示所有主题的页面中的每个主题都设置链接" class="headerlink" title="将显示所有主题的页面中的每个主题都设置链接"></a>将显示所有主题的页面中的每个主题都设置链接</h3><p>修改<code>topics.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line">&#123;% extends "learning_logs/base.html" %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Topics<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for topic in topics %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:topic' topic.id %&#125;"</span>&gt;</span>&#123;  topic &#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span> # 修改，此处为俩大括号</span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>No topics have been added yet.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;% endraw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/17/django开发实践版本问题导致错误/">django开发实践版本问题导致错误</a></li><li><a href="https://albert-5.cn/2019/11/17/Django续传/">Django续传</a></li><li><a href="https://albert-5.cn/2019/11/18/Django续续传-用户账号/">Django续续传-用户账号</a></li><li><a href="https://blogs.kainy.cn/2018/06/小程序工程化开发之：重构稿转为wxml/">小程序工程化开发之：重构稿转为wxml</a></li><li><a href="https://blogs.kainy.cn/2018/02/通过小程序卡片打开APP获取参数的方法/">通过小程序卡片打开APP获取参数的方法</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="django" scheme="https://albert-5.cn/categories/django/"/>
    
    
      <category term="django" scheme="https://albert-5.cn/tags/django/"/>
    
      <category term="开发" scheme="https://albert-5.cn/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>有关hexo-g的报错解决方法</title>
    <link href="https://albert-5.cn/2019/11/16/%E6%9C%89%E5%85%B3hexo-g%E7%9A%84%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://albert-5.cn/2019/11/16/有关hexo-g的报错解决方法/</id>
    <published>2019-11-16T14:11:50.000Z</published>
    <updated>2019-11-16T14:26:23.167Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>最近写了一些博客，可是刚刚<code>hexo g</code>上去的博客，紧接着提交另一篇结果就报错了，，，，</p></blockquote><h2 id="问题起因"><a href="#问题起因" class="headerlink" title="问题起因"></a>问题起因</h2><p>刚开始的报错信息是这样的：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  <span class="keyword">Start</span> processing</span><br><span class="line">Unhandled rejection <span class="keyword">Template</span> render <span class="keyword">error</span>: (<span class="literal">unknown</span> <span class="keyword">path</span>) [Line <span class="number">32</span>, <span class="keyword">Column</span> <span class="number">52</span>]</span><br><span class="line">  tag <span class="keyword">name</span> expected   <span class="comment"># 这才是重点</span></span><br></pre></td></tr></table></figure><p>后来改正了一下报错信息是这个了：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Unhandled rejection Template render <span class="built_in">error</span>: (<span class="literal">unknown</span> path) [Line <span class="number">32</span>, Column <span class="number">46</span>]</span><br><span class="line">  <span class="literal">unknown</span> <span class="built_in">block</span> tag: <span class="built_in">draw</span></span><br></pre></td></tr></table></figure><p>后来就开始在网上查找解决方法：</p><p><a href="https://github.com/hexojs/hexo/issues/1837" target="_blank" rel="noopener">https://github.com/hexojs/hexo/issues/1837</a>  官方的issues</p><p>问题出在这里</p><blockquote><p>在Jinja2中，用<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/16/iSMrOaJNwvqKBoV.png" alt title>                </div>                <div class="image-caption"></div>            </figure>表示指令</p></blockquote><p>其中<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/16/iSMrOaJNwvqKBoV.png" alt title>                </div>                <div class="image-caption"></div>            </figure>被当成hexo模板中的标签，解析出错，我写的博客代码块中有这些的</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>将它用如下代码包住：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in"> raw </span>%&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>这样修改后的Markdown原文：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在Jinja2中，用`&#123;%<span class="built_in"> raw </span>%&#125;&#123;% <span class="built_in">..</span>. %&#125;&#123;% endraw %&#125;`表示指令</span><br></pre></td></tr></table></figure><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/04/22/hello-world/">Hello World</a></li><li><a href="https://jarrychen.xyz/archives/fc9bb284.html">[持续更新] | 搭建一个博客</a></li><li><a href="https://atomrq.gitee.io/2019-09-day/2019-09-17-Hexo-install/">Hexo Configuration</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="疑难杂症" scheme="https://albert-5.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
      <category term="hexo" scheme="https://albert-5.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Django前传</title>
    <link href="https://albert-5.cn/2019/11/16/Django%E5%89%8D%E4%BC%A0/"/>
    <id>https://albert-5.cn/2019/11/16/Django前传/</id>
    <published>2019-11-16T13:21:04.000Z</published>
    <updated>2019-11-16T13:22:41.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><ul><li><p><strong><code>urls.py</code></strong>   网址入口，关联到对应的<code>views.py</code>中的一个函数，访问网址就对应一个函数</p></li><li><p><strong><code>views.py</code></strong>   处理用户发出的请求，从<code>urls.py</code>中对应过来，通过渲染<code>templates</code>中的网页可以将显示内容，比如登录后的用户名，用户请求的数据，输出到网页</p></li><li><p><strong><code>models.py</code></strong>   与数据库相关，存入或读取数据时用到</p></li><li><p><strong><code>forms.py</code></strong>    表单，用户在浏览器上输入数据提交，对数据的验证工作以及输入框的生成等工作</p><p><strong>templates文件夹</strong>    <code>views.py</code>中的函数渲染<code>templates</code>中的<code>HTML</code>模板，得到动态内容的网页，也可以用缓存来提高速度</p></li><li><p><strong><code>admin.py</code></strong>  后台，很少的代码即可拥有一个强大的后台</p></li><li><p><strong><code>settings.py</code></strong>   的设置，配置文件</p></li></ul><h2 id="Django基本命令"><a href="#Django基本命令" class="headerlink" title="Django基本命令"></a>Django基本命令</h2><p><strong>新建一个<code>django project</code></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin.py startproject_name</span><br></pre></td></tr></table></figure><p><strong>新建<code>app</code></strong></p><blockquote><p>先进入项目目录下，然后执行以下命令</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp app_name</span><br></pre></td></tr></table></figure><p><strong>创建数据库表或更改数据库表或字段</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建更改的文件</span></span><br><span class="line">python manage.py makemigrations</span><br><span class="line"><span class="comment"># 将生成的py文件应用到数据库</span></span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><p><strong>使用开发服务器</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p><strong>清空数据库</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py flush</span><br></pre></td></tr></table></figure><p><strong>创建超级管理员</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python mamage.py createsuperuser</span><br><span class="line"><span class="comment"># 修改用户密码</span></span><br><span class="line">python manage.py changepassword username</span><br></pre></td></tr></table></figure><h2 id="Django视图和网址"><a href="#Django视图和网址" class="headerlink" title="Django视图和网址"></a>Django视图和网址</h2><ul><li><p>新建项目 <code>FlightSystem</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startproject FlightSystem</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FlightSystem</span><br><span class="line">├── manage.py</span><br><span class="line">└── FightSystem</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── settings.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── wsgi.py</span><br></pre></td></tr></table></figure><p><code>注：在项目FightSystem下有一个子目录FightSystem;在子目录下有项目的设置文件setting.py，总的urls配置文件urls.py，还有部署到服务器的wsgi.py，__init__.py是python包的目录结构必须的，与调用有关</code></p></li><li><p>创建数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>新建一个应用<code>app</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp flight_book</span><br></pre></td></tr></table></figure><p><code>注：新建的应用是在外层的那个目录下创建的</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flight_book</span><br><span class="line">├── __init__.py</span><br><span class="line">├── admin<span class="selector-class">.py</span>    后台相关的设置</span><br><span class="line">├── apps<span class="selector-class">.py</span>     app相关的设置文件</span><br><span class="line">├── migrations  数据库变更相关</span><br><span class="line">│   └── __init__.py</span><br><span class="line">├── models<span class="selector-class">.py</span>   数据库模型相关</span><br><span class="line">├── tests<span class="selector-class">.py</span>    单元测试</span><br><span class="line">└── views<span class="selector-class">.py</span>    视图逻辑</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>然后将新定义的<code>app</code>添加到<code>settings.py</code>中的<code>install_apps</code>中，如下所示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="comment"># 新建了一个应用flight_book</span></span><br><span class="line">    <span class="string">'flight_book'</span>,   <span class="comment"># 新增添的一行</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><p><code>注：如果不填加的话，django就不能自动找到app中的模板文件（app-name/templates/下的文件）和静态文件（app-name/static/中的文件）</code></p><h2 id="定义视图函数"><a href="#定义视图函数" class="headerlink" title="定义视图函数"></a>定义视图函数</h2><blockquote><p><strong>就是访问页面时的内容</strong></p></blockquote><p>在应用层<code>flight_book</code>这个目录下，打开<code>views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"欢迎来到民航售票系统!"</span>)</span><br></pre></td></tr></table></figure><p><code>注：第一行引入HttpResponse，它是用来向网页返回内容的，就像Python中的 print 一样，只不过 HttpResponse 是把内容显示到网页上;定义了index()函数，第一个参数参数必须是request，与网页发来的请求有关，request变量里面包含get或post的内容，用户浏览器，系统等信息在里面；函数返回一个HttpResponse对象，最终在网页上会显示出来</code></p><p><strong><font color="gray">关键是我们访问什么网址才能看到刚刚写的那个函数呢？怎么让网址和函数关联起来呢？</font></strong></p><h2 id="定义视图函数相关的URL"><a href="#定义视图函数相关的URL" class="headerlink" title="定义视图函数相关的URL"></a>定义视图函数相关的URL</h2><p><code>打开FlightSystem/FlightSystem/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> flightbook <span class="keyword">import</span> views <span class="keyword">as</span> flightbook_views  <span class="comment"># new</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">""</span>, flightbook_views.index),  <span class="comment"># new</span></span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/17/django开发实践版本问题导致错误/">django开发实践版本问题导致错误</a></li><li><a href="https://albert-5.cn/2019/11/16/Django后传-1/">Django后传</a></li><li><a href="https://albert-5.cn/2019/11/17/Django续传/">Django续传</a></li><li><a href="https://blogs.kainy.cn/2018/06/小程序工程化开发之：重构稿转为wxml/">小程序工程化开发之：重构稿转为wxml</a></li><li><a href="https://blogs.kainy.cn/2018/02/通过小程序卡片打开APP获取参数的方法/">通过小程序卡片打开APP获取参数的方法</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="django" scheme="https://albert-5.cn/categories/django/"/>
    
    
      <category term="django" scheme="https://albert-5.cn/tags/django/"/>
    
      <category term="开发" scheme="https://albert-5.cn/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Django2.0错误</title>
    <link href="https://albert-5.cn/2019/11/16/Django2-0%E5%BC%82%E5%B8%B8/"/>
    <id>https://albert-5.cn/2019/11/16/Django2-0异常/</id>
    <published>2019-11-16T10:45:28.000Z</published>
    <updated>2019-11-16T10:46:59.865Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>Django2.0异常：Specifying a namespace in include() without providing an app_name is not supported.</strong></p><p>主目录下的<code>urls.py</code>如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">r'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">r''</span>,include(<span class="string">'learning_logs.urls'</span>,namespace=<span class="string">'learning_logs'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>但是报错了！</p><blockquote><p>‘Specifying a namespace in include() without providing an app_name ‘<br>django.core.exceptions.ImproperlyConfigured: Specifying a namespace in include() without providing an app_name is not supported. Set the app_name attribute in the included module,<br>or pass a 2-tuple containing the list of patterns and app_name instead.</p></blockquote><p>查找<code>conf.py</code>源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">include</span><span class="params">(arg, namespace=None)</span>:</span></span><br><span class="line">    app_name = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> isinstance(arg, tuple):</span><br><span class="line">        <span class="comment"># Callable returning a namespace hint.</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            urlconf_module, app_name = arg</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="keyword">if</span> namespace:</span><br><span class="line">                <span class="keyword">raise</span> ImproperlyConfigured(</span><br><span class="line">                    <span class="string">'Cannot override the namespace for a dynamic module that '</span></span><br><span class="line">                    <span class="string">'provides a namespace.'</span></span><br><span class="line">                )</span><br><span class="line">            <span class="keyword">raise</span> ImproperlyConfigured(</span><br><span class="line">                <span class="string">'Passing a %d-tuple to include() is not supported. Pass a '</span></span><br><span class="line">                <span class="string">'2-tuple containing the list of patterns and app_name, and '</span></span><br><span class="line">                <span class="string">'provide the namespace argument to include() instead.'</span> % len(arg)</span><br><span class="line">            )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># No namespace hint - use manually provided namespace.</span></span><br><span class="line">        urlconf_module = arg</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> isinstance(urlconf_module, str):</span><br><span class="line">        urlconf_module = import_module(urlconf_module)</span><br><span class="line">    patterns = getattr(urlconf_module, <span class="string">'urlpatterns'</span>, urlconf_module)</span><br><span class="line">    app_name = getattr(urlconf_module, <span class="string">'app_name'</span>, app_name)</span><br><span class="line">    <span class="keyword">if</span> namespace <span class="keyword">and</span> <span class="keyword">not</span> app_name:</span><br><span class="line">        <span class="keyword">raise</span> ImproperlyConfigured(</span><br><span class="line">            <span class="string">'Specifying a namespace in include() without providing an app_name '</span></span><br><span class="line">            <span class="string">'is not supported. Set the app_name attribute in the included '</span></span><br><span class="line">            <span class="string">'module, or pass a 2-tuple containing the list of patterns and '</span></span><br><span class="line">            <span class="string">'app_name instead.'</span>,</span><br><span class="line">        )</span><br><span class="line">    namespace = namespace <span class="keyword">or</span> app_name</span><br><span class="line">    <span class="comment"># Make sure the patterns can be iterated through (without this, some</span></span><br><span class="line">    <span class="comment"># testcases will break).</span></span><br><span class="line">    <span class="keyword">if</span> isinstance(patterns, (list, tuple)):</span><br><span class="line">        <span class="keyword">for</span> url_pattern <span class="keyword">in</span> patterns:</span><br><span class="line">            pattern = getattr(url_pattern, <span class="string">'pattern'</span>, <span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> isinstance(pattern, LocalePrefixPattern):</span><br><span class="line">                <span class="keyword">raise</span> ImproperlyConfigured(</span><br><span class="line">                    <span class="string">'Using i18n_patterns in an included URLconf is not allowed.'</span></span><br><span class="line">                )</span><br><span class="line">    <span class="keyword">return</span> (urlconf_module, app_name, namespace)</span><br></pre></td></tr></table></figure><p><code>注：isinstance是Python中的一个内建函数。是用来判断一个对象的变量类型。第一个isinstance判断arg是不是个元组，又有这个 urlconf_module, app_name = arg，由此说明include（arg，namespace=&#39;&#39;），arg是个元组</code></p><p>所以更改后的代码应该为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">r'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">r''</span>,include((<span class="string">'learning_logs.urls'</span>,<span class="string">'learning_logs'</span>),namespace=<span class="string">'learning_logs'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>撒花完结！</p><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/16/Django迁移模型时报错/">Django迁移模型时报错</a></li><li><a href="https://albert-5.cn/2019/11/16/Django后传/">Django后传</a></li><li><a href="http://www.borgor.cn/2019-07-10/54af093c.html">在Django中使用migrate初始化数据库数据</a></li><li><a href="http://www.borgor.cn/2019-06-11/168aa3b1.html">使用Django+Vue.js快速构建项目</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="疑难杂症" scheme="https://albert-5.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
      <category term="Django" scheme="https://albert-5.cn/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django后传</title>
    <link href="https://albert-5.cn/2019/11/16/Django%E5%90%8E%E4%BC%A0/"/>
    <id>https://albert-5.cn/2019/11/16/Django后传/</id>
    <published>2019-11-16T10:45:28.000Z</published>
    <updated>2019-11-16T15:44:48.350Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>说明：文章中写的{百分号 百分号}具体指代<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/16/iSMrOaJNwvqKBoV.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>由于渲染模板的问题，导致指令混淆，特在此说明！</p></blockquote><h2 id="Django-管理网站"><a href="#Django-管理网站" class="headerlink" title="Django 管理网站"></a>Django 管理网站</h2><h3 id="创建超级用户"><a href="#创建超级用户" class="headerlink" title="创建超级用户"></a>创建超级用户</h3><p><code>Django</code>允许创建具备所有权限的用户–超级用户，权限决定了用户可以执行的操作。</p><p>为创建超级用户，需要执行下面操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure><p><code>注:在创建时，系统会提示输入用户名和秘密</code></p><h3 id="向管理网站注册模型"><a href="#向管理网站注册模型" class="headerlink" title="向管理网站注册模型"></a>向管理网站注册模型</h3><p><code>Django</code>会自动在管理网站加入一些模型，入<code>User</code>和<code>Group</code>，但自己创建的模型必须手工进行注册</p><p>在创建应用程序<code>flightbook</code>时，<code>Django</code>在<code>models.py</code>所在目录中创建了一个名为<code>admin.py</code>的文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> flightbook.models <span class="keyword">import</span> model_name</span><br><span class="line">admin.site.register(model_name)</span><br></pre></td></tr></table></figure><p>完成上述操作后，就会在<code>Django</code>管理网站上管理<code>model_name</code>我们的模型；可以通过<a href="https://localhost:8000/admin" target="_blank" rel="noopener">https://localhost:8000/admin</a> 进入管理页面</p><p><code>注:如果这个时候在console中执行 python manage.py runserver，则我们无法看到后台管理页面上的新model_name</code></p><p>我们要做的就是<code>迁移数据库</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations app_name</span><br></pre></td></tr></table></figure><p><code>注：切记，在每次更新模型时都需要做数据库的迁移操作，以便关联数据库</code></p><h2 id="创建网页：以学习笔记首页为例"><a href="#创建网页：以学习笔记首页为例" class="headerlink" title="创建网页：以学习笔记首页为例"></a>创建网页：以学习笔记首页为例</h2><p>使用<code>Django</code>创建网页的过程通常分为三个阶段：定义<code>URL</code>、编写视图和编写模板。首先必须定义<code>URL</code>模式，它描述了<code>URL</code>是如何设计的，让<code>Django</code>知道如何将浏览器请求与<code>URL</code>匹配，以确定返回那个页面。每个<code>URL</code>映射到特定的视图–视图函数获取并处理网页所需的数据，视图函数通常调用一个模板，后者生成浏览器能够理解的网页。</p><h3 id="映射URL"><a href="#映射URL" class="headerlink" title="映射URL"></a>映射<code>URL</code></h3><p>用户通过在浏览器中输入<code>url</code>以及单击链接来请求网页，因此我们需要确定项目需要哪些<code>URL</code>。主页的<code>url</code>很重要，他用来访问项目的基础<code>url</code>，当前基础<code>url</code>返回默认的<code>Django</code>网站。</p><p>在项目主文件夹<code>learning_log</code>中的文件<code>urls.py</code>如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">''</span>,include(<span class="string">'learning_logs.urls'</span>,namespace=<span class="string">'learning_logs'</span>) <span class="comment"># 新增行</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：其中的实参namespace，让learning_logs中的url同项目中的其他url区分开</code></p><p>默认的<code>urls.py</code>包含在文件夹<code>learning_log</code>中，现需要在<code>learning_logs</code>中创建另一个<code>urls.py</code>文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：url（）的第二个实参，指定了要调用的视图函数；第三个实参将这个url模式的名称指定为index</code></p><h3 id="编写视图"><a href="#编写视图" class="headerlink" title="编写视图"></a>编写视图</h3><p>视图函数接受请求信息，准备好生成网页所需的数据，再将这些数据发送给浏览器–通常是使用了定义了网页时什么样的模板实现的</p><p><code>learning_logs</code>中的文件<code>views.py</code>是执行<code>python manage.py startapp</code>时生成的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render   <span class="comment"># render()函数根据视图提供的数据渲染进行渲染</span></span><br><span class="line"><span class="comment"># 在这里创建视图</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">  <span class="string">"""学习笔记的主页"""</span></span><br><span class="line">  <span class="keyword">return</span> render(request,<span class="string">'learning_logs/index.html'</span>)</span><br></pre></td></tr></table></figure><p><code>注：Django将在文件views.py中查找index（）函数，再将请求对象传递给这个视图函数</code></p><h3 id="编写模板"><a href="#编写模板" class="headerlink" title="编写模板"></a>编写模板</h3><p>模板定义了网页的结构。模板指定了网页是什么样的，而当网页被请求时，<code>Django</code>将填入相关的数据，模板能够访问视图提供的任何数据</p><p>随便写一个<code>index.html</code>就行</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/16/eKRD2Bx65IcXA37.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="创建其他网页"><a href="#创建其他网页" class="headerlink" title="创建其他网页"></a>创建其他网页</h2><p>制定创建网页的流程后，可以开始扩充学习笔记项目了，创建两个显示数据的网页，其中一个列出所有的主题，另一个显示特定主题的所有条目。对于每个网页，都将指定<code>url</code>模式，编写一个视图函数，并编写一个模板。因此我们先创建一个父模板，项目中的其他模板都继承它</p><h3 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h3><p><strong>父模板</strong></p><p>创建<code>base.html</code>模板，并存储在<code>index.html</code>所在目录中，这个页面包含所有页面都有的元素；其他模板都继承<code>base.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:index' %&#125;"</span>&gt;</span>Learning Log<span class="tag">&lt;/<span class="name">a</span>&gt;</span>   <span class="comment">&lt;!--创建一个包含项目名的段落，也是一个到主页的链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><p>为创建链接，我们使用了一个<code>模板标签</code>，用大括号和百分号<code>{百分号 百分号}</code>表示。模板标签是一小段代码，生成要在网页中显示的信息，其中<code>{百分号 url &#39;learning_logs:index&#39; 百分号}</code>生成一个<code>url</code>,该<code>url</code>与<code>learning_logs/urls.py</code>中定义的名为<code>index</code>的<code>url</code>相匹配；让模板标签来生成<code>url</code>，可让链接保持最新容易的多。要修改项目中的<code>url</code>，只需要修改<code>urls.py</code>中的URL模式即可，这样网页被请求时，<code>Django</code>将自动插入修改后的<code>url</code>；对于==块标签==，块名是<code>content</code>，是一个占位符，其中包含的信息由子模板指定。</p><p><strong>子模版</strong></p><p>先更改<code>index.html</code>，使得其继承<code>base.html</code></p><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line">&#123;% extends "learning_logs/base.html" %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Learning Log helps you keep track of your learning,for any topic you are learning about.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><p><code>注1：子模板的第一行必须包含标签{百分号 entends 百分号}，让Django知道继承了哪个父模板，文件base.html位于文件夹learning_logs中，因此父模板路径必须包含learning_logs，这行代码导出了模板base.html中的所有内容，让index.html能够指定要在content块预留的空间中添加的内容</code></p><p><code>注2：插入了一个{百分号 block 百分号}标签，以定义content块，不是从父模板继承的内容都包含在content中，在这里是一个描述项目学习笔记的一个段落</code></p><p><strong>特点</strong></p><p>在子模板中，只需包含当前网页特有的内容，这不仅简化了模板，还使得网站修改起来容易的多，要修改很多网页都包含的元素，只需要在父模板中修改该元素</p><h2 id="显示所有主题的页面"><a href="#显示所有主题的页面" class="headerlink" title="显示所有主题的页面"></a>显示所有主题的页面</h2><p>显示全部主题的网页以及显示特定主题中条目的网页</p><h3 id="url模式"><a href="#url模式" class="headerlink" title="url模式"></a>url模式</h3><p>首先来定义一个显示所有主题的页面的额<code>url</code></p><p>修改<code>learning_log/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>)</span><br><span class="line">    url(<span class="string">'^topics/$'</span>,views.topics,name=<span class="string">'topics'</span>)  <span class="comment">#显示所有主题</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：该url（显示所有主题的）与该模式匹配的请求都交给views.py中的函数topics()进行处理</code></p><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>函数<code>topics()</code>需要从数据库中获取一些数据，并将其发送给模板，需要在<code>views.py</code>中添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Topic</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""学习笔记的主页"""</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/index.html'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topics</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示所有主题"""</span></span><br><span class="line">    topics = Topic.objects.order_by(<span class="string">'date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topics'</span>:topics&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topics.html'</span>,context)</span><br></pre></td></tr></table></figure><p><code>注1：首先导入了与所需数据相关联的模型，函数topics()包含一个形参：Django从服务器那里收到的request对象。我们查询数据库--请求Topic对象，并按属性date_added对其进行排序</code></p><p><code>注2：{&#39;topics&#39;:topics}定义了一个将要发送给模板的上下文。上下文是一个字典，其中的键是用来访问的数据的名称，而值是要发送给模板的数据；创建使用数据的网页时，除了对象request和模板的路径外，还要将变量content传递给render（）</code></p><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>显示所有主题的页面的模板接受字典<code>context</code>，以便能够使用<code>topics()</code>提供的数据，先创建一个<code>topics.html</code>，存储在<code>index.html</code>所在的目录中</p><p>topics.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line">&#123;% entends "learning_logs/base.html" %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Topics<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for topic in topics %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123; topic &#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span>    <span class="comment">&lt;!--俩大括号--&gt;</span></span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>No topics have been added yet.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;% endraw %&#125;   <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><p><code>注1：首先使用标签{百分号 entends &quot;learning_logs/base.html&quot; 百分号}来继承base.html，再来定义content块，网页的主题是一个项目列表，列出了用户输入的主题。</code></p><p><code>注2：使用了一个for循环的一个模板标签，遍历字典context中的列表topics。</code></p><p><code>注3：使用了一个模板标签{百分号 empty 百分号}，它告诉Django在列表topics为空时怎么办：这是一条打印信息，告诉用户还没有添加任何主题</code></p><p>现在修改父模板，使其包含显示所有主题的页面的链接</p><p>base.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:index' %&#125;"</span>&gt;</span>Learning Log<span class="tag">&lt;/<span class="name">a</span>&gt;</span>-   <span class="comment">&lt;!--创建一个包含项目名的段落，也是一个到主页的链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:topics' %&#125;"</span>&gt;</span>Topics<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  # 新增</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/16/e5ym86sQiqrYCGP.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="显示特定主题的页面"><a href="#显示特定主题的页面" class="headerlink" title="显示特定主题的页面"></a>显示特定主题的页面</h2><p>创建特定主题的页面–显示giant主义的名称以及该主题的所有条目。将定义一个新的<code>url</code>模式，编写一个视图并创建一个模板。</p><h3 id="url模式-1"><a href="#url模式-1" class="headerlink" title="url模式"></a>url模式</h3><p>显示特定主题的<code>url</code>模式与前面的所有<code>url</code>模式稍微有些不同，因为它将使用主题的<code>id</code>属性来之处请求的是哪个主题，比如用户要查看主题<code>chess（其id为1）</code>的详细页面，<code>url</code>将为<a href="https://localhost:8000/topics/1" target="_blank" rel="noopener">https://localhost:8000/topics/1</a></p><p><code>url</code>的匹配模式，包含在<code>learning_logs/urls.py</code>中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义learning_logs的url模式</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,views.index,name=<span class="string">'index'</span>),</span><br><span class="line">    url(<span class="string">r'^topics/$'</span>,views.topics,name=<span class="string">'topics'</span>) , <span class="comment">#显示所有主题</span></span><br><span class="line">    url(<span class="string">r'^topics/(?P&lt;topic_id&gt;\d+)/$'</span>,views.topic,name=<span class="string">'topic'</span>),  <span class="comment"># 新增</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>注：r&#39;^topics/(?P&lt;topic_id&gt;\d+)/$ 这是一段正则表达式，r’‘是为了让Django将这个字符串视为原始字符串，并指出正则表达式包含在引号内；这个表达式的第二部分/(?P&lt;topic_id&gt;\d+)/包含在与两个斜杠内的整数匹配，并将这个整数存在一个名为topic_id的实参中；发现匹配时，Django将调用视图函数topic()，并将存储在topic_id中的值最为实参传递给它&#39;</code></p><h3 id="视图-1"><a href="#视图-1" class="headerlink" title="视图"></a>视图</h3><p>函数<code>topic()</code>需要从数据库中获取指定的主题以及与之相关联的所有条目</p><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --snip--</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topics</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示所有主题"""</span></span><br><span class="line">    topics = Topic.objects.order_by(<span class="string">'date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topics'</span>:topics&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topics.html'</span>,context)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">topic</span><span class="params">(request,topic_id)</span>:</span>          <span class="comment">#新增函数</span></span><br><span class="line">    topic = Topic.objects.get(id=topic_id)</span><br><span class="line">    entries = topic.entry_set.order_by(<span class="string">'-date_added'</span>)</span><br><span class="line">    context = &#123;<span class="string">'topic'</span>:topic,<span class="string">'entries'</span>:entries&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'learning_logs/topic.html'</span>，context)</span><br></pre></td></tr></table></figure><p><code>注：这是第一个除实参外还包汉形参的视图函数，这个函数接受正则表达式（？P&lt;topic_id&gt;\d+）捕获的值，并将其存储到topic_id中；使用get()获取指定的主题;&#39;-date_added&#39;是按照时间降序排列，先显示最近的条目；主题和条目存储在字典中，然后返回给模板topic.html</code></p><h3 id="模板-1"><a href="#模板-1" class="headerlink" title="模板"></a>模板</h3><p>这个模板需要显示主题的名称和条目的内容</p><p>新建<code>topic.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line">&#123;% extends 'learning_logs/base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Topic:&#123; topic &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  <span class="comment">&lt;!--俩大括号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Entries:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;% for entry in entries %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123; entry.date_added|date:'M d,Y H:i' &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!--俩大括号--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123; entry.date.text|linebreaks &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!--俩大括号--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>There are no entries for this topic yet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br><span class="line">&#123;% endraw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：继承了base.html页面；同时显示当前的主题存储在中，那为什么可以使用topic？因为它包含在字典context中，之后遍历即可；每个项目列表项会列出两项信息：时间戳和完整地文本。为列出时间戳，显示了属性date_added的值；在Django中，|表示模板过滤器--对模板变量的值进行修改的函数。过滤器date:&#39;M d,Y H:i&#39;以这样的格式显示时间戳：January 1,2019 11:11，而后是显示text的值，而不仅仅显示entry的前50个字符；过滤器linebreaks将包含换行符的长条目转换为浏览器能够理解的格式，以免显示为一个不间断的文本块。</code></p><h3 id="将显示所有主题的页面中的每个主题都设置链接"><a href="#将显示所有主题的页面中的每个主题都设置链接" class="headerlink" title="将显示所有主题的页面中的每个主题都设置链接"></a>将显示所有主题的页面中的每个主题都设置链接</h3><p>修改<code>topics.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% draw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br><span class="line">&#123;% extends "learning_logs/base.html" %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Topics<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for topic in topics %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'learning_logs:topic' topic.id %&#125;"</span>&gt;</span>&#123;  topic &#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span> # 修改，此处为俩大括号</span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>No topics have been added yet.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;% endraw %&#125; <span class="comment">&lt;!--注意--&gt;</span></span><br></pre></td></tr></table></figure><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/16/Django迁移模型时报错/">Django迁移模型时报错</a></li><li><a href="https://albert-5.cn/2019/11/16/Django2-0异常/">Django2.0错误</a></li><li><a href="http://www.borgor.cn/2019-07-10/54af093c.html">在Django中使用migrate初始化数据库数据</a></li><li><a href="http://www.borgor.cn/2019-06-11/168aa3b1.html">使用Django+Vue.js快速构建项目</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="django" scheme="https://albert-5.cn/categories/django/"/>
    
    
      <category term="Django" scheme="https://albert-5.cn/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django迁移模型时报错</title>
    <link href="https://albert-5.cn/2019/11/16/Django%E8%BF%81%E7%A7%BB%E6%A8%A1%E5%9E%8B%E6%97%B6%E6%8A%A5%E9%94%99/"/>
    <id>https://albert-5.cn/2019/11/16/Django迁移模型时报错/</id>
    <published>2019-11-16T10:41:52.000Z</published>
    <updated>2019-11-16T10:45:04.886Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="Django迁移模型时报错：IndentationError-expected-an-indented-block"><a href="#Django迁移模型时报错：IndentationError-expected-an-indented-block" class="headerlink" title="Django迁移模型时报错：IndentationError: expected an indented block"></a>Django迁移模型时报错：IndentationError: expected an indented block</h4><p>在迁移模型<code>Entry</code>时，运行代码时</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations learning_logs</span><br></pre></td></tr></table></figure><p><strong>报错！</strong></p><p>经官方文档解释：<a href="https://docs.djangoproject.com/en/1.11/ref/models/fields/#foreignkey发现`foreignkey`需要增加一个参数`on_delete`，于是将" target="_blank" rel="noopener">https://docs.djangoproject.com/en/1.11/ref/models/fields/#foreignkey发现`foreignkey`需要增加一个参数`on_delete`，于是将</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">topic = models.ForeignKey(Topic)</span><br></pre></td></tr></table></figure><p><strong>更改为：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">topic = models.ForeignKey(<span class="string">'Topic'</span>, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure><p>运行成功！</p><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/05/06/sublime配置有关问题/">sublime配置有关问题</a></li><li><a href="https://albert-5.cn/2019/05/23/模拟退火算法/">模拟退火算法</a></li><li><a href="https://albert-5.cn/2019/11/16/图书信息查询课程设计/">图书信息查询课程设计</a></li><li><a href="https://xugaoxiang.com/2019/10/22/Python实用模块(十四)netifaces/">Python实用模块(十四)netifaces</a></li><li><a href="https://xugaoxiang.com/2019/09/09/Python基础教程之函数/">Python基础教程之函数</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="疑难杂症" scheme="https://albert-5.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
      <category term="Django" scheme="https://albert-5.cn/tags/Django/"/>
    
      <category term="python" scheme="https://albert-5.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>导出mysql数据的编码问题</title>
    <link href="https://albert-5.cn/2019/11/14/%E5%AF%BC%E5%87%BAmysql%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>https://albert-5.cn/2019/11/14/导出mysql数据的编码问题/</id>
    <published>2019-11-14T02:11:02.000Z</published>
    <updated>2019-11-14T02:17:47.942Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Python导出Mysql数据时中文显示异常的问题"><a href="#Python导出Mysql数据时中文显示异常的问题" class="headerlink" title="Python导出Mysql数据时中文显示异常的问题"></a>Python导出Mysql数据时中文显示异常的问题</h2><p>​    最近利用Python+Mysql搞课程设计，但是从Mysql导出数据时遇到了编码问题，中文字体无法显示，替代的反而是一个个的问好</p><p><img src="https://i.loli.net/2019/11/14/toBs56jYw8F1AHm.png" alt="编码错误时显示"></p><p>​    其实解决的方法也很简单：</p><ul><li><p>首先在<code>.py</code>的文件的开头添加上编码设置来说明文件的编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding='utf8'</span></span><br></pre></td></tr></table></figure></li><li><p>然后，在连接数据的连接参数上加上字符集说明查询的结果的编码，这个不加的话导致的结果就是一系列的问好</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">db = pymysql.connect(<span class="string">'localhost'</span>,<span class="string">'your id'</span>,<span class="string">'your password'</span>,<span class="string">'your database'</span>,charset=<span class="string">'utf8'</span>)</span><br></pre></td></tr></table></figure><p><code>注：运行后结果如下</code></p></li></ul><p><img src="https://i.loli.net/2019/11/14/cnlAiRb4xehE3Z7.png" alt="编码正确时显示"></p><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/05/06/sublime配置有关问题/">sublime配置有关问题</a></li><li><a href="https://albert-5.cn/2019/05/23/模拟退火算法/">模拟退火算法</a></li><li><a href="https://albert-5.cn/2019/11/16/Django迁移模型时报错/">Django迁移模型时报错</a></li><li><a href="https://xugaoxiang.com/2019/10/22/Python实用模块(十四)netifaces/">Python实用模块(十四)netifaces</a></li><li><a href="https://xugaoxiang.com/2019/09/09/Python基础教程之函数/">Python基础教程之函数</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="疑难杂症" scheme="https://albert-5.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
      <category term="python" scheme="https://albert-5.cn/tags/python/"/>
    
      <category term="mysql" scheme="https://albert-5.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>html表单</title>
    <link href="https://albert-5.cn/2019/11/04/html%E8%A1%A8%E5%8D%95/"/>
    <id>https://albert-5.cn/2019/11/04/html表单/</id>
    <published>2019-11-03T23:48:29.000Z</published>
    <updated>2019-11-03T23:49:31.639Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="HTML表单"><a href="#HTML表单" class="headerlink" title="HTML表单"></a>HTML表单</h3><p><strong>HTML表单概述</strong></p><blockquote><p>表单在网页中主要负责数据收集功能。一个表单有三个基本组成部分：</p><ul><li><strong>表单标签</strong>：这里面包含了处理表单元素所用CGI程序的URL以及数据提交到服务器的方法</li><li><strong>表单域</strong>：包含了文本框、密码框、隐藏域、多行文本框、复选框、单选框、下拉选择框和文件上传框等。</li><li><strong>表单按钮</strong>：包括提交按钮、复位按钮和一般按钮；用于将数据传送到服务器上的 CGI 脚本或者取消输入，还可以用表单按钮来控制其他定义了处理脚本的处理工作</li></ul></blockquote><p><code>注：定义来源于百科</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">'form_name'</span> <span class="attr">method</span>=<span class="string">'get/post'</span> <span class="attr">action</span>=<span class="string">'url'</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>name:</strong> 定义表单的名字</li><li><strong>method:</strong> 定义表单结果从浏览器传送到服务器的方式，默认参数为：<code>get</code>。<code>post</code> 安全性高，因此常用作输入密码，而<code>get</code>安全性较低，一般用于查询数据</li><li><strong>action:</strong> 用来指定表单处理程序的位置（服务器脚本处理程序）</li></ul><p><strong>发送表单数据</strong></p><p><code>action属性</code></p><blockquote><p>定义了发送数据要去的地址，它的值是必须是一个有效的URL，可以是相对URL，也可以是绝对URL。如果灭有提供此属性或者<code>action=“#”</code>，则数据将被发送到包含表单的页面的URL</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">'https://albert-5.cn'</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据发送到一个绝对URL--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">'/somewhere_else'</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据发送到一个相对URL--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">'#'</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据发送到表单出现的相同页面上--&gt;</span></span><br></pre></td></tr></table></figure><p><code>method属性</code></p><blockquote><p>定义如何发送数据，HTML表单数据可以通过许多不同的数据传输，其中最常见的是<code>GET</code>和<code>POST</code>方法</p></blockquote><p><code>get</code>方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">'https://albert-5.cn'</span> <span class="attr">method</span>=<span class="string">'get'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">'say'</span>&gt;</span>what do you want to say?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">'say'</span> <span class="attr">id</span>=<span class="string">'say'</span> <span class="attr">value</span>=<span class="string">'hello'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">'to'</span>&gt;</span>Where do you want to go?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">'to'</span> <span class="attr">id</span>=<span class="string">'to'</span> <span class="attr">value</span>=<span class="string">'China'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span></span><br><span class="line">      发送数据</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：例子所示数据被附加到URL 作为一系列的名称/值对。在 URL web 地址结束之后，我们包括一个问号(?)，后面是名称/值对，每一个都由一个与符号(&amp;)分隔开。</code></p><p><code>post方法</code></p><blockquote><p>使用 post 方法。首先，浏览器将与 action 属性中指定的表单处理服务器建立联系，一旦建立连接之后，浏览器就会按分段传输的方法将数据发送给服务器。在服务器端，一旦 post 样式的应用程序开始执行时，就应该从一个标志位置读取参数，而一旦读到参数，在应用程序能够使用这些表单值以前，必须对这些参数进行解码。用户特定的服务器会明确指定应用程序应该如何接受这些参数。</p></blockquote><p><code>注：使用 get 请求用户将在他们的 URL 栏中看到数据，但是使用 post 请求用户将不会看到。因此一般 get 用于查询数据， post 用于传输密码等。</code></p><p><strong>表单验证</strong></p><blockquote><p>表单验证帮助我们确保用户以正确格式填写表单数据，确保提交的数据能使我们的应用程序正常工作。生活中我们经常会注册账号，而在注册时，你是否也遇到过诸如：“该行不能为空”，“请输入正确的电话号码”，“请输入正确的邮箱号码”，“确认密码不一致，请重新输入”之类的提示，这些就属于我们的表单验证。</p></blockquote><p><code>使用内置表单数据验证</code></p><p><strong>HTML5</strong>一个特别有用的新功能就是在不使用一行脚本代码的情况下，即对用户的输入进行数据校验，这都是通过表单元素的校验属性实现的。</p><ul><li><p><code>requireed属性</code></p><p>输入值不能为空，如果输入值为空，将会提示错误消息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">'place'</span>&gt;</span>Where do you want to go?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">'place'</span> <span class="attr">name</span>=<span class="string">'place'</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>强制条目的长度</code></p><p>所有文本框的<code>（&lt;input&gt; 或者 &lt;textarea&gt;）可以强制使用minlength和maxlength属性，如果值小于该字段 minlength 的值或大于 maxlength 值则无效</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">'number'</span>&gt;</span>Which number would you like?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'number'</span> <span class="attr">id</span>=<span class="string">'number'</span> <span class="attr">name</span>=<span class="string">'number'</span> <span class="attr">value</span>=<span class="string">'1'</span> <span class="attr">min</span>=<span class="string">'1'</span> <span class="attr">max</span>=<span class="string">'10'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    Submit</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><center><strong> 第一个表单</strong></center><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  姓名：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">name</span>=<span class="string">'YourName'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  专业：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">name</span>=<span class="string">'YourFro'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form><br>  姓名：<br><br>  <input type="text" name="YourName"><br>  <br><br>  专业：<br><br>  <input type="text" name="YourFro"><br></form><p><strong>构建HTML表单</strong></p><p><code>fieldset和legend元素</code></p><blockquote><p><code>&lt;fieldset&gt;</code>元素组合表单中的相关数据，<code>&lt;legend&gt;</code>元素为<code>&lt;fieldset&gt;</code>元素定义标题</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">legend</span>&gt;</span></span><br><span class="line">      标题</span><br><span class="line">    <span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">name</span>=<span class="string">'Yourname'</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年级：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">name</span>=<span class="string">'YourNJ'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form><br>  <fieldset><br>    <legend><br>      标题<br>    </legend><br>    姓名：<br><br>    <input type="text" name="Yourname"><br><br>    年级：<br><br>    <input type="text" name="YourNJ"><br>  </fieldset><br></form><p><code>label元素</code></p><blockquote><p><code>input</code>元素定义标注，当选择该标签是，浏览器会自动将焦点转到和标签相关的表单控件上，<code>&lt;label&gt;</code>标签的<code>for</code>属性应当与相关元素的<code>id</code>属性相同，使得<code>&lt;label&gt;</code>标签与<code>&lt;input&gt;</code>正确相关联。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">'male'</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'radio'</span> <span class="attr">name</span>=<span class="string">'sex'</span> <span class="attr">id</span>=<span class="string">'male'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">'female'</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'radio'</span> <span class="attr">name</span>=<span class="string">'sex'</span> <span class="attr">id</span>=<span class="string">'female'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form><br>  <label for="male">男</label><br>  <input type="radio" name="sex" id="male"><br>  <br><br>  <label for="female">女</label><br>  <input type="radio" name="sex" id="female"><br></form><p><code>原生表单组件</code></p><blockquote><p>原生表单组件主要包含文本输入框、单行文本框、e-mail输入框、密码输入框、搜索框、电话号码输入框、URL输入框、多行文本框、下拉组件、可勾选组件、按钮</p></blockquote><p><code>文本输入框input</code></p><p><code>注：HTML文本框只是个纯文本输入控件，这就意味着不能用它来进行富文本编辑（如加粗、斜体等）</code></p><p><strong>文本域的通用规范</strong></p><ul><li>可以被标记<code>readonly</code>（用户不能修改输入值）甚至是<code>disabled</code>（输入值永远不会与表单数据的其余部分一起发送）</li><li>可以有个<code>placeholder</code>这是文本输入框中出现的文本，用来简略描述输入框的目的</li><li>都受<code>size</code>（输入框的物理尺寸）和<code>length</code>（文本框可以输入的最大字符数）约束</li></ul><p><code>单行文本框</code></p><blockquote><p>单行文本框是用<code>type</code>属性值为<code>text</code>的<code>&lt;input&gt;</code>元素创建的，此外如果你指定给<code>type</code>属性的值不被浏览器支持（比如<code>type=&#39;date&#39;</code>）也会使用<code>text</code>作为它的值</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">id</span>=<span class="string">'text'</span> <span class="attr">name</span>=<span class="string">'text'</span> <span class="attr">value</span>=<span class="string">'I am a text'</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>e-mail输入框</code></p><blockquote><p>该输入框设置<code>type</code>为<strong>e-mail</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'email'</span> <span class="attr">id</span>=<span class="string">'email'</span> <span class="attr">name</span>=<span class="string">'email'</span> <span class="attr">multiple</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：用户需要输入一个有效的 e-mail 地址；其他任何输入都会导致输入框报错。而通过设置 multiple 属性，这种输入框也可以让用户输入多个 e-mail 地址(多个 e-mail 地址之间用逗号隔开)。</code></p><p><code>密码输入框</code></p><blockquote><p>输入框设置为<code>type</code>为<code>password</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'password'</span> <span class="attr">id</span>=<span class="string">'pwd'</span> <span class="attr">name</span>=<span class="string">'pwd'</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>搜索框</code></p><blockquote><p>输入框设置<code>type</code>为<code>search</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'search'</span> <span class="attr">id</span>=<span class="string">'search'</span> <span class="attr">name</span>=<span class="string">'search'</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>电话号码输入框</code></p><blockquote><p>输入框设置<code>type</code>为<code>tel</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'tel'</span> <span class="attr">id</span>=<span class="string">'tel'</span> <span class="attr">name</span>=<span class="string">'tel'</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>URL输入框</code></p><blockquote><p>设置<code>type</code>值为<code>url</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'url'</span> <span class="attr">id</span>=<span class="string">'url'</span> <span class="attr">name</span>=<span class="string">'url'</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：它为字段添加了特殊的验证约束，如果输入值是个不符合格式的 url，浏览器就会报告错误。符合 url 格式并不意味着它引用了一个实际存在的位置。</code></p><p><code>多行文本框</code></p><blockquote><p>使用<code>&lt;textarea&gt;</code>元素</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">clos</span>=<span class="string">'每行中的字符数'</span> <span class="attr">rows</span>=<span class="string">'显示的行数'</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>下拉组件</code></p><p>HTML 有两种下拉组件：选择框和自动补全组件。这两者的交互方式是一样的，一旦控件被激活，浏览器会展示列表的值让用户从中选择，这个值列表会覆盖在页面内容之上。</p><p>选择框语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;select&gt;</code>和<code>&lt;option&gt;</code>标记的常用属性：</p><p>自动补全组件：</p><blockquote><p>使用<code>&lt;datalist&gt;</code>元素来为表单小部件提供建议的、自动完成的值，并使用一些<code>&lt;option&gt;</code>子元素来指定要显示的值。然后使用 <code>list</code> 属性将数据列表绑定到一个文本域(通常是一个<code>&lt;input&gt;</code>元素)。</p><p>一旦数据列表与表单小部件相关联，它的选项用于自动完成用户输入的文本。通常，这是作为一个下拉框向用户展示的，在输入框中输入可能匹配的内容。</p></blockquote><p>例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"myColor"</span>&gt;</span>What's your favorite color?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"myColor"</span> <span class="attr">id</span>=<span class="string">"myColor"</span> <span class="attr">list</span>=<span class="string">"mySuggestion"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"mySuggestion"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>black<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>blue<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>green<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>red<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>black<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>yellow<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>可勾选组件</code></p><blockquote><p>可勾选组件指的是通过点击能够改变其状态的组件。有两种可勾选组件：复选框和单选框，它们都可以通过 checked 属性来指示该组件是否默认被勾选。</p><p>值得注意的是，对大多数表单组件而言，表单提交后所有具有 name 属性的组件都会被提交，即使它们没有获值。但对于可勾选组件，它们的值却只有在它们被勾选之后才会提交，换而言之：如果没有勾选，则不会提交任何东西。</p></blockquote><p>复选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>&gt;</span></span><br></pre></td></tr></table></figure><p>单选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>几个单选按钮可以连接在一起,只需要把它们的 <code>name</code> 值设置为相同的。同一组中只有一个按钮可以同时被选。如果没有选中任何一个，那么整个单选按钮池就被认为处于未知状态，且不会随表单提交。</p></blockquote><p>例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">legend</span>&gt;</span>What is your favorite color?<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"red"</span>&gt;</span>red<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span> <span class="attr">id</span>=<span class="string">"red"</span> <span class="attr">name</span>=<span class="string">"color"</span> <span class="attr">value</span>=<span class="string">"red"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"yellow"</span>&gt;</span>yellow<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"yellow"</span> <span class="attr">name</span>=<span class="string">"color"</span> <span class="attr">value</span>=<span class="string">"yellow"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"blue"</span>&gt;</span>blue<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"blue"</span> <span class="attr">name</span>=<span class="string">"color"</span> <span class="attr">value</span>=<span class="string">"blue"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>按钮</code></p><blockquote><p>HTML 表单中，有三种按钮：提交按钮，重置按钮,匿名按钮。我们可以使用 <code>&lt;button&gt;</code>元素或者<code>&lt;input&gt;</code>元素来创建一个按钮。<code>type</code> 属性的值指定显示什么类型的按钮。</p></blockquote><p>提交按钮（submit）</p><blockquote><p>用于发送表单数据给服务器。</p></blockquote><p>语法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">    This a submit button</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--or--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"This is a submit button"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重置按钮（reset）</p><blockquote><p>用于重置所有表单组件为默认值。</p></blockquote><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span></span><br><span class="line">    This a reset button</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--or--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"This is a reset button"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>匿名按钮（button）</p><blockquote><p>没有自动生效的按钮，但是可以使用 JavaScript 代码进行定制。如果你省略了 type 属性，那么这就是默认值。</p></blockquote><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span></span><br><span class="line">    This a anonymous button</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--or--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"This is a anonymous button"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不管使用的是<code>&lt;button&gt;</code>元素还是<code>&lt;input&gt;</code>元素，按钮的行为都是一样的。它们的不同点在于：</p><ul><li>从前面的例子中也可以看出<code>&lt;button&gt;</code>元素允许你使用 HTML 内容作为其标记内容，但<code>&lt;input&gt;</code>元素只接受纯文本内容。</li><li>使用<code>&lt;button&gt;</code>元素，可以有一个不同于按钮标签的值(通过将其设置为 value 属性)。（但是在 IE 8之前的版本中是不行的）</li></ul><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/01/html后期-副/">html后期-副</a></li><li><a href="https://albert-5.cn/2019/10/30/html后期/">HTML后期</a></li><li><a href="https://albert-5.cn/2019/11/01/html之多媒体嵌入/">html之多媒体嵌入</a></li><li><a href="https://blog.naaln.com/2016/12/2016-front-end-sibi/">这会是 2016 年前端的年末撕逼吗？</a></li><li><a href="http://sumaolin.com/2016/05/06/readList/">readList</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="html" scheme="https://albert-5.cn/categories/html/"/>
    
    
      <category term="前端" scheme="https://albert-5.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="https://albert-5.cn/tags/html/"/>
    
      <category term="表单" scheme="https://albert-5.cn/tags/%E8%A1%A8%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>html之多媒体嵌入</title>
    <link href="https://albert-5.cn/2019/11/01/html%E4%B9%8B%E5%A4%9A%E5%AA%92%E4%BD%93%E5%B5%8C%E5%85%A5/"/>
    <id>https://albert-5.cn/2019/11/01/html之多媒体嵌入/</id>
    <published>2019-11-01T15:20:00.000Z</published>
    <updated>2019-11-02T01:06:51.452Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center><strong>多媒体与嵌入</strong></center><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><blockquote><p>在HTML中，图象由<code>&lt;img&gt;</code>标签定义。语法为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'url'</span> <span class="attr">alt</span>=<span class="string">''</span>/&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><code>&lt;img&gt;</code>是空标签，它只包含属性，没有闭合标签。要在页面上显示图像，需要使用源属性<code>src</code>。<code>src</code>的值是图像文件的URL，也就是引用该图像的文件的绝对路径或者是相对路径。<code>alt</code>规定图像的替代文本即当图片未成功显示的时候显示的文本信息。title设置鼠标悬停时显示的内容(一般不用设置)。另外还可以设置<strong>width</strong>和<strong>height</strong>的值来设置图片的宽和高。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'https://albert-5.cn/img/avatar.jpg'</span> <span class="attr">alt</span>=<span class="string">'萨瓦迪卡不'</span> <span class="attr">title</span>=<span class="string">'Hello'</span> <span class="attr">width</span>=<span class="string">'700px'</span> <span class="attr">height</span>=<span class="string">'600px'</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>相对路径</strong></p><blockquote><p>这种路径是以引用文件的网页所在位置为参考基础，而建立出的目录路径。</p><ul><li>图象文件和HTML文件位于同一文件夹：只需要输入图象文件的名称即可</li><li>图象文件位于HTML文件的下一级文件夹：输入文件夹和文件名，之间用<code>/</code>隔开</li><li>图象文件位于HTML文件的上一级文件夹：在文件名之前加入<code>../</code>，如果是上两级，则需要使用<code>../../</code>，以此类推</li></ul></blockquote><p><strong>绝对路径</strong></p><blockquote><p>指当所有网页引用同一个文件时，所使用的路径都是一样的，就是交待清文件的具体位置，例如<code>C:\Users\DELL\Desktop</code></p></blockquote><p><strong>自适应图片</strong></p><blockquote><p>网页前端开发的时候，需要让图片能够根据父元素自适应变化大小，从而使网页排版更加美观。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">DOCTYPE</span> <span class="attr">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">      img&#123;</span></span><br><span class="line"><span class="undefined">        -moz-background-size: contain|cover;</span></span><br><span class="line"><span class="undefined">        -webkit-background-size: contain|cover;</span></span><br><span class="line"><span class="undefined">        background-size: contain|cover;</span></span><br><span class="line"><span class="undefined">        width: 100%;</span></span><br><span class="line"><span class="undefined">        height: auto;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://albert-5.cn/img/avatar.jpg"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：通过把width设置为100%，使得图片随着窗口宽度的改变而自动适应变化大小</code></p><p><strong>视频和音频内容</strong></p><p><strong><code>video</code>标签</strong></p><blockquote><p>用来插入视频</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">'https://labfile.oss.aliyuncs.com/codehour/codehour.mp4'</span> <span class="attr">controls</span>=<span class="string">'controls'</span>&gt;</span>我也不知道这是啥<span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>video</code>标签的常用属性：</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td><strong>autoplay</strong></td><td><strong>autoplay</strong></td><td>如果出现该属性，则视频在就绪后立马播放</td></tr><tr><td><strong>controls</strong></td><td><strong>controls</strong></td><td>如果出现该属性，则向用户显示控件，比如播放按钮</td></tr><tr><td><strong>height</strong></td><td><strong>pixels</strong></td><td>设置视频播放器的高度</td></tr><tr><td><strong>loop</strong></td><td><strong>loop</strong></td><td>如果出现该属性，则当媒介文件完成后播放后再次开始播放</td></tr><tr><td><strong>preload</strong></td><td><strong>preload</strong></td><td>如果出现该属性，则视频在页面加载时，并预备播放；如果使用“autoplay”，则忽略该属性。</td></tr><tr><td><strong>src</strong></td><td><strong>url</strong></td><td>要播放视频的url</td></tr><tr><td><strong>width</strong></td><td><strong>pixels</strong></td><td>设置视频播放的宽度</td></tr></tbody></table><p><strong><code>audio</code>标签</strong></p><blockquote><p>用来嵌入音频</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">'http://labfile.oss.aliyuncs.com/courses/1236/平凡之路.mp3'</span> <span class="attr">type</span>=<span class="string">'audio/mp3'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><audio controls><br>  <source src="http://labfile.oss.aliyuncs.com/courses/1236/平凡之路.mp3" type="audio/mp3"><br></audio><p><strong>Web增加向量图</strong></p><p><code>向量/矢量图定义</code></p><blockquote><p>矢量图像，也称为面向对象的图像或绘图图像，在数学上定义为一系列由线连接的点。矢量文件中的图形元素称为对象。每个对象都是一个自成一体的实体，它具有颜色、形状、轮廓、大小和屏幕位置等属性。既然每个对象都是一个自成一体的实体，就可以在维持它原有清晰度和弯曲度的同时，多次移动和改变它的属性，而不会影响图例中的其它对象。这些特征使基于矢量的程序特别适用于图例和三维建模，因为它们通常要求能创建和操作单个对象。基于矢量的绘图同分辨率无关。这意味着它们可以按最高分辨率显示到输出设备上。</p></blockquote><p><code>注：以上定义来源于百度百科</code></p><p><code>为什么要使用矢量图？</code></p><p>电脑中的图像类型分为两大类，一类称为<strong>点阵图（位图）</strong>，一类称为<strong>矢量图</strong>； 点阵图在图片放大的时候会出现模糊现象（你可以试着把一个 <code>png</code> 格式的图片放大观察一下），矢量图则不会。因此越来越多的人开始使用矢量图来作为网页图标。</p><p><code>如何添加矢量图</code></p><ul><li>阿里巴巴矢量图标库 <a href="http://iconfont.cn/" target="_blank" rel="noopener">http://iconfont.cn/</a></li><li>谷歌浏览器里的矢量图库 <a href="https://iconmoon.cn/" target="_blank" rel="noopener">https://iconmoon.cn/</a></li></ul><p><code>注：上述矢量图标用时再做考虑吧！</code></p><p><strong>iframe</strong></p><blockquote><p><code>iframe</code>元素会创建包含另外一个文档的内联框架（即行内框架），用于嵌入其他网页</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">'规定在iframe中显示的文档的url'</span> <span class="attr">width</span>=<span class="string">''</span> <span class="attr">height</span>=<span class="string">''</span> <span class="attr">frameborder</span>=<span class="string">'1/0'</span> <span class="attr">name</span>=<span class="string">'iframe名称'</span> <span class="attr">scrolling</span></span></span><br></pre></td></tr></table></figure><p>常用属性说明</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td><strong>align</strong></td><td>left  right  top  middle  bottom</td><td></td></tr><tr><td><strong>frameborder</strong></td><td>1  0</td><td>规定是否显示框架周围的边框</td></tr><tr><td><strong>height</strong></td><td>pixels  %</td><td>规定iframe的高度</td></tr><tr><td><strong>longdesc</strong></td><td>url</td><td>规定一个页面，包含有关iframe的较长描述</td></tr><tr><td><strong>marginheight</strong></td><td>pixels</td><td>定义iframe的顶部和底部的边距</td></tr><tr><td><strong>marginwidth</strong></td><td>pixels</td><td>规定iframe的左侧和右侧的边距</td></tr><tr><td><strong>name</strong></td><td>frame_name</td><td>规定iframe的名称</td></tr><tr><td><strong>sandbox</strong></td><td>allow-forms    allow-same-origin  allow-scripts   allow-top-navigation</td><td>启用一系列对<code>&lt;iframe&gt;</code>中内容的额外限制</td></tr><tr><td><strong>scrolling</strong></td><td>yes   no   auto</td><td>规定是否在iframe中显示滚动条</td></tr><tr><td><strong>seamless</strong></td><td>seamless</td><td>规定<code>&lt;iframe&gt;</code>看上去像是包含文档的一部分</td></tr><tr><td><strong>src</strong></td><td>url</td><td>规定<code>iframe</code>中显示的文档的url</td></tr><tr><td><strong>srcdoc</strong></td><td>html_code</td><td>规定<code>&lt;iframe&gt;</code>中显示的页面的HTML内容</td></tr><tr><td><strong>width</strong></td><td>pixels</td><td>定义iframe的宽度</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">DOCTYPE</span> <span class="attr">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">'en'</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">chaeset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">'https://albert-5.cn'</span> <span class="attr">width</span>=<span class="string">'400px'</span> <span class="attr">height</span>=<span class="string">'400px'</span> <span class="attr">frameborder</span>=<span class="string">'0'</span> <span class="attr">marginheight</span>=<span class="string">'50px'</span> <span class="attr">marginwidth</span>=<span class="string">'50px'</span> <span class="attr">scrolling</span>=<span class="string">'yes'</span> <span class="attr">name</span>=<span class="string">'text'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><center>效果展示如下</center><iframe src="https://albert-5.cn" width="400px" height="400px" frameborder="0" marginheight="50px" marginwidth="50px" scrolling="yes" name="text"><br></iframe><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/01/html后期-副/">html后期-副</a></li><li><a href="https://albert-5.cn/2019/11/04/html表单/">html表单</a></li><li><a href="https://albert-5.cn/2019/10/30/html后期/">HTML后期</a></li><li><a href="https://blog.naaln.com/2016/12/2016-front-end-sibi/">这会是 2016 年前端的年末撕逼吗？</a></li><li><a href="http://sumaolin.com/2016/05/06/readList/">readList</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="html" scheme="https://albert-5.cn/categories/html/"/>
    
    
      <category term="前端" scheme="https://albert-5.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="https://albert-5.cn/tags/html/"/>
    
      <category term="多媒体嵌入" scheme="https://albert-5.cn/tags/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%B5%8C%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>html后期-副</title>
    <link href="https://albert-5.cn/2019/11/01/html%E5%90%8E%E6%9C%9F-%E5%89%AF/"/>
    <id>https://albert-5.cn/2019/11/01/html后期-副/</id>
    <published>2019-11-01T12:48:40.000Z</published>
    <updated>2019-11-01T15:48:38.520Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="表格基础"><a href="#表格基础" class="headerlink" title="表格基础"></a>表格基础</h3><blockquote><p><code>列表</code>是只有列存在的表格，布局从上到下的；</p><p><code>表格</code>是小单元格组成的，而这些小单元格很有次序的排列着，一个表格通常由许多行许多列组成的。</p></blockquote><p><strong><code>&lt;table&gt;</code>标签</strong></p><blockquote><p><code>&lt;table&gt;...&lt;table&gt;</code>标签用在HTML文档中创建表格。它包含表名和表格本身的内容的代码</p></blockquote><p><strong><code>&lt;tr&gt;</code>标签</strong></p><blockquote><p><code>&lt;tr&gt;</code>标签用于定义每一行</p></blockquote><p><strong><code>&lt;td&gt;</code>标签</strong></p><blockquote><p><code>&lt;td&gt;</code>标签用于定义每一列</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行第一列<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行第二列<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行第一列<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行第二列<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/11/01/r8S3UDVnPOaMImu.png" alt="浏览器效果展示" title>                </div>                <div class="image-caption">浏览器效果展示</div>            </figure><p><code>注：上方的显示效果并没有边框，所以需要补充边框来更好显示</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">'1'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行第一列<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行第二列<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行第一列<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行第二列<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：border=‘1’是指表格边框的厚度为1像素（px），它的默认值是0</code></p><p><code>表格的其他常用属性：</code></p><table><thead><tr><th>属性名</th><th>含义</th><th>常用属性值</th></tr></thead><tbody><tr><td><strong>cellspacing</strong></td><td>设置单元格与单元格的距离</td><td>单位为<code>px</code>像素值，默认<code>2px</code></td></tr><tr><td><strong>cellpadding</strong></td><td>设置文字与单元格间的距离</td><td>默认为<code>1px</code></td></tr><tr><td><strong>width</strong></td><td>设置表格的宽度</td><td>单位为<code>px</code></td></tr><tr><td><strong>height</strong></td><td>设置表格的高度</td><td>单位为<code>px</code></td></tr><tr><td><strong>bgcolor</strong></td><td>设置背景颜色</td><td><code>red,green等</code></td></tr></tbody></table><p><code>注：其余属性的使用和border类似，只需要在table标签中添加属性即可。</code></p><p><strong><code>&lt;th&gt;</code>元素添加表头</strong></p><p>表头一般位于表格的第一行第一列，其文本加粗居中显示，就类似于课程表上的第一行日期的显示，而表头的设置很简单就是用<code>&lt;th&gt;&lt;/th&gt;</code>代替<code>&lt;td&gt;&lt;/td&gt;</code>即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">'1'</span> <span class="attr">width</span>=<span class="string">'300px'</span> <span class="attr">height</span>=<span class="string">'150px'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周二<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>计算机<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>单元格跨行跨列</strong></p><p>绘制表格时，需要合并单元格，但在HTML中提供了<code>colspan(合并列)</code>和<code>rowspan(合并列)</code>属性来实现这一效果</p><blockquote><p><strong>colspan又称为跨列，rowspan又称为跨行</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">'1'</span> <span class="attr">width</span>=<span class="string">'300px'</span> <span class="attr">height</span>=<span class="string">'150px'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周二<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周三<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周四<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周五<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周六<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周日<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">'2'</span>&gt;</span>上午<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>计机<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>高数<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>化学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>物理<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;th rospan='2'&gt;上午&lt;/th&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>计机<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>高数<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>化学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>物理<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：设置rowspan=&#39;2&#39;表示合并该列上的两个单元格，同理可以设置colspan来合并行</code>。</p><p><strong>高级表格特性和可访问性</strong></p><p><code>caption</code>元素定义表格标题</p><blockquote><p><code>caption</code>标签必须紧随<code>table</code>标签之后，只能对每个表格定义一个标题，通常这个标题会被居中与表格之上。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">'1'</span> <span class="attr">width</span>=<span class="string">'300px'</span> <span class="attr">height</span>=<span class="string">'150px'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>课程表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周二<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周三<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周四<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>周五<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">'2'</span>&gt;</span>上午<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>English<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Math<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Chinese<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Chmistry<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Music<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>English<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Chinese<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Math<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Music<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Physics<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>复杂表格的结构</strong></p><blockquote><ul><li><p><code>&lt;thread&gt;&lt;/thread&gt;:</code>用于定义表格的头部，一般包含网页的logo和导航等头部信息，位于<code>&lt;table&gt;&lt;/table&gt;</code>之中</p></li><li><p><code>&lt;tfoot&gt;&lt;/tfoot&gt;:</code>用于定义表格的页脚，一般包含网页底部的企业信息，地址联系方式等，位于<code>&lt;table&gt;&lt;/table&gt;</code>之中</p></li><li><code>&lt;tbody&gt;&lt;/tbody&gt;:</code>用于定义表格的主体，一般包含网页中除头部和底部之外的其他内容，位于<code>&lt;table&gt;&lt;/table&gt;</code>标记之中，<code>&lt;tfoot&gt;&lt;/tfoot&gt;</code>标记之后</li></ul></blockquote><p><strong>挑战：绘制细线课程表</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">DOCTYPE</span> <span class="attr">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">'en'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Class<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">'300'</span> <span class="attr">height</span>=<span class="string">'200'</span> <span class="attr">bgcolor</span>=<span class="string">'green'</span> <span class="attr">cellspacing</span>=<span class="string">'1'</span> <span class="attr">align</span>=<span class="string">'center'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">caption</span>&gt;</span>课程表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">'white'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">'80'</span> <span class="attr">colspan</span>=<span class="string">'2'</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期二<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期三<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期四<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期五<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">'white'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">'2'</span> <span class="attr">width</span>=<span class="string">'50'</span>&gt;</span>上午<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">'30'</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>化学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>地理<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">'white'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>历史<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">'white'</span> <span class="attr">align</span>=<span class="string">'center'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">'7'</span> <span class="attr">height</span>=<span class="string">'50'</span>&gt;</span>午休时间12点到2点<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">'white'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">'2'</span> <span class="attr">height</span>=<span class="string">'50'</span>&gt;</span>下午<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>体育<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>历史<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>生物<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">'white'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>化学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>历史<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/04/html表单/">html表单</a></li><li><a href="https://albert-5.cn/2019/10/30/html后期/">HTML后期</a></li><li><a href="https://albert-5.cn/2019/11/01/html之多媒体嵌入/">html之多媒体嵌入</a></li><li><a href="https://blog.naaln.com/2016/12/2016-front-end-sibi/">这会是 2016 年前端的年末撕逼吗？</a></li><li><a href="http://sumaolin.com/2016/05/06/readList/">readList</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="html" scheme="https://albert-5.cn/categories/html/"/>
    
    
      <category term="前端" scheme="https://albert-5.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="https://albert-5.cn/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>HTML后期</title>
    <link href="https://albert-5.cn/2019/10/30/html%E5%90%8E%E6%9C%9F/"/>
    <id>https://albert-5.cn/2019/10/30/html后期/</id>
    <published>2019-10-30T13:59:07.000Z</published>
    <updated>2019-10-30T14:11:06.809Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>分为<code>有序列表ol、无序列表ul以及自定义列表dl</code></p><p><strong>有序列表ol</strong></p><blockquote><p>有序列表是一列项目，列表项目使用数字进行标记。有序列表始于==<ol>==标签，每个列表项始于==<li>==</li></ol></p></blockquote><ul><li><p>有序列表有==type==和==start==</p></li><li><p>语法格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">value1</span> <span class="attr">start</span>=<span class="string">value2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：value1表示有序列表项目符号的类型，value2表示项目开始的数值，其中type属性如下：</code></p><p>| type类型 |                      描述                       |<br>| :——: | :———————————————: |<br>|  type=1  |      表示列表项目用数字表示（1,2,3……）      |<br>|  type=a  |    表示列表项目用小写字母表示（a,b,c……）    |<br>|  type=A  |    表示列表项目用大写字母表示（A,B,C……）    |<br>|  type=i  |  表示列表项目用小写字母表示（i,ii,iii……）   |<br>|  type=I  | 表示列表项目用大写罗马数字表示（I,II,III…..） |</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">DOCTYPE</span> <span class="attr">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">      数字列表：</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>小写字母列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">'a'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>大写字母列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">'A'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>大写罗马字母列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">'I'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>小写罗马字母：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">'i'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：type默认为数字列表，即不给type设置属性值时显示的为数字列表</code></p><p><strong>无序列表ul</strong></p><blockquote><p>无序列表是一个项目的列表，此列项目使用粗体圆点进行标记，无序列表始于==<ul>==标签，每个列表项始于==<li>==。无序列表的各个列表项之间没有顺序级别之分，是并列的。</li></ul></p></blockquote><ul><li>==ul==的==type==属性：默认值：==disc==，方块：==square==，空心圆：==circle==</li><li>语法格式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：&lt;ul&gt;&lt;/ul&gt;标记用于定义无序列表，&lt;li&gt;&lt;/li&gt;标记嵌套在&lt;ul&gt;&lt;/ul&gt;标记中，用于描述具体的列表项，每对&lt;ul&gt;&lt;/ul&gt;中至少赢你包含一对&lt;li&gt;&lt;/li&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>学习ing<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Disc 项目符号列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"disc"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Circle 项目符号列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"circle"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Square 项目符号列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"square"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>自定义列表dl</strong></p><blockquote><p>自定义列表不仅仅是一列项目，而是项目及其注释的组合，自定义列表以==<dl>==标签开始。每个自定义列表项以==<dt>==开始，每个自定义列表项的定义以==<dd>==开始，自定义列表的列表项前没有任何项目符合。</dd></dt></dl></p></blockquote><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>一个自定义列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>春天<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>万物复苏<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>百花争艳<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>适合学习<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>夏天<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>夏日绵绵<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>烈日炎炎<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>适合学习<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>秋天<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>秋高气爽<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>天高地阔<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>适合学习<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML元数据"><a href="#HTML元数据" class="headerlink" title="HTML元数据"></a>HTML元数据</h2><blockquote><p>元数据就是用来描述数据的数据。HTML中也有很多元数据，==<meta>==标签提供关于HTML文档的元数据：描述（description）、关键词（keywords）、文档的作者（author）等其他元数据。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">'author'</span> <span class="attr">content</span>=<span class="string">'https://albert-5.cn'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">'description'</span> <span class="attr">content</span>=<span class="string">'A Simple Example'</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://albert-5.cn'</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML块"><a href="#HTML块" class="headerlink" title="HTML块"></a>HTML块</h2><p><strong>大多数HTML元素被定义为块级元素或者内联元素</strong></p><p><strong>块级元素</strong></p><ul><li>独占一行，表现为另起一行开始，而且其后的元素也必须另起一行显示。宽度（<code>width</code>）、高度（<code>height</code>）、内边距（<code>padding</code>）和外边距（<code>margin</code>）都可控制</li><li>常见宽级元素：<code>&lt;h1&gt;,&lt;p&gt;,&lt;ul&gt;,&lt;table&gt;</code></li></ul><p><strong>内联元素</strong></p><ul><li>内联元素在显示时通常不会以新行开始，宽度<code>width</code>、高度<code>height</code>、内边距的<code>top/bottom(padding-top/padding-bottom)</code>和外边距的<code>top/bottom(margin-top/margin-bottom)</code>都不可改变</li><li>常见内联元素：<code>&lt;b&gt;,&lt;td&gt;,&lt;a&gt;,&lt;img&gt;</code></li></ul><h2 id="HTML布局"><a href="#HTML布局" class="headerlink" title="HTML布局"></a>HTML布局</h2><p><strong>HTML布局主要有两种：使用<code>div</code>元素的布局和使用<code>table</code>元素的布局</strong></p><p><strong>使用<code>div</code>元素布局</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'header'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：上述是div部分</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-id">#header</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:25px</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：以上是css部分</code></p><p><strong>使用<code>table</code>元素布局</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">'syl'</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：以上是HTML部分</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-tag">table</span><span class="selector-class">.syl</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">width</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#d4d4d4</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">table</span><span class="selector-class">.syl</span> <span class="selector-tag">td</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">width</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：以上是css部分</code></p><p><strong><code>table</code>元素布局</strong></p><ul><li>优点<ul><li>理解比较简单</li><li>不同的浏览器看到的效果一般相同</li></ul></li><li>缺点<ul><li>显示样式和数据绑定在一起</li><li>布局的时候灵活度不高</li><li>一个页面可能会有大量的table元素，代码冗余度高</li><li>增加带宽</li><li>搜索引擎不喜欢这样的布局</li></ul></li></ul><p><code>div</code>元素布局</p><ul><li>优点<ul><li>符合W3C标准</li><li>搜索引擎更加友好</li><li>样式的调整更加方便，内容和样式分离，使页面和样式的调整变得更加方便</li><li>节省带宽，代码冗余度低</li><li>表现和结构分离，在团队开发中更容易分工合作而减少相互关联性</li></ul></li></ul><p><code>注：DIV+CSS并不是要我们抛弃table,因为table在显示数据时更加方便</code></p><h2 id="文本格式"><a href="#文本格式" class="headerlink" title="文本格式"></a>文本格式</h2><blockquote><p>文本格式其实就是文本的样式，比如文章的换行、加粗、斜体等类似的都是文本那个是，都是通过文本格式标签实现的。</p></blockquote><p><strong>常见的文本格式化标签：</strong></p><table><thead><tr><th style="text-align:center">标签</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">b</td><td style="text-align:center">定义粗体文本</td></tr><tr><td style="text-align:center">big</td><td style="text-align:center">定义大号字体</td></tr><tr><td style="text-align:center">em</td><td style="text-align:center">定义着重文字</td></tr><tr><td style="text-align:center">i</td><td style="text-align:center">定义斜体字</td></tr><tr><td style="text-align:center">small</td><td style="text-align:center">定义小号字体</td></tr><tr><td style="text-align:center">strong</td><td style="text-align:center">定义加重语气</td></tr><tr><td style="text-align:center">sub</td><td style="text-align:center">定义下标字</td></tr><tr><td style="text-align:center">sup</td><td style="text-align:center">定义上标字</td></tr><tr><td style="text-align:center">ins</td><td style="text-align:center">定义插入字</td></tr><tr><td style="text-align:center">del</td><td style="text-align:center">定义删除字</td></tr></tbody></table><h2 id="文档和网站架构"><a href="#文档和网站架构" class="headerlink" title="文档和网站架构"></a>文档和网站架构</h2><p><strong>标题</strong></p><p>通常在顶部有一个大标题或者图标，通常存在于每一个网页</p><p><strong>导航</strong></p><p>提供跳转到网站不同内容的链接；通常由菜单按钮、链接或者选项卡表示</p><p><strong>主要内容</strong></p><p>中心的一个大区域，包含给定网页的大部分独特内容</p><p><strong>侧栏</strong></p><p>一些次要信息、链接、引言和广告等</p><p><strong>页脚</strong></p><p>横跨页面底部的条纹，通常包含精美的打印、版权通知或者联系信息</p><p>为了实现这样的语义标记，HTML提供了可以用来表示这些部分的专用标签</p><ul><li>标题： <code>&lt;header&gt;</code></li><li>导航栏：<code>&lt;nav&gt;</code></li><li>主要内容：<code>&lt;main&gt;</code>具有代表性的内容段落主题可以使用<code>&lt;article&gt;,&lt;section&gt;,&lt;div&gt;元素</code></li><li>侧栏：<code>&lt;aside&gt;</code>经常包含在<code>&lt;mian&gt;</code>中</li><li>页脚：<code>&lt;footer&gt;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">DOCTYPE</span> <span class="attr">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>阿尔伯特<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">       This is header!</span><br><span class="line">      <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>&gt;</span>HOME<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>&gt;</span>TEAM<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Article heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>好好学习天天向上<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>subsection<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>今天天气不错，学个习吧<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Another subsection<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我爱学习，学习使我快乐！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Related<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>&gt;</span>春天<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>&gt;</span>夏天<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>&gt;</span>秋天<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>&gt;</span>冬天<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>©Copyright 2018 by albert.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/01/html后期-副/">html后期-副</a></li><li><a href="https://albert-5.cn/2019/11/04/html表单/">html表单</a></li><li><a href="https://albert-5.cn/2019/11/01/html之多媒体嵌入/">html之多媒体嵌入</a></li><li><a href="https://blog.naaln.com/2016/12/2016-front-end-sibi/">这会是 2016 年前端的年末撕逼吗？</a></li><li><a href="http://sumaolin.com/2016/05/06/readList/">readList</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="html" scheme="https://albert-5.cn/categories/html/"/>
    
    
      <category term="前端" scheme="https://albert-5.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="https://albert-5.cn/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>html前期</title>
    <link href="https://albert-5.cn/2019/10/30/html%E5%89%8D%E6%9C%9F/"/>
    <id>https://albert-5.cn/2019/10/30/html前期/</id>
    <published>2019-10-29T23:30:56.000Z</published>
    <updated>2019-10-29T23:32:27.791Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h2><p><strong>双标签</strong></p><p>双标签也称为体标记，是指有开始和结束两个标记符组成的标记</p><p><code>&lt;标记名&gt; &lt;/标记名&gt;</code></p><p>常见的双标签有：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://albert-5.cn'</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>单标签（单标记）</strong></p><p>单标记也称为空标记，是指用一个标记即可完成地描述某个功能的标记，基本语法格式为：</p><p><code>&lt;标记名/&gt;</code></p><p>常见的标签有：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span> <span class="comment">&lt;!--换行--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span> <span class="comment">&lt;!--水平分割线--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>标签的关系</strong></p><ul><li><p>嵌套关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>并列关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>HTML的固有结构</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页名称<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML样式"><a href="#HTML样式" class="headerlink" title="HTML样式"></a>HTML样式</h2><p>==通过style属性更改HTML的样式==</p><p><strong>样式–背景颜色</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">'background-color:red'</span>&gt;</span>albert<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：background-color</code>属性值的设置来给背景设置颜色的</p><p><strong>样式–字体、颜色和尺寸</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-family:arial;color:green;font-size:50ox;"</span>&gt;</span>albert<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：通过对style属性值的设置来设置字体，通过对color属性值的设置来设置颜色，通过对font-size属性值的设置来设置字体大小</code></p><p><strong>样式–文本对齐</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">'text-align:center'</span>&gt;</span>albert<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：标题 albert 相对于页面居中对齐</code></p><h2 id="HTML链接"><a href="#HTML链接" class="headerlink" title="HTML链接"></a>HTML链接</h2><p>链接可以是一个字、一个词、或者一组词，也可以是一幅图像，可以点击内容来跳转到新的文档或者当前文档中的某个部分。鼠标指针移动到网页中的某个链接时，箭头会变成一只小手。</p><p>==通过使用<a>标签在HTML中创建链接==</a></p><ul><li>通过使用<code>href</code>属性创建指向另一个文档的链接</li><li>通过使用<code>name</code>属性创建文档内的书签</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://albert-5.cn'</span>&gt;</span>我的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：点击上方的 我的博客 这个链接就会跳转到我的博客首页。暂时没有确定链接目标时，通常将标签内的href属性值设定为&quot;#&quot;,即表示为一个空链接</code></p><p>通过<code>name</code>属性创建锚点链接，可以定位到目标内容（比如页面的某个小节）。创建锚点分为两步：</p><ul><li>使用<code>&lt;a href=&#39;#id名&#39;&gt;链接文本&lt;/a&gt;</code>创建链接文本</li><li>使用相应的<code>id</code>名标注跳转目标的位置</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">‘#winter</span>&gt;</span>查看冬天<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>春<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>万物复苏<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>夏日绵绵<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>秋高气爽<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">'winter'</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>白雪皑皑<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>target属性:</code>用于指定链接页面的打开方式，其取值有==<em>self</em>==和==<em>blank</em>==两种，其中==_self==是默认值，==_blank==为在新窗口中打开方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://albert-5.cn'</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>albert<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注：target默认属性值为：_self,使得目标文档载入并显示在相同的框架或者窗口中作为源文档</code></p><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/11/01/html后期-副/">html后期-副</a></li><li><a href="https://albert-5.cn/2019/11/04/html表单/">html表单</a></li><li><a href="https://albert-5.cn/2019/10/30/html后期/">HTML后期</a></li><li><a href="https://blog.naaln.com/2016/12/2016-front-end-sibi/">这会是 2016 年前端的年末撕逼吗？</a></li><li><a href="http://sumaolin.com/2016/05/06/readList/">readList</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="html" scheme="https://albert-5.cn/categories/html/"/>
    
    
      <category term="前端" scheme="https://albert-5.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="https://albert-5.cn/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>快捷键</title>
    <link href="https://albert-5.cn/2019/10/01/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://albert-5.cn/2019/10/01/快捷键/</id>
    <published>2019-10-01T14:34:01.000Z</published>
    <updated>2019-10-01T14:38:27.146Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center> Photoshop常用快捷键收</center><p><strong>工具快捷键</strong></p><table><thead><tr><th>动作</th><th>Mac</th><th>windows</th></tr></thead><tbody><tr><td>选择工具</td><td>V</td><td>V</td></tr><tr><td>矩形/椭圆工具</td><td>M</td><td>M</td></tr><tr><td>套索工具</td><td>W</td><td>W</td></tr><tr><td>剪裁/切片工具</td><td>C</td><td>C</td></tr><tr><td>滴管/取色/标尺/注释/计数工具</td><td>I</td><td>I</td></tr><tr><td>修复画笔/修补/红眼工具</td><td>J</td><td>J</td></tr><tr><td>画笔/铅笔/颜色替换工具</td><td>B</td><td>B</td></tr><tr><td>图章工具</td><td>S</td><td>S</td></tr><tr><td>历史记录画笔工具</td><td>Y</td><td>Y</td></tr><tr><td>橡皮擦工具</td><td>E</td><td>E</td></tr><tr><td>渐变/油漆桶工具</td><td>G</td><td>G</td></tr><tr><td>减淡/加深/海绵工具</td><td>O</td><td>O</td></tr><tr><td>钢笔工具</td><td>P</td><td>P</td></tr><tr><td>文字工具</td><td>T</td><td>T</td></tr><tr><td>选择工具</td><td>A</td><td>A</td></tr><tr><td>矩形/椭圆/多边形/直线/自定义形状工具</td><td>U</td><td>U</td></tr><tr><td>3D对象工具</td><td>K</td><td>K</td></tr><tr><td>3D相机工具</td><td>N</td><td>N</td></tr><tr><td>抓手工具</td><td>H</td><td>H</td></tr><tr><td>旋转视图工具</td><td>R</td><td>R</td></tr><tr><td>缩放工具</td><td>Z</td></tr></tbody></table><p><strong>图像菜单</strong></p><table><thead><tr><th>动作</th><th>Mac</th><th>Windows</th></tr></thead><tbody><tr><td>调整-色阶</td><td>Cmd+L</td><td>Ctrl+L</td></tr><tr><td>调整-曲线</td><td>Cmd+M</td><td>Ctrl+M</td></tr><tr><td>调整-色相、饱和度</td><td>Cmd+U</td><td>Ctrl+U</td></tr><tr><td>调整-色彩平衡</td><td>Cmd+B</td><td>Ctrl+B</td></tr><tr><td>调整-黑白</td><td>Opt+Shift+Cmd+B</td><td>Alt+Shift+Ctrl+B</td></tr><tr><td>调整-反相</td><td>Cmd+I</td><td>Ctrl+I</td></tr><tr><td>去色</td><td>Shift+Cmd+U</td><td>Shift+Ctrl+U</td></tr><tr><td>自动色调</td><td>Shift+Cmd+L</td><td>Shift+Ctrl+L</td></tr><tr><td>自动对比度</td><td>Opt+Shift+Cmd+L</td><td>Alt+Shift+Ctrl+L</td></tr><tr><td>自动颜色</td><td>Shift+Cmd+B</td><td>Shift+Ctrl+B</td></tr><tr><td>图像大小</td><td>Opt+Cmd+I</td><td>Alt+Ctrl+I</td></tr><tr><td>画布大小</td><td>Opt+Cmd+C</td><td>Alt+Ctrl+C</td></tr><tr><td>记录测量</td><td>Shift+Cmd+M</td><td>Shift+Ctrl+M</td></tr><tr><td>新建-图层</td><td>Shift+Cmd+N</td><td>Shift+Ctrl+N</td></tr><tr><td>新建-通过拷贝的图层</td><td>Cmd+J</td><td>Ctrl+J</td></tr><tr><td>新建-通过剪切的图层</td><td>Shift+Cmd+J</td><td>Shift+Ctrl+J</td></tr><tr><td>创建剪贴蒙板</td><td>Opt+Cmd+G</td><td>Alt+Ctrl+G</td></tr><tr><td>图层编组</td><td>Cmd+G</td><td>Ctrl+G</td></tr><tr><td>取消图层编组</td><td>Shift+Cmd+G</td><td>Shift+Ctrl+G</td></tr><tr><td>排列-置为顶层</td><td>Shift+Cmd+]</td><td>Shift+Ctrl+]</td></tr><tr><td>排列-前移一层</td><td>Cmd+]</td><td>Ctrl+]</td></tr><tr><td>排列-后移一层</td><td>Cmd+[</td><td>Ctrl+[</td></tr><tr><td>排列-置为底层</td><td>Shift+Cmd+[</td><td>Shift+Ctrl+[</td></tr><tr><td>向下合并</td><td>Cmd+E</td><td>Ctrl+E</td></tr><tr><td>合并可见图层</td><td>Shift+Cmd+E</td><td>Shift+Ctrl+E</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="https://albert-5.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Photoshop" scheme="https://albert-5.cn/tags/Photoshop/"/>
    
  </entry>
  
  <entry>
    <title>国内访学与发展规划</title>
    <link href="https://albert-5.cn/2019/09/05/%E5%9B%BD%E5%86%85%E8%AE%BF%E5%AD%A6%E4%B8%8E%E5%8F%91%E5%B1%95%E8%A7%84%E5%88%92/"/>
    <id>https://albert-5.cn/2019/09/05/国内访学与发展规划/</id>
    <published>2019-09-05T15:43:40.000Z</published>
    <updated>2019-12-10T15:11:43.873Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="关于国内访学的思考以及个人发展规划"><a href="#关于国内访学的思考以及个人发展规划" class="headerlink" title="关于国内访学的思考以及个人发展规划"></a>关于国内访学的思考以及个人发展规划</h2><h3 id="国内访学"><a href="#国内访学" class="headerlink" title="国内访学"></a>国内访学</h3><p>因为幸运我有机会去了别人家的大学，国内一所985、211以及双一流院校。大二参加了国内的访学项目并在此期间到合作学校进行为期一年的学习，这就意味着，我将离开刚刚熟悉的大学新校园，转而到另一所新大学去学习，一切都需要重新适应和改变，而且将会认识更多的同学，同时还将意味着我能够接受到更多优质的学习资源、遇到更多优秀的同学，努力提升自己成为一个优秀的人。</p><p>去年今日，我正在新的校园里畅游、徘徊，因为我想好好看看她（渴望而不可及的大学）到底是什么样子，和我的这个学校有什么不同吗？到底是什么魔力吸引着无数高考生的目光，使其奋进全力去考？而我到底值不值在这花费一年的时间来在此学习？</p><p>校园里，有行驶着的来往汽车，有独自一人背着双肩包听着音乐的过路人，也有人成群结队嘻闹的同学，也有着滑着滑板穿梭在人群中的人······那是青春活力的展现，国家未来的希望；教室里，有人敲到着手机，探索着虚拟空间的奥秘，有人专注的翻阅着自己的课本，畅游在高数大物的海洋里，也有人在朗朗地背书，求知求实。这些看起来和我们学校确实没有什么不同，但是上过课之后就会有更多的感受，老师上课时对问题的仔细讲解，老师对学生的那种要求：大一就开始论文写作锻炼，大一就开始参加各种各样的比赛，导师的指导和教诲恐怕让人受益匪浅，或许一两年之后学生出来发表的都是science一星二星文章，而我们还不知发表论文这回事，这也说明人家的起点高，所要到达的高度也是我们所望尘莫及的，更有甚者，他们有的课程都是论文写作培训、比赛训练之类的，无不让人羡慕；另外，他们有更广的眼界，有着更多的机会去接触所谓的大V，科技讲座、人工智能峰会（论坛）······</p><p><font color="indigo" size="4">但是</font>，反过来想，这是我自己的问题，必须由我来解决！</p><p>国内的访学项目真的是拓宽了我的视野，不仅仅体验了那种浓浓的学习氛围、享受到了一些优质资源、认识了一堆学霸朋友，更多的是自身能力与那些“学霸”们之间的差距和不足的认识。一年下来，虽在自己的学校是所谓的“好学生”，其实到头来你啥也不是，唯有自己努力提升各项能力才有机会与此较横！</p><h3 id="发展规划"><a href="#发展规划" class="headerlink" title="发展规划"></a>发展规划</h3><p>回想在交换的一年时光，GPA属实高不就，甚至感觉有点浪费这个交换名额，各科成绩都没有在本校的高，比赛也没有参加几个，得到的一些奖都无法走上台面，在本校的实验室任务项目也都没能参加，自学的机器学习相关知识也很难掌握，需要时间去理解和实践。过去的也就只能过去了，如今的我大学生涯已经过半，若不继续努力恐怕前程会有点上头。这一年的时间，我想弥补前些时间的过错和不足：</p><p>编程方向仍以python为主，C语言为辅，主要工作是python数学科学和算法，进阶是机器学习和自然语言处理；</p><p>专业课程学习还是需要下一定功夫，预习复习、上课笔记</p><p>娱乐兴趣就是摄影、摄像以及后期，用影像去记录生活</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="college" scheme="https://albert-5.cn/categories/college/"/>
    
    
      <category term="思考反思" scheme="https://albert-5.cn/tags/%E6%80%9D%E8%80%83%E5%8F%8D%E6%80%9D/"/>
    
  </entry>
  
  <entry>
    <title>网络技术笔记</title>
    <link href="https://albert-5.cn/2019/08/01/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    <id>https://albert-5.cn/2019/08/01/网络技术笔记/</id>
    <published>2019-08-01T09:34:41.000Z</published>
    <updated>2019-10-20T12:12:46.627Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="网络技术"><a href="#网络技术" class="headerlink" title="网络技术"></a>网络技术</h1><center>Chapter 1</center><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="1-计算机网络的分类"><a href="#1-计算机网络的分类" class="headerlink" title="1. 计算机网络的分类"></a>1. 计算机网络的分类</h3><h4 id="1-1-局域网-Local-Area-Network-LAN"><a href="#1-1-局域网-Local-Area-Network-LAN" class="headerlink" title="1.1. 局域网(Local Area Network  LAN)"></a>1.1. 局域网(Local Area Network  LAN)</h4><p>特点：</p><ul><li>局域网覆盖<code>有限的地理范围</code>，使用于机关、学校、有限范围的计算机、终端与各类信息处理设备联网的需求</li><li>提供<code>传输效率</code>(10Mbps~10Gbps),支持高码率、高质量传输环境</li><li>一般属于一个单位所有，易建立、维护和扩展</li></ul><p>另一角度：</p><p>从<code>介质访问方法</code>的角度看，局域网可以分为共享介质式局域网与交换式局域网；从使用的<code>传输介质类型</code>的角度，又可以分为有限介质的有限局域网和无线局域网。</p><p>技术发展的三个方向：</p><ul><li>提高以太网的数据传输速率</li><li>将一个大型局域网划分成多个用网桥或者路由器互联的网络</li><li>将共享介质方式改为交换方式(在交换式局域网的基础上，出现了<code>虚拟局域网</code>VLAN)</li></ul><h4 id="1-2-城域网-Metropolitan-Area-Network-MAN"><a href="#1-2-城域网-Metropolitan-Area-Network-MAN" class="headerlink" title="1.2. 城域网(Metropolitan Area Network  MAN)"></a>1.2. 城域网(Metropolitan Area Network  MAN)</h4><p>概念：城市区域网络简称城域网，介于广域网和局域网之间的一种高速网络。目的是为了满足<code>几十公里范围</code>内的大量企业、机关、公司的多个局域网的互联要求，实现大量用户之间的数据、语音、图形的传输</p><h4 id="1-3-广域网"><a href="#1-3-广域网" class="headerlink" title="1.3. 广域网"></a>1.3. 广域网</h4><p>又叫远程网，覆盖范围从<code>几十公里到几千公里</code>。可以覆盖几个国家或地区，甚至横跨几个洲，从而形成国际性的远程计算机网络(分组交换网、卫星通讯网和无线分组网实现)</p><h3 id="计算机网络结构"><a href="#计算机网络结构" class="headerlink" title="计算机网络结构"></a>计算机网络结构</h3><h4 id="2-1-早期的广域网"><a href="#2-1-早期的广域网" class="headerlink" title="2.1. 早期的广域网"></a>2.1. 早期的广域网</h4><p><code>结构</code>上分成两部分：负责数据处理的计算机终端；负责数据通信的通信控制处理设备与通信线路</p><p><code>逻辑功能</code>上分成两部分：资源子网和通信子网</p><p>资源子网由计算机系统、终端、终端控制器、连接外部设备、各类软件资源与信息资源组成；资源子网负责全网的数据处理业务，负责向网络用户体统各类网络资源和网络服务。</p><h4 id="2-2-用户计算机接入"><a href="#2-2-用户计算机接入" class="headerlink" title="2.2. 用户计算机接入"></a>2.2. 用户计算机接入</h4><p>用户计算机可以通过局域网方式接入，也可以选择<code>电话交换网(PSTN)</code>、<code>有线电视网（CATV）</code>、<code>无线城域网（WMAN）</code>或<code>无线局域网（WLAN）</code>方式接入到作为地区级主干网的城域网。城域网又通过路由器与光纤接入到作为国家级或区域级主干网的广域网。多个广域网互联形成覆盖全世界的Internet系统</p><h3 id="实训任务"><a href="#实训任务" class="headerlink" title="实训任务"></a>实训任务</h3><h4 id="1-任务一：宽带城域网的结构"><a href="#1-任务一：宽带城域网的结构" class="headerlink" title="1. 任务一：宽带城域网的结构"></a>1. 任务一：宽带城域网的结构</h4><ul><li><p>宽带城域网的逻辑结构</p><p>设计一个宽带城域网将涉及<code>三个平台和一个出口</code>，即<code>网络平台、业务平台、管理平台和城市宽带出口</code></p><p><img src="https://i.loli.net/2019/08/01/5d42a0918e65876869.jpg" alt="宽带城域网的总体结构.jpg"></p></li><li><p>网络平台的层次结构</p><p>网络平台的层次结构又可以分为：<code>核心层、汇聚层、接入层</code></p><p>核心层主要承担高速数据的交换的功能，汇聚层主要承担路由和流量汇聚的功能，接入层主要承担用户接入和本地流量控制的功能。</p><ul><li><p>核心交换层的功能</p><ul><li>核心交换层将多个汇聚层连接在起来，为汇聚层的网络提供高速分组转发，为整个城市提供一个高速、安全与<code>具有QoS保障能力</code>的数据传输环境</li><li>核心交换层实现与主干网络的互联，提供城市的<code>宽带IP出口</code></li><li>核心交换层提供宽带城域网的用户<code>访问internet所需要的路由访问</code></li></ul></li><li><p>汇聚层的基本功能</p><ul><li><code>汇聚层的用户流量</code>进行数据分组传输的汇聚、转发和交换</li><li>根据接入层的用户流量进行<code>本地</code>路由、过滤、流量均衡、QoS优先级管理以及安全控制、IP地址转换、流量整形等处理</li><li>根据处理结果把<code>用户流量转发到核心层</code>或<code></code>本地进行路由处理`</li></ul></li><li><p>接入层的基本功能</p><ul><li><p>接入层的<code>最后一公里</code>问题，通过各种接入技术，连接最终用户，为它所覆盖范围内的永辉提供访问Internet以及其他信息服务</p></li><li><p><strong>三层结构</strong>的基本思想是<code>上层负责下层的数据汇聚</code>、<code>核心提供出口与QoS、汇聚本地路由、接入服务用户</code></p></li></ul></li></ul></li></ul><h4 id="2-实训任务二：管理和运营宽带城域网的关键技术"><a href="#2-实训任务二：管理和运营宽带城域网的关键技术" class="headerlink" title="2. 实训任务二：管理和运营宽带城域网的关键技术"></a>2. 实训任务二：管理和运营宽带城域网的关键技术</h4><p>管理和运营宽带城域网的关键技术主要是：带宽管理、服务质量QoS、网络管理、用户管理、多业务接入、统计与计费、IP地址的分配和地址转换、网络安全</p><ul><li>目前宽带城域网保证服务质量QoS要求的关键技术主要有<code>资源预留(RSVP)</code>、<code>区分服务(DiffeServ)与多协议标记交换MPLS</code></li><li>宽带城域网<code>带内网络管理是指利用数据通信网(DCN)</code>、<code>公共交换电话网(PSTN)</code>、对网络设备进行数据配置。<code>带宽网络管理是指利用网络协议(SNMP)建立网络管理系统</code></li></ul><h4 id="3-实训任务三：基于10GE的城域网方案"><a href="#3-实训任务三：基于10GE的城域网方案" class="headerlink" title="3. 实训任务三：基于10GE的城域网方案"></a>3. 实训任务三：基于10GE的城域网方案</h4><p>用于宽带城域网的光以太网有多种实现形式，其中最为重要的有两种：<code>基于10GE的技术</code>和<code>弹性分组环</code>技术。</p><p>10Gbps光以太网的技术优势主要表现在一下几个方面：</p><ul><li><p>以太网与DMDW技术都十分成熟，并且已经广泛使用，组建相同规模的宽带城域网，光以太网额造价是SONET的1/5，是ATM的1/10</p></li><li><p>光以太网的特征</p><ul><li>能够根据<code>终端用户的实际应用需求分配带宽</code>，保证带宽资源充分合理的应用</li><li><code>具有认证和授权功能</code>，用户访问网络资源必须经过认证和授权，确保用户和网络资源的合法性</li><li><code>提供计费功能</code>，能及时获得用户的上网时间记录和流量记录，支持按上网时间、用户流量或者包月计费方式、支持实时计费等</li><li>支持<code>VPN和防火墙</code>，有效保证网络安全</li><li>支持<code>MPLS</code>，具有一定的服务质量保证，提供分等级的QoS网络服务</li></ul></li><li><p>弹性分组环RPR技术的城域网</p><p><strong>一种直接的<code>高效传输IP分组</code>的传输技术，基础是Cisco公司提出的<code>动态分组技术(DPT)技术</code></strong></p></li></ul><p>RPR将沿<code>顺时针传输光纤</code>叫做外环，将沿<code>逆时针传输的光纤</code>叫做内环。弹性分组环RPR的内环和外环都可以同统计复用的方法传输IP分组，同时可以实现“自愈环”的功能。RPR的<strong>内环和外环都可以传输数据分组与控制分组</strong>。每一个节点都可以使用两个方向的光纤与近邻节点通信。这样做的目的除了高效地利用光纤带宽之外，还有一个目的是加速控制分组传输，提高环的可靠性，实现“环自愈”功能，保证城域网的系统可靠性与服务质量。</p><ul><li><p>RPR技术主要特点</p><ul><li><p>带宽的占用率高</p><p>传统额FDDI环网中，当源结点向目的结点成功地发送一个数据帧之后这个数据帧要由<strong>源结点</strong>中从环收回；而RPR环限制数据帧只在源节点与目的节点之间的光纤段上传输，当源结点成功地发送一个数据帧之后，这个数据帧要由目<strong>的结点</strong>从环中收回，这样就提高了环带宽的利用率；</p></li><li><p>公平性好</p><p>RPR环中每个结点都执行SRP公平算法，使得结点之间能够获得平等的带宽，防止个别结点因流量大而造成环拥堵。</p></li><li><p>快速保护和恢复能力强</p><p>RPR采用自愈环的设计思想，<code>能够在50ms的时间内</code>，隔离出现故障的节点和光纤段，提供SDH级快速保护和恢复，同时不需要像SDH那样必须有专用的带宽；</p></li><li><p>保证服务质量QoS</p></li></ul></li><li><p><strong>四网融合</strong></p></li></ul><p>计算机网络、电信通信网、电视通信网以及物联网</p><h4 id="4-实训任务四：宽带接入技术的基本类型"><a href="#4-实训任务四：宽带接入技术的基本类型" class="headerlink" title="4. 实训任务四：宽带接入技术的基本类型"></a>4. 实训任务四：宽带接入技术的基本类型</h4><p>接入技术可以分为有线接入和无线接入两种；从实现技术的角度，目前宽带接入技术主要有以下几种：<code>数字用户线xDSL、光纤同轴电缆混合网HFC技术、光纤接入技术、无线接入技术与局域网接入技术</code>。其中无线接入又可以分为无线局域网接入、无线城域网接入与无线Ad hoc接入。</p><ul><li><p>数字用户线xDSLjishu </p><p>数字用户环路，数字用户线是从用户到本地电话交换中心的一对铜双绞线，本子电话交换中心又叫做中心局；xDSL技术按上行(用户到交换局)和下行(交换局到用户)的速率是否相同分为速率<code>对称性</code>和速率<code>非对称性</code>两种</p><ul><li>非对称数字用户线(ADSL Asymmetric Digital Subscriber Line)</li><li>高比特率数字用户线(HDSL)</li><li>速率自适应数字用户线(RADSL)</li><li>甚高比特率数字用户线(VDSL)</li></ul></li><li><p>ADSL(非对称数字用户线)主要特点</p><ul><li>在现有电话铜双绞线上，以重叠不干扰传统模拟电话业务，即普通电话业务POTS的方式，提供高速数字业务。ADSL允许用户保留他们已经申请的模拟电话业务，可以支持用户在电话铜双绞线上的新型宽带业务。</li><li>用户不需要专门为获得ADSL服务而重新铺设电缆</li><li>提供额非对称宽带特性，上行速率在<code>64 kbps~640 kbps,下行速率在500 kbps~7 Mbps</code>。用户可以根据需要选择上行和下行速率。</li></ul></li><li><p>宽带无线接入技术</p><ul><li><p>无线接入技术主要有：<code>802.11标准的无线局域网(WLAN)接入</code>、<code>802.16标准的无线城域网(WMAN)接入</code>、<code>Ad hoc</code>接入技术，在无线宽带接入网的结构中，<code>远距离</code>采用802.16标准的WiMAX技术，可以在50km范围内提供70Mbps的传输速率；</p><ul><li><p>802.16标准与无线城域网WMAN</p><p>IEEE802.16标准体系的主要目标是制定工作在<code>2~66MHz</code>频率段的无线接入系统的物理层与介质访问控制MAC子层规范；在802.16标准增加了两个物理层标准的16d与16e，16d主要针对固定的无线网络部署，16e主要针对火车、汽车等移动物体的无线通信标准问题</p></li><li><p>802.11标准与无线局域网WLAN</p><p>定义了使用<code>红外、调频扩频与直接序列扩频技术</code>，传输速率为1Mbps或者2Mbps的无线局域网标准；11b定义了使用直接序列扩频技术，速率在1、2、5.5\11Mbps;11a将传输速率提高到54Mbps</p></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://albert-5.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="计算机三级" scheme="https://albert-5.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7/"/>
    
      <category term="网络技术" scheme="https://albert-5.cn/tags/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>豆瓣电影top250</title>
    <link href="https://albert-5.cn/2019/08/01/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1top250/"/>
    <id>https://albert-5.cn/2019/08/01/豆瓣电影top250/</id>
    <published>2019-08-01T09:32:58.000Z</published>
    <updated>2019-08-01T09:34:11.547Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="豆瓣电影Top-250"><a href="#豆瓣电影Top-250" class="headerlink" title="豆瓣电影Top 250"></a>豆瓣电影Top 250</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><h3 id="使用的模块"><a href="#使用的模块" class="headerlink" title="使用的模块"></a>使用的模块</h3><p><strong>chardet模块—判断编码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pip install chardet</span><br></pre></td></tr></table></figure><p>使用上述命令安装模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果你的python没有安装chardet模块，你需要首先安装一下chardet判断编码的模块哦</span></span><br><span class="line"><span class="keyword">import</span> chardet</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="comment">#先获取网页内容</span></span><br><span class="line">data = urllib.urlopen(<span class="string">'http://www.pythontab.com'</span>).read()</span><br><span class="line"><span class="comment">#用chardet进行内容分析</span></span><br><span class="line">chardit = chardet.detect(data)</span><br><span class="line">  </span><br><span class="line">data1 = urllib.urlopen(<span class="string">'http://www.baidu.com'</span>).read()</span><br><span class="line">  </span><br><span class="line">chardit1 = chardet.detect(data1)</span><br><span class="line">  </span><br><span class="line"><span class="keyword">print</span> chardit[<span class="string">'encoding'</span>] <span class="comment"># pythontab</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">print</span> chardit1[<span class="string">'encoding'</span>] <span class="comment"># baidu</span></span><br></pre></td></tr></table></figure><p><strong>BeautifulSoup库</strong></p><p>安装<code>bs4</code>模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install beautifulsoup4</span><br></pre></td></tr></table></figure><p>代码使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">""</span></span><br><span class="line">html = requests.get(url)</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br></pre></td></tr></table></figure><blockquote><p>find_all()方法返回文档中符合条件的所有tags，尽管有时候我们只想得到一个结果。比如文章中只有一个<body>标签，那么使用find_all()方法来查找<body>标签不太合适了使用find_all()方法设置limit=1参数不如直接使用find()方法</body><script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"log":false,"model":{"position":"left","width":150,"height":300,"jsonPath":"/live2dw/assets/assets/shizuku.model.json"},"mobile":{"show":false}});</script></body></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; soup.find_all(<span class="string">'title'</span>, limit=<span class="number">1</span>)</span><br><span class="line">&gt; <span class="comment"># [&lt;title&gt;The Story&lt;/title&gt;]</span></span><br><span class="line">&gt; soup.find(<span class="string">'title'</span>)</span><br><span class="line">&gt; <span class="comment"># [&lt;title&gt;The Story&lt;/title&gt;]</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>唯一的区别是find_all()方法返回的结果是只包含一个元素的列表，而find()方法直接返回结果；find_all()方法没有找到指定元素时返回空列表，而find()方法找不到目标时返回None</strong></p></blockquote><p><strong>拓展</strong></p><p><code>关于find_all()和find()方法的介绍</code></p><p><code>find()</code></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span>(<span class="built_in">name</span>, attrs, recursive, <span class="built_in">text</span>, **wargs)　　　　<span class="meta"># recursive 递归的，循环的</span></span><br></pre></td></tr></table></figure><p>这些参数相当于过滤器一样可以进行筛选处理。不同的参数过滤可以应用到以下情况：</p><ul><li>查找标签，基于name参数</li><li>查找文本，基于text参数</li><li>基于正则表达式的查找</li><li>查找标签的属性，基于attrs参数</li><li>基于函数的查找</li></ul><p>通过标签查找：</p><p>可以传递任何标签的名字来查找到它第一次出现的地方。找到后，find函数返回一个BeautifulSoup的标签对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'ecologicalpyramid.html'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> ecological_pyramid:</span><br><span class="line">　　soup = BeautifulSoup(ecological_pyramid, <span class="string">'html'</span>)</span><br><span class="line">producer_entries = soup.find(<span class="string">'ul'</span>)</span><br><span class="line">print(type(producer_entries))</span><br></pre></td></tr></table></figure><p>输出结果： <class 'bs4.element.tag'></class></p><p>通过文本查找：</p><p>直接字符串的话，查找的是标签。如果想要查找文本的话，则需要用到text参数。如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'ecologicalpyramid.html'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> ecological_pyramid:</span><br><span class="line">　　soup = BeautifulSoup(ecological_pyramid, <span class="string">'html'</span>)</span><br><span class="line">producer_string = soup.find(text = <span class="string">'plants'</span>)</span><br><span class="line">print(plants_string)</span><br></pre></td></tr></table></figure><p>输出：plants</p><p>通过正则表达式查找：</p><p>想找出第一个邮箱地址，但是第一个邮箱地址没有标签包含，所以通过其他方式很难找到。但是可以将邮箱地址进行正则表达式处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">email_id_example = <span class="string">"""&lt;br/&gt;</span></span><br><span class="line"><span class="string">&lt;div&gt;The below HTML has the information that has email ids.&lt;/div&gt; </span></span><br><span class="line"><span class="string">abc@example.com </span></span><br><span class="line"><span class="string">&lt;div&gt;xyz@example.com&lt;/div&gt; </span></span><br><span class="line"><span class="string">&lt;span&gt;foo@example.com&lt;/span&gt; </span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(email_id_example)</span><br><span class="line">emailid_regexp = re.compile(<span class="string">"\w+@\w+\.\w+"</span>)　　　　<span class="comment"># regexp 表达式对象</span></span><br><span class="line">first_email_id = soup.find(text=emailid_regexp)　　</span><br><span class="line">print(first_email_id)</span><br></pre></td></tr></table></figure><p>输出结果：<a href="mailto:abc@example.com" target="_blank" rel="noopener">abc@example.com</a></p><p>通过标签属性进行查找：</p><p>上面html代码，其中第一个消费者在ul标签里面且id属性为priaryconsumer（priary consumer一次消费者，初级消费者）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'ecologicalpyramid.html'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> ecological_pyramid:</span><br><span class="line">    soup = BeautifulSoup(eccological_pyramid, <span class="string">'html'</span>)</span><br><span class="line">primary_consumer = soup.find(id=<span class="string">'primaryconsumers'</span>)</span><br><span class="line">print(primary_consumer.li.div.string)</span><br></pre></td></tr></table></figure><p>输出结果：deer</p><p>基于定制属性查找：</p><p>通过标签属性查找的方式适用大多数标签属性，包括id，style，title，但有 “-”，Class标签属性例外。</p><p>比如html5标签中的data-custom属性，如果我们这样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">customattr = <span class="string">"""&lt;p data-custom='custom'&gt;custo attribute</span></span><br><span class="line"><span class="string">example&lt;/p&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">customsoup = BeautifulSoup(customattr, <span class="string">'lxml'</span>)</span><br><span class="line">customSoup.find(data-custom=<span class="string">"custom"</span>)</span><br></pre></td></tr></table></figure><p>那么则会报错。原因是在python中变量不能含有”-“这个字符，而我们传递的data-custom有这个字符。</p><p>解决办法是在attrs属性用字典进行传递参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">using_attrs = customsoup.find(attrs=&#123;<span class="string">'data-custom'</span>:<span class="string">'custom'</span>&#125;)</span><br><span class="line">print(using_attrs)</span><br></pre></td></tr></table></figure><p>基于css类的查找：</p><p>class是python的保留关键字，所以无法使用class这个关键字。</p><p>第一种方法：在attrs属性用字典进行传递参数</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">css_class = soup.find(attrs=&#123;<span class="string">'class'</span>:<span class="string">'primaryconsumers'</span>&#125;)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(css_class)</span></span></span><br></pre></td></tr></table></figure><p>第二种方法：BeautifulSoup中的特别关键字参数class_。</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">css<span class="number">_</span><span class="keyword">class</span> = soup.find(<span class="keyword">class</span><span class="number">_</span> = <span class="string">'primaryconsumers'</span>)</span><br></pre></td></tr></table></figure><p>基于定义的函数进行查找：</p><p>可以传递函数到find()来基于函数定义的条件查找。函数必须返回True或False。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_secondary_consumers</span><span class="params">(tag)</span>:</span></span><br><span class="line"><span class="keyword">return</span> tag.has_attr(<span class="string">'id'</span>) <span class="keyword">and</span> tag.get(<span class="string">'id'</span>) == <span class="string">'secondaryconsumers'</span></span><br><span class="line">secondary_consumer = soup.find(is_secondary_consumers)</span><br><span class="line">print(secondary_consumer.li.div.string)</span><br></pre></td></tr></table></figure><p>输出：fox</p><p>将方法进行组合后进行查找：</p><p>可以用其中任何方法进行组合进行查找，比如同时基于标签名和id号。</p><p><code>find_all()函数</code></p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find_all(<span class="name">name</span>, attrs, recursive, text, limit, **kwargs)</span><br></pre></td></tr></table></figure><p><strong>limit</strong>参数可以限制得到的结果的数目。</p><p>参照前面的邮件地址例子，得到所有邮件地址：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">email_ids = soup.find_all(text=emailid_regexp)</span><br><span class="line">print(email_ids)</span><br></pre></td></tr></table></figure><p>输出结果：[<a href="mailto:u&#39;abc@example.com" target="_blank" rel="noopener">u&#39;abc@example.com</a>‘,<a href="mailto:u&#39;xyz@example.com" target="_blank" rel="noopener">u&#39;xyz@example.com</a>‘,<a href="mailto:u&#39;foo@example.com" target="_blank" rel="noopener">u&#39;foo@example.com</a>‘]</p><p>使用limit参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">email_ids_limited = soup.find_all(text=emailid_regexp, limit = <span class="number">2</span>)</span><br><span class="line">print(email_ids_limited)</span><br></pre></td></tr></table></figure><p>限制得到两个结果，所以输出结果：[<a href="mailto:u&#39;abc@example.com" target="_blank" rel="noopener">u&#39;abc@example.com</a>‘,<a href="mailto:u&#39;xyz@example.com" target="_blank" rel="noopener">u&#39;xyz@example.com</a>‘]</p><p>可以向find函数传递True或False参数，如果传递True给find_all()，则返回soup对象的所有标签。对于find()来说，则返回soup对象的第一个标签。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">all_texts = soup.find_all(text=<span class="literal">True</span>)</span><br><span class="line">print(all_texts)</span><br></pre></td></tr></table></figure><p>同样，可以在传递text参数时传递一个字符串列表，那么find_all()会找到挨个在列表中定义过的字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">all_texts_in_list = soup.find_all(text=[<span class="string">'plants'</span>, <span class="string">'algae'</span>])</span><br><span class="line">print(all_texts_in_list)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">u'plants'</span>, <span class="string">u'alage'</span>]</span><br></pre></td></tr></table></figure><p>这个同样适用于查找标签，标签属性，定制属性和CSS类。如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div_li_tags = soup.find_all([<span class="string">'div'</span>, <span class="string">'li'</span>])</span><br></pre></td></tr></table></figure><p>并且find()和find_all()都会查找一个对象所有后辈们，不过可以通过recursive参数控制。(recursive回归，递归)</p><p>如果recursive=False，只会找到该对象的最近后代。</p><p>通过标签之间的关系进行查找</p><p>查找父标签</p><p>通过find_parents()或find_parent()。它们之间的不同类似于find()和find_all()的区别。</p><p><strong>find_parents()返回全部的相匹配的父标签，而find_parent()返回最近一个父标签。适用于find()的方法同样适用于这两个方法。</strong></p><p>在第一消费者例子中，可以找到离Primaryconsumer最近的ul父标签。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">primaryconsumers = soup.find_all(class_ = <span class="string">'primaryconsumerlist'</span>)</span><br><span class="line">primaryconsumer = primaryconsumers[<span class="number">0</span>]</span><br><span class="line">parent_ul = primaryconsumer.find_parents(<span class="string">'ul'</span>)</span><br><span class="line">print(parent_ul)</span><br></pre></td></tr></table></figure><p>一个简单的找到一个标签的父标签的方法是使用find_parent()却不带任何参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">immediateprimary_consumer_parent = primary_consumer.find_parent()</span><br></pre></td></tr></table></figure><p>查找同胞</p><p>标签在同一个等级，这些标签是同胞关系，比如参照上面金子塔例子，所有的ul标签就是同胞的关系。上面的ul标签下的producers，primaryconsumers，，</p><p>secondaryconsumers，teriaryconsumers就是同胞关系。</p><p>div下的plants和algae不是同胞关系，但是plants和临近的number是同胞关系。</p><p>Beautiful Soup自带查找同胞的方法。</p><p>比如find_next_siblings()和find_next_sibling()查找对象下面的同胞。(sibling兄弟姐妹)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">producers = soup.find(id = <span class="string">'producers'</span>)</span><br><span class="line">next_siblings = producers.find_next_siblings()</span><br><span class="line">print(next_siblings)</span><br></pre></td></tr></table></figure><p>输出结果将会输出与之临近的下面的所有同胞html代码。</p><p>查找下一个</p><p>对每一个标签来说，下一个元素可能会是定位字符串，标签对象或者其他BeautifulSoup对象，我们定义下一个元素为当前元素最靠近的元素 。</p><p>这不用于同胞定义，我们有方法可以找到我们想要标签的下一个其他元素对象。find_all_next()找到与当前元素最靠近的所有对象。而find_next()找到离当前元素最接近的对象。</p><p>比如，找到在第一个div标签后的所有li标签</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">first_div = soup.div</span><br><span class="line">all_li_tags = first_div.find_all_next(<span class="string">'li'</span>)</span><br></pre></td></tr></table></figure><p>查找上一个</p><p>与查找下一个相反的是查找前一个，用find_previous()和find_all_previous()。</p><h2 id="slwt的使用"><a href="#slwt的使用" class="headerlink" title="slwt的使用"></a>slwt的使用</h2><h2 id="代理IP的爬取"><a href="#代理IP的爬取" class="headerlink" title="代理IP的爬取"></a>代理IP的爬取</h2><hr><hr><p>【参考文章】</p><ul><li><a href="https://my.oschina.net/u/3914536/blog/1860929" target="_blank" rel="noopener">https://my.oschina.net/u/3914536/blog/1860929</a></li></ul><div><strong>🚩推荐阅读</strong><ul><li><a href="https://albert-5.cn/2019/05/06/sublime配置有关问题/">sublime配置有关问题</a></li><li><a href="https://albert-5.cn/2019/05/23/模拟退火算法/">模拟退火算法</a></li><li><a href="https://albert-5.cn/2019/11/16/Django迁移模型时报错/">Django迁移模型时报错</a></li><li><a href="https://xugaoxiang.com/2019/10/22/Python实用模块(十四)netifaces/">Python实用模块(十四)netifaces</a></li><li><a href="https://heyizhang.github.io/2019/09/15/python/spider_basic/">爬虫基础</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://albert-5.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://albert-5.cn/tags/python/"/>
    
      <category term="爬虫" scheme="https://albert-5.cn/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
